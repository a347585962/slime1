window.__require = function e(t, o, n) {
function i(a, s) {
if (!o[a]) {
if (!t[a]) {
var r = a.split("/");
r = r[r.length - 1];
if (!t[r]) {
var l = "function" == typeof __require && __require;
if (!s && l) return l(r, !0);
if (c) return c(r, !0);
throw new Error("Cannot find module '" + a + "'");
}
}
var d = o[a] = {
exports: {}
};
t[a][0].call(d.exports, function(e) {
return i(t[a][1][e] || e);
}, d, d.exports, e, t, o, n);
}
return o[a].exports;
}
for (var c = "function" == typeof __require && __require, a = 0; a < n.length; a++) i(n[a]);
return i;
}({
AddControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "18dfb+haP9P2ogn/wIRa1QY", "AddControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCB"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragCB"), c = e("../common/Script/CombinedComponent/MixComponentCB"), a = e("../common/Script/codebase/TransitionSceneCB"), s = e("./DataConfigCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("glue").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("foodColor").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("foodColor").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
this.activateToggle();
}.bind(this);
this.node.getChildByName("bottle").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("bottle").getComponent(i.default).enabled = !0;
}.bind(this);
this.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("spoon").getComponent(i.default).enabled = !0;
}.bind(this);
};
t.prototype.glueTouchEnd = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(40, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("glue/pourGlue", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("dish/mix0", this.node).runAction(cc.scaleTo(5, 1));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("glue/pourGlue", this.node).getComponent(cc.ParticleSystem).stopSystem();
cc.find("glue/pourGlue", this.node).active = !1;
this.node.getChildByName("colorScrollView").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(600, 0)))));
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue0_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue0_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.foodColorTouchEnd = function() {
this.node.getChildByName("colorScrollView").runAction(cc.moveBy(.5, cc.v2(-300, 0)));
this.node.getChildByName("foodColor").getComponent(i.default).enabled = !1;
this.node.getChildByName("foodColor").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(30, 250))), cc.callFunc(function() {
cc.find("foodColor/foodcoloring", this.node).active = !1;
cc.find("foodColor/foodcoloring_fall", this.node).active = !0;
cc.find("foodColor/dropColor", this.node).active = !0;
cc.find("foodColor/dropColor", this.node).getComponent(cc.AudioSource).play();
cc.find("dish/bowl_color", this.node).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("foodColor/dropColor", this.node).getComponent(cc.AudioSource).stop();
cc.find("foodColor/dropColor", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(600, 0))), cc.callFunc(function() {
this.node.getChildByName("bottle").getComponent(n.default).doShowAction();
this.changMixColor();
}.bind(this))));
};
t.prototype.foodColorTouchCancle = function() {
cc.find("foodColor/foodcoloring_shadow", this.node).active = !0;
};
t.prototype.foodColorTouchMove = function() {
cc.find("foodColor/foodcoloring_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.bottleTouchEnd = function() {
this.count = this.count + 1;
this.node.getChildByName("bottle").getComponent(i.default).enabled = !1;
this.node.getChildByName("bottle").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(40, 150))), cc.callFunc(function() {
cc.find("bottle/dropwater", this.node).active = !0;
cc.find("bottle/dropwater", this.node).getComponent(cc.AudioSource).play();
cc.find("dish/bowl_activator", this.node).runAction(cc.scaleTo(3, 1));
cc.find("bottle/mask/activator", this.node).runAction(cc.scaleTo(3, 1, 1 - .3 * this.count));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
cc.find("bottle/dropwater", this.node).getComponent(cc.AudioSource).stop();
cc.find("bottle/dropwater", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(600, 0))), cc.callFunc(function() {
this.node.getChildByName("spoon").getComponent(n.default).doShowAction();
this.node.getChildByName("bottle").setPosition(cc.v2(260, 0));
this.node.getChildByName("bottle").opacity = 0;
}.bind(this))));
};
t.prototype.mixStart = function() {
cc.find("dish/mix" + (this.count - 1), this.node).getComponent(c.default).startMix();
cc.find("dish/bowl_color", this.node).active = !1;
cc.find("dish/bowl_activator", this.node).setScale(0);
cc.find("spoon/spoon0", this.node).active = !1;
this.playAction();
};
t.prototype.mixEnd = function() {
cc.find("dish/mix" + (this.count - 1), this.node).getComponent(c.default).stopMix();
cc.find("spoon/spoon0", this.node).active = !0;
this.stopAction();
};
t.prototype.playAction = function() {
var e = cc.scaleTo(.7, 1, .95), t = cc.scaleTo(.8, .95, 1.08);
cc.find("dish/mix" + (this.count - 1), this.node).runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("dish/mix" + (this.count - 1), this.node).runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
cc.find("dish/mix" + (this.count - 1), this.node).stopAllActions();
};
t.prototype.mixFinish = function() {
cc.find("spoon/spoon0", this.node).active = !0;
this.stopAction();
this.node.getChildByName("spoon").getComponent(i.default).enabled = !1;
this.node.getChildByName("spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(600, 0)), cc.callFunc(function() {
this.node.getChildByName("spoon").setPosition(cc.v2(60, 100));
this.node.getChildByName("spoon").opacity = 0;
this.count < 3 && this.node.getChildByName("bottle").getComponent(n.default).doShowAction();
}.bind(this))));
if (3 == this.count) this.node.getChildByName("dish").runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, 0)), cc.scaleTo(.5, 1.1)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("chooseFoamCB");
}.bind(this)))); else {
var e = cc.find("dish/mix" + (this.count - 1), this.node).rotation;
cc.find("dish/mix" + (this.count - 1), this.node).active = !1;
cc.find("dish/mix" + this.count, this.node).active = !0;
cc.find("dish/mix" + this.count, this.node).setRotation(e);
}
};
t.prototype.colorClick = function(e, t) {
if (e.isChecked) {
this.sleepToggle();
this.node.getChildByName("foodColor").getComponent(i.default).enabled = !1;
s.default.getInstance().setColors(t);
cc.find("Canvas/foodColor").active = !0;
cc.find("Canvas/foodColor").opacity = 0;
cc.loader.loadRes("cakebatter/image/foodColor/foodcoloring_" + t, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/foodColor/foodcoloring").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/foodColor/foodcoloring_" + t + "_fall", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/foodColor/foodcoloring_fall").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/particleColor/" + t, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/foodColor/dropColor").getComponent(cc.ParticleSystem).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/particleColor/bowl_" + t, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/bowl_color").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.find("foodColor/foodcoloring", this.node).active = !0;
cc.find("foodColor/foodcoloring_fall", this.node).active = !1;
cc.find("Canvas/foodColor").getComponent(n.default).doShowAction();
}
};
t.prototype.changMixColor = function() {
var e = s.default.getInstance().getColors();
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "0", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix0").getComponent(c.default).mixPaths[0] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "1", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix0").getComponent(c.default).mixPaths[1] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "2", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix0").getComponent(c.default).mixPaths[2] = t;
cc.find("Canvas/dish/mix1/mixing0").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "3", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix1").getComponent(c.default).mixPaths[0] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "4", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix1").getComponent(c.default).mixPaths[1] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "5", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix1").getComponent(c.default).mixPaths[2] = t;
cc.find("Canvas/dish/mix2/mixing0").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "6", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix2").getComponent(c.default).mixPaths[0] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "7", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix2").getComponent(c.default).mixPaths[1] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/mix/mix_" + e + "8", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix2").getComponent(c.default).mixPaths[2] = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
};
t.prototype.activateToggle = function() {
cc.find("Canvas/colorScrollView/view/content").children.forEach(function(e) {
e.getComponent(cc.Toggle).interactable = !0;
});
};
t.prototype.sleepToggle = function() {
cc.find("Canvas/colorScrollView/view/content").children.forEach(function(e) {
e.getComponent(cc.Toggle).interactable = !1;
});
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentCB": "MixComponentCB",
"../common/Script/MoveInCB": "MoveInCB",
"../common/Script/codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"./DataConfigCB": "DataConfigCB"
} ],
AddControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22fb+haP9P2ogn/wIRa1QY", "AddControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragCS"), c = e("../common/Script/codebase/TransitionSceneCS"), a = e("./SpoonTouchEventCS"), s = e("./TipManagerCS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("glue").getComponent(n.default).actionCallBack = function() {
console.log("glue).getComponent(MoveIn)");
this.node.getChildByName("glue").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("activator").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("finger1").zIndex = 10;
this.node.getChildByName("finger1").active = !0;
this.node.getChildByName("activator").getComponent(i.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish/spoon").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/dish/tipRotate").active = !0;
cc.find("Canvas/dish/spoon").getComponent(i.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish_green/spoon").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/dish_green/tipRotate").active = !0;
cc.find("Canvas/dish_green").zIndex = 1;
cc.find("Canvas/dish_red").zIndex = 0;
cc.find("Canvas/dish_green/spoon").getComponent(i.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish_red/spoon").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/dish_red/tipRotate").active = !0;
cc.find("Canvas/dish_red/spoon").getComponent(i.default).enabled = !0;
}.bind(this);
this.node.getChildByName("waterCup").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("finger1").active = !0;
this.node.getChildByName("waterCup").getComponent(i.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish_red/glitter").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_red/glitter").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
this.node.getChildByName("decorateParticle").setPosition(cc.find("Canvas/dish").getPosition());
cc.find("Canvas/dish_red/glitter").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_red/tipMove").active = !0;
cc.find("Canvas/dish_red/glitter").getComponent(i.default).enabled = !0;
}.bind(this))));
}.bind(this);
cc.find("Canvas/dish_green/glitter").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_green/glitter").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
cc.find("Canvas/dish_green/glitter").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(-200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_green/tipMove").active = !0;
cc.find("Canvas/dish_green/glitter").getComponent(i.default).enabled = !0;
}.bind(this))));
}.bind(this);
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_red/foodcolor").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
cc.find("Canvas/dish_red/foodcolor").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_red/tipMove").active = !0;
cc.find("Canvas/dish_red/foodcolor").getComponent(i.default).enabled = !0;
}.bind(this))));
}.bind(this);
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_green/foodcolor").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
cc.find("Canvas/dish_green/foodcolor").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(-200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_green/tipMove").active = !0;
cc.find("Canvas/dish_green/foodcolor").getComponent(i.default).enabled = !0;
}.bind(this))));
}.bind(this);
};
t.prototype.glueTouchEnd = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(-50, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("glue/pourGlue", this.node).active = !0;
cc.find("dish/mix/ball_glue", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("glue/pourGlue", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("waterCup").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue0_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue0_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.activatorTouchEnd = function() {
this.node.getChildByName("activator").getComponent(i.default).enabled = !1;
this.node.getChildByName("activator").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -145), cc.moveTo(.5, cc.v2(160, 300))), cc.callFunc(function() {
cc.find("activator/activator0_water", this.node).active = !1;
cc.find("activator/activator1_water", this.node).active = !0;
cc.find("activator/dropwater", this.node).active = !0;
cc.find("activator/dropwater", this.node).getComponent(cc.AudioSource).play();
cc.find("dish_red/mix1/activator", this.node).setPosition(cc.v2(-50, -50));
cc.find("dish_red/mix1/activator", this.node).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.moveTo(.5, cc.v2(-90, 300)), cc.callFunc(function() {
cc.find("activator/dropwater", this.node).active = !0;
cc.find("activator/dropwater", this.node).getComponent(cc.AudioSource).play();
cc.find("dish_green/mix1/activator", this.node).setPosition(cc.v2(-50, -50));
cc.find("dish_green/mix1/activator", this.node).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("activator/dropwater", this.node).getComponent(cc.AudioSource).stop();
cc.find("activator/dropwater", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
cc.find("Canvas/dish_red/tipRotate").active = !0;
cc.find("Canvas/dish_green/tipRotate").active = !0;
cc.find("Canvas/dish_green/spoon").getComponent(i.default).enabled = !0;
cc.find("Canvas/dish_red/spoon").getComponent(i.default).enabled = !0;
}.bind(this))));
};
t.prototype.activatorTouchCancle = function() {
cc.find("activator/activator_shadow", this.node).active = !0;
};
t.prototype.activatorTouchMove = function() {
this.node.getChildByName("finger1").active = !1;
cc.find("activator/activator_shadow", this.node).active = !1;
};
t.prototype.waterCupTouchStart = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.waterCupTouchEnd = function() {
this.node.getChildByName("waterCup").getComponent(i.default).enabled = !1;
this.node.getChildByName("waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(-80, 270))), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").active = !0;
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterCup/mask").active = !0;
cc.find("Canvas/waterCup/water").active = !1;
cc.find("Canvas/waterCup/mask/water_fall").runAction(cc.moveBy(2, cc.v2(-80, 0)));
cc.find("Canvas/dish/mix/bowl_water").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterCup/pourWater").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/dish/spoon").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.waterCupTouchCancle = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !0;
};
t.prototype.glitterTouchMove = function(e) {
var t = e.target, o = t.parent, n = t.getPosition();
if ("dish_green" == o.name) {
cc.find("Canvas/dish_red/glitter").getComponent(i.default) && (cc.find("Canvas/dish_red/glitter").getComponent(i.default).enabled = !1);
cc.find("Canvas/dish_red/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(i.default).enabled = !1);
if (n.x > 100) {
o.zIndex = 1;
cc.find("Canvas/dish_red").zIndex = 0;
}
} else {
cc.find("Canvas/dish_green/glitter").getComponent(i.default) && (cc.find("Canvas/dish_green/glitter").getComponent(i.default).enabled = !1);
cc.find("Canvas/dish_green/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(i.default).enabled = !1);
if (n.x < -100) {
o.zIndex = 1;
cc.find("Canvas/dish_green").zIndex = 0;
}
}
};
t.prototype.glitterTouchEnd = function(e) {
cc.find("Canvas/dish_green/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_red/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_green/glitter").getComponent(i.default) && (cc.find("Canvas/dish_green/glitter").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_red/glitter").getComponent(i.default) && (cc.find("Canvas/dish_red/glitter").getComponent(i.default).enabled = !0);
var t = e.target, o = t.parent;
o.getChildByName("tipMove").active = !1;
t.removeComponent(i.default);
t.runAction(cc.sequence(cc.moveTo(.5, cc.v2(100, 150)), cc.callFunc(function() {
t.getComponent(cc.AudioSource).play();
cc.find("mask/glitter", t).runAction(cc.moveBy(2, cc.v2(-100, -100)));
t.getChildByName("pourGlitter").active = !0;
cc.find("mix/glitter", o).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
t.getComponent(cc.AudioSource).stop();
t.getChildByName("pourGlitter").active = !1;
o.getChildByName("foodcolor").getComponent(n.default).doShowAction();
o.getChildByName("foodcolor").getComponent(i.default).enabled = !1;
}.bind(this)), cc.moveBy(.5, cc.v2(1e3, 0))));
};
t.prototype.foodColorTouchMove = function(e) {
var t = e.target, o = t.parent, n = t.getPosition();
if ("dish_green" == o.name) {
cc.find("Canvas/dish_red/glitter").getComponent(i.default) && (cc.find("Canvas/dish_red/glitter").getComponent(i.default).enabled = !1);
cc.find("Canvas/dish_red/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(i.default).enabled = !1);
if (n.x > 100) {
o.zIndex = 1;
cc.find("Canvas/dish_red").zIndex = 0;
}
} else {
cc.find("Canvas/dish_green/glitter").getComponent(i.default) && (cc.find("Canvas/dish_green/glitter").getComponent(i.default).enabled = !1);
cc.find("Canvas/dish_green/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(i.default).enabled = !1);
if (n.x < -100) {
o.zIndex = 1;
cc.find("Canvas/dish_green").zIndex = 0;
}
}
};
t.prototype.touchCancle = function() {
cc.find("Canvas/dish_green/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_red/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_green/glitter").getComponent(i.default) && (cc.find("Canvas/dish_green/glitter").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_red/glitter").getComponent(i.default) && (cc.find("Canvas/dish_red/glitter").getComponent(i.default).enabled = !0);
};
t.prototype.foodColorTouchEnd = function(e) {
cc.find("Canvas/dish_green/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_red/foodcolor").getComponent(i.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_green/glitter").getComponent(i.default) && (cc.find("Canvas/dish_green/glitter").getComponent(i.default).enabled = !0);
cc.find("Canvas/dish_red/glitter").getComponent(i.default) && (cc.find("Canvas/dish_red/glitter").getComponent(i.default).enabled = !0);
var t = e.target, o = t.parent;
o.getChildByName("tipMove").active = !1;
t.removeComponent(i.default);
t.runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(50, 250)), cc.rotateTo(.5, -90)), cc.callFunc(function() {
t.getComponent(cc.AudioSource).play();
t.getChildByName("foodcolour3").active = !0;
t.getChildByName("foodcolour4").active = !0;
t.getChildByName("foodcolour1").active = !1;
t.getChildByName("foodcolour2").active = !1;
t.getChildByName("pourColor").active = !0;
cc.find("mix/foodcolor", o).runAction(cc.scaleTo(2, 2));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
t.getComponent(cc.AudioSource).stop();
t.getChildByName("pourColor").active = !1;
}.bind(this)), cc.rotateTo(.5, 0), cc.callFunc(function() {
t.getChildByName("foodcolour3").active = !1;
t.getChildByName("foodcolour4").active = !1;
t.getChildByName("foodcolour1").active = !0;
t.getChildByName("foodcolour2").active = !0;
}.bind(this)), cc.moveBy(.5, cc.v2(1e3, 0)), cc.callFunc(function() {
o.getChildByName("spoon").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.stopAction = function() {
cc.find("dish/mix", this.node).stopAllActions();
cc.find("dish/mix", this.node).setScale(1);
};
t.prototype.mixFinish = function() {
this.stopAction();
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
this.node.getChildByName("decorateParticle").setPosition(cc.find("Canvas/dish").getPosition());
cc.find("Canvas/dish/spoon").getComponent(i.default).enabled = !1;
cc.find("Canvas/dish/spoon/spoon0").active = !0;
cc.find("Canvas/dish/spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(1e3, 0)), cc.callFunc(function() {
cc.find("Canvas/dish/spoon").opacity = 0;
cc.find("Canvas/dish").runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, 150)), cc.scaleTo(.5, .6)), cc.callFunc(function() {
cc.find("Canvas/dish_green").getComponent(n.default).doShowAction();
cc.find("Canvas/dish_red").getComponent(n.default).doShowAction();
}.bind(this)), cc.delayTime(2), cc.moveTo(.5, cc.v2(-50, 50)), cc.callFunc(function() {
cc.find("Canvas/dish_green/mix").runAction(cc.scaleTo(4, 1));
cc.find("Canvas/dish/mix").runAction(cc.scaleTo(4, .8));
cc.find("Canvas/dish/pour_green").active = !0;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
cc.find("Canvas/dish/pour_green").active = !1;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
}.bind(this)), cc.moveTo(.5, cc.v2(50, 50)), cc.callFunc(function() {
cc.find("Canvas/dish_red/mix").runAction(cc.scaleTo(4, 1));
cc.find("Canvas/dish/mix").runAction(cc.scaleTo(4, 0));
cc.find("Canvas/dish/pour_red").active = !0;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
cc.find("Canvas/dish/pour_red").active = !1;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
}.bind(this)), cc.moveTo(.5, cc.v2(1e3, 0)), cc.callFunc(function() {
cc.find("Canvas/dish").opacity = 0;
cc.find("Canvas/dish_red").runAction(cc.moveBy(.5, cc.v2(0, 100)));
cc.find("Canvas/dish_green").runAction(cc.moveBy(.5, cc.v2(0, 100)));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
s.default.getInstance().jumpTips();
cc.find("Canvas/dish_red/glitter").getComponent(n.default).doShowAction();
cc.find("Canvas/dish_green/glitter").getComponent(n.default).doShowAction();
}.bind(this))));
}.bind(this))));
};
t.prototype.mixColorFinish = function(e) {
var t = e.node, o = t.parent;
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
this.node.getChildByName("decorateParticle").setPosition(o.getPosition());
o.getChildByName("spoon").getComponent(i.default).enabled = !1;
o.getChildByName("spoon").getChildByName("spoon0").active = !0;
o.getChildByName("spoon").runAction(cc.moveTo(.5, cc.v2(150, 100)));
this.count = this.count + 1;
t.stopAllActions();
t.setScale(1);
if ("mix" == t.name) {
o.getChildByName("mix1").rotation = t.rotation;
t.active = !1;
o.getChildByName("mix1").active = !0;
o.getChildByName("spoon").getComponent(a.default).mixNode = o.getChildByName("mix1");
if (2 == this.count) {
s.default.getInstance().jumpTips();
cc.find("Canvas/activator").getComponent(n.default).doShowAction();
cc.find("Canvas/activator").zIndex = 4;
}
} else {
o.getChildByName("spoon").runAction(cc.moveBy(.5, cc.v2(1e3, 0)));
if (4 == this.count) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("rubSlimeCS");
}.bind(this))));
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/MoveInCS": "MoveInCS",
"../common/Script/codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"./SpoonTouchEventCS": "SpoonTouchEventCS",
"./TipManagerCS": "TipManagerCS"
} ],
AddControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21fb+haP9P2ogn/wIRa1QY", "AddControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), i = e("../common/Script/codebase/TransitionSceneFS"), c = e("./SpoonTouchEventFS"), a = e("./TipManagerFS"), s = e("../common/Script/compoent/MoveInFS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("glue").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("glue").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("activator").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("finger1").zIndex = 10;
this.node.getChildByName("finger1").active = !0;
this.node.getChildByName("activator").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish/spoon").getComponent(s.default).actionCallBack = function() {
cc.find("Canvas/dish/tipRotate").active = !0;
cc.find("Canvas/dish/spoon").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish_green/spoon").getComponent(s.default).actionCallBack = function() {
cc.find("Canvas/dish_green/tipRotate").active = !0;
cc.find("Canvas/dish_green").zIndex = 1;
cc.find("Canvas/dish_red").zIndex = 0;
cc.find("Canvas/dish_green/spoon").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish_red/spoon").getComponent(s.default).actionCallBack = function() {
cc.find("Canvas/dish_red/tipRotate").active = !0;
cc.find("Canvas/dish_red/spoon").getComponent(n.default).enabled = !0;
}.bind(this);
this.node.getChildByName("waterCup").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("finger1").active = !0;
this.node.getChildByName("waterCup").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/dish_red/glitter").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_red/glitter").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
this.node.getChildByName("decorateParticle").setPosition(cc.find("Canvas/dish").getPosition());
cc.find("Canvas/dish_red/glitter").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_red/tipMove").active = !0;
cc.find("Canvas/dish_red/glitter").getComponent(n.default).enabled = !0;
}.bind(this))));
}.bind(this);
cc.find("Canvas/dish_green/glitter").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_green/glitter").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
cc.find("Canvas/dish_green/glitter").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(-200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_green/tipMove").active = !0;
cc.find("Canvas/dish_green/glitter").getComponent(n.default).enabled = !0;
}.bind(this))));
}.bind(this);
cc.find("Canvas/dish_red/foodcolor").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_red/foodcolor").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
cc.find("Canvas/dish_red/foodcolor").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_red/tipMove").active = !0;
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).enabled = !0;
}.bind(this))));
}.bind(this);
cc.find("Canvas/dish_green/foodcolor").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(cc.find("Canvas/dish_green/foodcolor").convertToWorldSpaceAR(cc.v2(0, 0)));
this.node.getChildByName("decorateParticle").setPosition(e);
cc.find("Canvas/dish_green/foodcolor").runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(-200, 200)), cc.callFunc(function() {
cc.find("Canvas/dish_green/tipMove").active = !0;
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).enabled = !0;
}.bind(this))));
}.bind(this);
};
t.prototype.glueTouchEnd = function() {
this.node.getChildByName("glue").getComponent(n.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(-50, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("glue/pourGlue", this.node).active = !0;
cc.find("dish/mix/ball_glue", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("glue/pourGlue", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("waterCup").getComponent(s.default).doShowAction();
}.bind(this))));
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue0_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue0_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.activatorTouchEnd = function() {
this.node.getChildByName("activator").getComponent(n.default).enabled = !1;
this.node.getChildByName("activator").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -145), cc.moveTo(.5, cc.v2(160, 300))), cc.callFunc(function() {
cc.find("activator/activator0_water", this.node).active = !1;
cc.find("activator/activator1_water", this.node).active = !0;
cc.find("activator/dropwater", this.node).active = !0;
cc.find("activator/dropwater", this.node).getComponent(cc.AudioSource).play();
cc.find("dish_red/mix1/activator", this.node).setPosition(cc.v2(-50, -50));
cc.find("dish_red/mix1/activator", this.node).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.moveTo(.5, cc.v2(-90, 300)), cc.callFunc(function() {
cc.find("activator/dropwater", this.node).active = !0;
cc.find("activator/dropwater", this.node).getComponent(cc.AudioSource).play();
cc.find("dish_green/mix1/activator", this.node).setPosition(cc.v2(-50, -50));
cc.find("dish_green/mix1/activator", this.node).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("activator/dropwater", this.node).getComponent(cc.AudioSource).stop();
cc.find("activator/dropwater", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
cc.find("Canvas/dish_red/tipRotate").active = !0;
cc.find("Canvas/dish_green/tipRotate").active = !0;
cc.find("Canvas/dish_green/spoon").getComponent(n.default).enabled = !0;
cc.find("Canvas/dish_red/spoon").getComponent(n.default).enabled = !0;
}.bind(this))));
};
t.prototype.activatorTouchCancle = function() {
cc.find("activator/activator_shadow", this.node).active = !0;
};
t.prototype.activatorTouchMove = function() {
this.node.getChildByName("finger1").active = !1;
cc.find("activator/activator_shadow", this.node).active = !1;
};
t.prototype.waterCupTouchStart = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.waterCupTouchEnd = function() {
this.node.getChildByName("waterCup").getComponent(n.default).enabled = !1;
this.node.getChildByName("waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(-80, 270))), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").active = !0;
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterCup/mask").active = !0;
cc.find("Canvas/waterCup/water").active = !1;
cc.find("Canvas/waterCup/mask/water_fall").runAction(cc.moveBy(2, cc.v2(-80, 0)));
cc.find("Canvas/dish/mix/bowl_water").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterCup/pourWater").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/dish/spoon").getComponent(s.default).doShowAction();
}.bind(this))));
};
t.prototype.waterCupTouchCancle = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !0;
};
t.prototype.glitterTouchMove = function(e) {
var t = e.target, o = t.parent, i = t.getPosition();
if ("dish_green" == o.name) {
cc.find("Canvas/dish_red/glitter").getComponent(n.default).enabled = !1;
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).enabled = !1;
if (i.x > 100) {
o.zIndex = 1;
cc.find("Canvas/dish_red").zIndex = 0;
}
} else {
cc.find("Canvas/dish_green/glitter").getComponent(n.default).enabled = !1;
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).enabled = !1;
if (i.x < -100) {
o.zIndex = 1;
cc.find("Canvas/dish_green").zIndex = 0;
}
}
};
t.prototype.glitterTouchEnd = function(e) {
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_green/glitter").getComponent(n.default) && (cc.find("Canvas/dish_green/glitter").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_red/glitter").getComponent(n.default) && (cc.find("Canvas/dish_red/glitter").getComponent(n.default).enabled = !0);
var t = e.target, o = t.parent;
o.getChildByName("tipMove").active = !1;
t.removeComponent(n.default);
t.runAction(cc.sequence(cc.moveTo(.5, cc.v2(100, 150)), cc.callFunc(function() {
t.getComponent(cc.AudioSource).play();
cc.find("mask/glitter", t).runAction(cc.moveBy(2, cc.v2(-100, -100)));
t.getChildByName("pourGlitter").active = !0;
cc.find("mix/glitter", o).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
t.getComponent(cc.AudioSource).stop();
t.getChildByName("pourGlitter").active = !1;
o.getChildByName("foodcolor").getComponent(s.default).doShowAction();
o.getChildByName("foodcolor").getComponent(n.default).enabled = !1;
}.bind(this)), cc.moveBy(.5, cc.v2(1e3, 0))));
};
t.prototype.foodColorTouchMove = function(e) {
var t = e.target, o = t.parent, i = t.getPosition();
if ("dish_green" == o.name) {
cc.find("Canvas/dish_red/glitter").getComponent(n.default).enabled = !1;
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).enabled = !1;
if (i.x > 100) {
o.zIndex = 1;
cc.find("Canvas/dish_red").zIndex = 0;
}
} else {
cc.find("Canvas/dish_green/glitter").getComponent(n.default).enabled = !1;
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).enabled = !1;
if (i.x < -100) {
o.zIndex = 1;
cc.find("Canvas/dish_green").zIndex = 0;
}
}
};
t.prototype.touchCancle = function() {
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_green/glitter").getComponent(n.default) && (cc.find("Canvas/dish_green/glitter").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_red/glitter").getComponent(n.default) && (cc.find("Canvas/dish_red/glitter").getComponent(n.default).enabled = !0);
};
t.prototype.foodColorTouchEnd = function(e) {
cc.find("Canvas/dish_green/foodcolor").getComponent(n.default) && (cc.find("Canvas/dish_green/foodcolor").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_red/foodcolor").getComponent(n.default) && (cc.find("Canvas/dish_red/foodcolor").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_green/glitter").getComponent(n.default) && (cc.find("Canvas/dish_green/glitter").getComponent(n.default).enabled = !0);
cc.find("Canvas/dish_red/glitter").getComponent(n.default) && (cc.find("Canvas/dish_red/glitter").getComponent(n.default).enabled = !0);
var t = e.target, o = t.parent;
o.getChildByName("tipMove").active = !1;
t.removeComponent(n.default);
t.runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(50, 250)), cc.rotateTo(.5, -90)), cc.callFunc(function() {
t.getComponent(cc.AudioSource).play();
t.getChildByName("foodcolour3").active = !0;
t.getChildByName("foodcolour4").active = !0;
t.getChildByName("foodcolour1").active = !1;
t.getChildByName("foodcolour2").active = !1;
t.getChildByName("pourColor").active = !0;
cc.find("mix/foodcolor", o).runAction(cc.scaleTo(2, 2));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
t.getComponent(cc.AudioSource).stop();
t.getChildByName("pourColor").active = !1;
}.bind(this)), cc.rotateTo(.5, 0), cc.callFunc(function() {
t.getChildByName("foodcolour3").active = !1;
t.getChildByName("foodcolour4").active = !1;
t.getChildByName("foodcolour1").active = !0;
t.getChildByName("foodcolour2").active = !0;
}.bind(this)), cc.moveBy(.5, cc.v2(1e3, 0)), cc.callFunc(function() {
o.getChildByName("spoon").getComponent(s.default).doShowAction();
}.bind(this))));
};
t.prototype.stopAction = function() {
cc.find("dish/mix", this.node).stopAllActions();
cc.find("dish/mix", this.node).setScale(1);
};
t.prototype.mixFinish = function() {
this.stopAction();
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
this.node.getChildByName("decorateParticle").setPosition(cc.find("Canvas/dish").getPosition());
cc.find("Canvas/dish/spoon").getComponent(n.default).enabled = !1;
cc.find("Canvas/dish/spoon/spoon0").active = !0;
cc.find("Canvas/dish/spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(1e3, 0)), cc.callFunc(function() {
cc.find("Canvas/dish/spoon").opacity = 0;
cc.find("Canvas/dish").runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, 150)), cc.scaleTo(.5, .6)), cc.callFunc(function() {
cc.find("Canvas/dish_green").getComponent(s.default).doShowAction();
cc.find("Canvas/dish_red").getComponent(s.default).doShowAction();
}.bind(this)), cc.delayTime(2), cc.moveTo(.5, cc.v2(-50, 50)), cc.callFunc(function() {
cc.find("Canvas/dish_green/mix").runAction(cc.scaleTo(4, 1));
cc.find("Canvas/dish/mix").runAction(cc.scaleTo(4, .8));
cc.find("Canvas/dish/pour_green").active = !0;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
cc.find("Canvas/dish/pour_green").active = !1;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
}.bind(this)), cc.moveTo(.5, cc.v2(50, 50)), cc.callFunc(function() {
cc.find("Canvas/dish_red/mix").runAction(cc.scaleTo(4, 1));
cc.find("Canvas/dish/mix").runAction(cc.scaleTo(4, 0));
cc.find("Canvas/dish/pour_red").active = !0;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
cc.find("Canvas/dish/pour_red").active = !1;
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
}.bind(this)), cc.moveTo(.5, cc.v2(1e3, 0)), cc.callFunc(function() {
cc.find("Canvas/dish").opacity = 0;
cc.find("Canvas/dish_red").runAction(cc.moveBy(.5, cc.v2(0, 100)));
cc.find("Canvas/dish_green").runAction(cc.moveBy(.5, cc.v2(0, 100)));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.getInstance().jumpTips();
cc.find("Canvas/dish_red/glitter").getComponent(s.default).doShowAction();
cc.find("Canvas/dish_green/glitter").getComponent(s.default).doShowAction();
}.bind(this))));
}.bind(this))));
};
t.prototype.mixColorFinish = function(e) {
var t = e.node, o = t.parent;
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
this.node.getChildByName("decorateParticle").setPosition(o.getPosition());
o.getChildByName("spoon").getComponent(n.default).enabled = !1;
o.getChildByName("spoon").getChildByName("spoon0").active = !0;
o.getChildByName("spoon").runAction(cc.moveTo(.5, cc.v2(150, 100)));
this.count = this.count + 1;
t.stopAllActions();
t.setScale(1);
if ("mix" == t.name) {
o.getChildByName("mix1").rotation = t.rotation;
t.active = !1;
o.getChildByName("mix1").active = !0;
o.getChildByName("spoon").getComponent(c.default).mixNode = o.getChildByName("mix1");
if (2 == this.count) {
a.default.getInstance().jumpTips();
cc.find("Canvas/activator").getComponent(s.default).doShowAction();
cc.find("Canvas/activator").zIndex = 4;
}
} else {
o.getChildByName("spoon").runAction(cc.moveBy(.5, cc.v2(1e3, 0)));
if (4 == this.count) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
i.default.changeScene("rubSlime");
}.bind(this))));
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/compoent/MoveInFS": "MoveInFS",
"./SpoonTouchEventFS": "SpoonTouchEventFS",
"./TipManagerFS": "TipManagerFS"
} ],
AddControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11fb+haP9P2ogn/wIRa1QY", "AddControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInHC"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragHC"), c = e("../common/Script/CombinedComponent/MixComponentHC"), a = e("../common/Script/codebase/TransitionSceneHC"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("glue").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !0;
}.bind(this);
this.node.getChildByName("warm").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("warm").getComponent(i.default).enabled = !0;
}.bind(this);
this.node.getChildByName("soda").getComponent(n.default).actionCallBack = function() {
cc.find("soda/soda_scoop", this.node).getComponent(cc.Button).interactable = !0;
cc.find("soda/tipClick", this.node).active = !0;
}.bind(this);
this.node.getChildByName("pure").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("pure").getComponent(i.default).enabled = !0;
}.bind(this);
this.node.getChildByName("chocolate").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("chocolate").getComponent(i.default).enabled = !0;
}.bind(this);
this.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("spoon").getComponent(i.default).enabled = !0;
}.bind(this);
};
t.prototype.glueTouchEnd = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(30, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("glue/pourGlue", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("dish/mix", this.node).runAction(cc.scaleTo(5, 1));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("glue/pourGlue", this.node).getComponent(cc.ParticleSystem).stopSystem();
cc.find("glue/pourGlue", this.node).active = !1;
this.node.getChildByName("warm").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(1600, 230)))));
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue0_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue0_shadow", this.node).active = !1;
};
t.prototype.warmTouchEnd = function() {
this.node.getChildByName("warm").getComponent(i.default).enabled = !1;
this.node.getChildByName("warm").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -80), cc.moveTo(.5, cc.v2(70, 100))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("warm/warm0", this.node).active = !1;
cc.find("warm/warm1", this.node).active = !0;
cc.find("warm/pourWarm", this.node).active = !0;
cc.find("warm/pourWarm", this.node).setScale(0);
cc.find("warm/pourWarm", this.node).runAction(cc.scaleTo(.5, 1));
cc.find("dish/warm", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("warm/pourWarm", this.node).active = !1;
cc.find("warm/warm0", this.node).active = !0;
cc.find("warm/warm1", this.node).active = !1;
this.node.getChildByName("chocolate").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(1600, 100)))));
};
t.prototype.warmTouchCancle = function() {
cc.find("warm/warm0_shadow", this.node).active = !0;
};
t.prototype.warmTouchMove = function() {
(cc.find("warm/warm0_shadow", this.node).active = !0) && (cc.find("warm/warm0_shadow", this.node).active = !1);
};
t.prototype.spoonTouchStart = function() {
cc.find("soda/finger", this.node).active = !1;
};
t.prototype.spoonTouchEnd = function() {
cc.find("soda/soda_scoop", this.node).getComponent(i.default).enabled = !1;
cc.find("soda/soda_scoop", this.node).runAction(cc.sequence(cc.moveTo(.5, cc.v2(-212, 320)), cc.callFunc(function() {
this.node.getChildByName("soda").getComponent(cc.AudioSource).play();
cc.find("soda/soda_scoop/pourSugar", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("dish/soda", this.node).runAction(cc.scaleTo(2, 1));
cc.find("soda/soda_scoop/soda_scoop0", this.node).runAction(cc.scaleTo(1, 0));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
this.node.getChildByName("soda").getComponent(cc.AudioSource).stop();
cc.find("soda/soda_scoop/pourSugar", this.node).getComponent(cc.ParticleSystem).stopSystem();
cc.find("soda/soda_scoop/pourSugar", this.node).active = !1;
this.node.getChildByName("pure").getComponent(n.default).doShowAction();
}.bind(this)), cc.moveTo(.5, cc.v2(100, 170)), cc.callFunc(function() {
this.node.getChildByName("soda").runAction(cc.moveTo(.5, cc.v2(1600, 0)));
}.bind(this))));
};
t.prototype.spoonClick = function() {
cc.find("soda/tipClick", this.node).active = !1;
cc.find("soda/soda_scoop", this.node).rotation = -5;
cc.find("soda/soda_scoop", this.node).setPosition(cc.v2(105, 175));
cc.find("soda/soda_scoop", this.node).runAction(cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(100, 170))));
cc.find("soda/soda2", this.node).runAction(cc.moveBy(.5, cc.v2(0, -15)));
cc.find("soda/soda_scoop/soda_scoop0", this.node).runAction(cc.sequence(cc.scaleTo(.5, 1), cc.callFunc(function() {
cc.find("soda/finger", this.node).active = !0;
cc.find("soda/soda_scoop", this.node).getComponent(i.default).enabled = !0;
}.bind(this))));
};
t.prototype.pureTouchEnd = function() {
this.node.getChildByName("pure").getComponent(i.default).enabled = !1;
this.node.getChildByName("pure").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(0, 260))), cc.callFunc(function() {
cc.find("pure/pure0", this.node).active = !1;
cc.find("pure/pure1", this.node).active = !0;
cc.find("pure/pourPure", this.node).runAction(cc.sequence(cc.scaleTo(.5, 1), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("pure/pourPure", this.node).getComponent(cc.Animation).play("pourPure");
}.bind(this))));
cc.find("dish/pure", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("pure/pourPure", this.node).getComponent(cc.Animation).stop();
cc.find("pure/pourPure", this.node).active = !1;
cc.find("pure/pure0", this.node).active = !0;
cc.find("pure/pure1", this.node).active = !1;
this.node.getChildByName("dish").runAction(cc.moveTo(.5, cc.v2(0, 0)));
this.node.getChildByName("spoon").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(1600, 260)))));
};
t.prototype.pureTouchCancle = function() {
cc.find("pure/pure_shadow", this.node).active = !0;
};
t.prototype.pureTouchMove = function() {
cc.find("pure/pure_shadow", this.node).active = !1;
};
t.prototype.chocolateTouchEnd = function() {
this.node.getChildByName("chocolate").getComponent(i.default).enabled = !1;
this.node.getChildByName("chocolate").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -80), cc.moveTo(.5, cc.v2(10, 150))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("chocolate/pourChocolate", this.node).active = !0;
cc.find("chocolate/chocolate1", this.node).active = !0;
cc.find("chocolate/chocolate0", this.node).active = !1;
cc.find("dish/chocolate", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("chocolate/chocolate1", this.node).active = !1;
cc.find("chocolate/chocolate0", this.node).active = !0;
cc.find("chocolate/pourChocolate", this.node).active = !1;
this.node.getChildByName("soda").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(1600, 150)))));
};
t.prototype.chocolateTouchCancle = function() {
cc.find("chocolate/chocolate_shadow", this.node).active = !0;
};
t.prototype.chocolateTouchMove = function() {
cc.find("chocolate/chocolate_shadow", this.node).active = !1;
};
t.prototype.mixStart = function() {
cc.find("dish/mix", this.node).getComponent(c.default).startMix();
cc.find("dish/chocolate", this.node).active = !1;
cc.find("dish/warm", this.node).active = !1;
cc.find("dish/soda", this.node).active = !1;
cc.find("dish/pure", this.node).active = !1;
cc.find("spoon/spoon0", this.node).active = !1;
this.playAction();
};
t.prototype.mixEnd = function() {
cc.find("dish/mix", this.node).getComponent(c.default).stopMix();
cc.find("spoon/spoon0", this.node).active = !0;
this.stopAction();
};
t.prototype.playAction = function() {
var e = cc.scaleTo(.7, 1, .95), t = cc.scaleTo(.8, .95, 1.08);
cc.find("dish/mix", this.node).runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("dish/mix", this.node).runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
cc.find("dish/mix", this.node).stopAllActions();
};
t.prototype.mixFinish = function() {
this.stopAction();
this.node.getChildByName("spoon").runAction(cc.moveBy(.5, cc.v2(1600, 0)));
this.node.getChildByName("spoon").getComponent(i.default).enabled = !1;
this.node.getChildByName("dish").runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("makeHC");
}.bind(this))));
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentHC": "MixComponentHC",
"../common/Script/MoveInHC": "MoveInHC",
"../common/Script/codebase/SpriteDrag/SpriteDragHC": "SpriteDragHC",
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC"
} ],
AddControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12fb+haP9P2ogn/wIRa1QY", "AddControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInRS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragRS"), c = e("../common/Script/codebase/TransitionSceneRS"), a = e("./HandTouchEventRS"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
t.foamCount = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("glue").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("foam").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("foam").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("waterBowl").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("waterBowl").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("spoon").getComponent(i.default).enabled = !0;
}.bind(this);
};
t.prototype.glueTouchEnd = function() {
this.node.getChildByName("glue").getComponent(i.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(0, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("glue/pourGlue", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("dish/mix0", this.node).runAction(cc.scaleTo(5, 1));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("glue/pourGlue", this.node).getComponent(cc.ParticleSystem).stopSystem();
cc.find("glue/pourGlue", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("waterBowl").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue0_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue0_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.foamTouchEnd = function() {
this.node.getChildByName("foam").getComponent(i.default).enabled = !1;
this.node.getChildByName("foam").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -60), cc.moveTo(.5, cc.v2(70, 50))), cc.callFunc(function() {
this.node.getChildByName("foam").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("tipClick").active = !0;
}.bind(this))));
};
t.prototype.foamTouchCancle = function() {
cc.find("foam/foam_shadow", this.node).active = !0;
};
t.prototype.foamTouchMove = function() {
cc.find("foam/foam_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.foamClick = function() {
this.node.getChildByName("foam").getComponent(cc.Button).interactable = !1;
this.node.getChildByName("foam").getComponent(cc.AudioSource).play();
this.node.getChildByName("tipClick").active = !1;
cc.find("Canvas/foam/foam0").runAction(cc.sequence(cc.moveBy(.2, cc.v2(0, -20)), cc.moveBy(.2, cc.v2(0, 20))));
var e = this.node.getChildByName("foam").convertToNodeSpaceAR(cc.find("Canvas/dish/bowl_foam" + this.foamCount).convertToWorldSpaceAR(cc.v2(0, 0)));
cc.find("Canvas/foam/foam2").runAction(cc.sequence(cc.spawn(cc.scaleTo(.5, 1), cc.moveTo(.5, e)), cc.callFunc(function() {
cc.find("Canvas/foam/foam2").setScale(0);
cc.find("Canvas/foam/foam2").setPosition(cc.v2(-53, 160));
cc.find("Canvas/dish/bowl_foam" + this.foamCount).active = !0;
if (3 == this.foamCount) this.node.getChildByName("foam").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
this.node.getChildByName("glue").getComponent(n.default).doShowAction();
}.bind(this)))); else {
this.node.getChildByName("foam").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("tipClick").active = !0;
this.foamCount = this.foamCount + 1;
}
}.bind(this))));
};
t.prototype.bowlTouchEnd = function() {
this.node.getChildByName("waterBowl").getComponent(i.default).enabled = !1;
this.node.getChildByName("waterBowl").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -60), cc.moveTo(.5, cc.v2(-40, 250))), cc.callFunc(function() {
cc.find("Canvas/waterBowl/mask").active = !0;
cc.find("Canvas/waterBowl/waterbowl_water").setScale(cc.v2(.9, .7));
cc.find("Canvas/waterBowl/waterbowl_water").active = !1;
cc.find("Canvas/waterBowl/pourWater").active = !0;
cc.find("Canvas/waterBowl/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterBowl/mask/waterbowl_water_fall").runAction(cc.moveBy(2, cc.v2(-120, 0)));
cc.find("Canvas/dish/bowl_water").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/waterBowl/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterBowl/pourWater").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
this.node.getChildByName("waterBowl").setPosition(cc.v2(280, 0));
this.node.getChildByName("waterBowl").opacity = 0;
cc.find("Canvas/waterBowl/mask").active = !1;
cc.find("Canvas/waterBowl/waterbowl_water").active = !0;
this.node.getChildByName("dish").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, cc.v2(80, -350)), cc.callFunc(function() {
cc.find("Canvas/finger").active = !0;
this.node.getChildByName("hand").getComponent(a.default).init(cc.find("Canvas/dish/mix" + this.count));
}.bind(this))));
}.bind(this))));
}.bind(this))));
};
t.prototype.bowlTouchCancle = function() {};
t.prototype.bowlTouchMove = function() {
this.node.getChildByName("finger1").active = !1;
};
t.prototype.stopAction = function() {
cc.find("dish/mix" + this.count, this.node).stopAllActions();
cc.find("dish/mix" + this.count, this.node).setScale(1);
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
};
t.prototype.mixFinish = function() {
this.stopAction();
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(a.default).destroyTouchEvent();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, -1600)), cc.callFunc(function() {
if (1 == this.count) this.node.getChildByName("dish").runAction(cc.sequence(cc.spawn(cc.moveBy(.5, cc.v2(0, 200)), cc.scaleTo(.5, .8)), cc.spawn(cc.moveTo(1, cc.v2(0, 0)), cc.scaleTo(1, 1.2)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("splitSlimeRS");
}.bind(this)))); else {
this.node.getChildByName("dish").runAction(cc.moveTo(.5, cc.v2(-165, 0)));
var e = cc.find("dish/mix" + this.count, this.node).rotation;
cc.find("dish/mix" + this.count, this.node).active = !1;
cc.find("dish/mix" + (this.count + 1), this.node).active = !0;
cc.find("dish/mix" + (this.count + 1), this.node).setRotation(e);
this.count = this.count + 1;
this.node.getChildByName("waterBowl").getComponent(n.default).doShowAction();
}
}.bind(this))));
};
t.prototype.backLastScence = function() {
c.default.changeScene("makeWaterRS");
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInRS": "MoveInRS",
"../common/Script/codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"./HandTouchEventRS": "HandTouchEventRS"
} ],
AddControllerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13fb+haP9P2ogn/wIRa1QY", "AddControllerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInSD"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragSD"), c = e("../common/Script/CombinedComponent/MixComponentSD"), a = e("../common/Script/codebase/TransitionSceneSD"), s = e("./DataConfigSD"), r = e("./TipManagerSD"), l = cc._decorator, d = l.ccclass, u = (l.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
t.foamCount = 0;
t.mixtureNode = null;
t.touchNode = null;
t.color = null;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("green").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("green").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("pink").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("pink").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("purple").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("purple").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("yellow").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("yellow").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("waterBowl").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("waterBowl").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("spoon").getComponent(i.default).enabled = !0;
cc.find("Canvas/tipRotate").active = !0;
}.bind(this);
this.node.getChildByName("hand").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("hand").getComponent(i.default).enabled = !0;
cc.find("Canvas/tipRotate").active = !0;
}.bind(this);
this.initimage();
};
t.prototype.initimage = function() {
var e = s.default.getInstance().getColor();
e || (e = "rainbow");
this.color = e;
if ("rainbow" == e) {
cc.find("Canvas/dish/mix0/rainbow").active = !0;
cc.find("Canvas/dish/mix0/singleColor").active = !1;
cc.loader.loadRes("slimedark/image/bowl_" + e, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix0").getComponent(c.default).mixPaths.push(t);
}.bind(this));
cc.find("Canvas/green").active = !0;
cc.find("Canvas/pink").active = !0;
cc.find("Canvas/purple").active = !0;
cc.find("Canvas/yellow").active = !0;
cc.find("Canvas/green").getComponent(n.default).doShowAction();
} else {
cc.find("Canvas/dish/mix0/rainbow").active = !1;
cc.find("Canvas/dish/mix0/singleColor").active = !0;
cc.loader.loadRes("slimedark/image/bowl_" + e, cc.SpriteFrame, function(t, o) {
cc.find("Canvas/dish/mix0/singleColor").getComponent(cc.Sprite).spriteFrame = o;
cc.find("Canvas/" + e).active = !0;
cc.find("Canvas/" + e).getComponent(n.default).doShowAction();
}.bind(this));
}
cc.loader.loadRes("slimedark/image/bowl_" + e + "_stir0", cc.SpriteFrame, function(t, o) {
cc.find("Canvas/dish/mix0").getComponent(c.default).mixPaths.push(o);
cc.loader.loadRes("slimedark/image/bowl_" + e + "_stir1", cc.SpriteFrame, function(t, o) {
cc.find("Canvas/dish/mix0").getComponent(c.default).mixPaths.push(o);
cc.find("Canvas/dish/mix1/mixing0").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.loadRes("slimedark/image/bowl_" + e + "_stir2", cc.SpriteFrame, function(t, o) {
cc.find("Canvas/dish/mix1").getComponent(c.default).mixPaths.push(o);
cc.find("Canvas/dish/mix2/mixing0").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.loadRes("slimedark/image/bowl_" + e + "_stir3", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/dish/mix2").getComponent(c.default).mixPaths.push(t);
}.bind(this));
}.bind(this));
}.bind(this));
}.bind(this));
};
t.prototype.glueTouchEnd = function(e) {
var t = e.target;
t.getChildByName("glue0").active = !1;
t.getChildByName("glue1").active = !0;
if ("rainbow" == this.color) {
cc.find("dish/mix0/rainbow", this.node).active = !0;
if ("green" == t.name) {
t.getComponent(i.default).enabled = !1;
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(-100, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("pourGlue", t).active = !0;
cc.find("dish/mix0/rainbow/bowl_green", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("pourGlue", t).active = !1;
r.default.getInstance().jumpTips();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("pink").getComponent(n.default).doShowAction();
}.bind(this))));
} else if ("pink" == t.name) {
t.getComponent(i.default).enabled = !1;
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(0, 330))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("pourGlue", t).active = !0;
cc.find("dish/mix0/rainbow/bowl_pink", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("pourGlue", t).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("purple").getComponent(n.default).doShowAction();
}.bind(this))));
} else if ("purple" == t.name) {
t.getComponent(i.default).enabled = !1;
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(50, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("pourGlue", t).active = !0;
cc.find("dish/mix0/rainbow/bowl_purple", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("pourGlue", t).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("yellow").getComponent(n.default).doShowAction();
}.bind(this))));
} else if ("yellow" == t.name) {
t.getComponent(i.default).enabled = !1;
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(0, 180))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("pourGlue", t).active = !0;
cc.find("dish/mix0/rainbow/bowl_yellow", this.node).runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("pourGlue", t).active = !1;
r.default.getInstance().jumpTips();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("waterBowl").getComponent(n.default).doShowAction();
}.bind(this))));
}
} else {
t.getComponent(i.default).enabled = !1;
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(0, 230))), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).play();
cc.find("pourGlue", t).active = !0;
cc.find("dish/mix0/singleColor", this.node).runAction(cc.scaleTo(5, 1));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
this.node.getChildByName("pourAudio").getComponent(cc.AudioSource).stop();
cc.find("pourGlue", t).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("waterBowl").getComponent(n.default).doShowAction();
}.bind(this))));
}
};
t.prototype.glueTouchCancle = function(e) {
var t = e.target;
cc.find("glue0_shadow", t).active = !0;
};
t.prototype.glueTouchMove = function(e) {
cc.log(e);
var t = e.target;
cc.find("glue0_shadow", t).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.bowlTouchEnd = function() {
this.node.getChildByName("waterBowl").getComponent(i.default).enabled = !1;
this.node.getChildByName("waterBowl").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -60), cc.moveTo(.5, cc.v2(-40, 250))), cc.callFunc(function() {
cc.find("Canvas/waterBowl/pourWater").active = !0;
cc.find("Canvas/waterBowl/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterBowl/mask/waterbowl_water_fall").runAction(cc.moveBy(2, cc.v2(0, -60)));
cc.find("Canvas/dish/bowl_water").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/waterBowl/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterBowl/pourWater").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
this.node.getChildByName("waterBowl").setPosition(cc.v2(280, 0));
this.node.getChildByName("waterBowl").opacity = 0;
this.node.getChildByName("dish").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
this.mixtureNode = cc.find("Canvas/dish/mix" + this.count);
this.touchNode = this.node.getChildByName("spoon");
this.touchNode.getComponent(n.default).doShowAction();
}.bind(this))));
}.bind(this))));
};
t.prototype.bowlTouchCancle = function() {};
t.prototype.bowlTouchMove = function() {
this.node.getChildByName("finger1").active = !1;
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/tipRotate").active = !1;
cc.find("Canvas/spoon/spoon0").active = !1;
this.mixtureNode.getComponent(c.default).startMix();
this.mixtureNode.getChildByName("bowl_water") && (this.mixtureNode.getChildByName("bowl_water").active = !0);
cc.find("Canvas/dish/bowl_water").setScale(0);
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/tipRotate").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
cc.find("Canvas/spoon/spoon0").active = !0;
this.stopAction();
this.mixtureNode.getComponent(c.default).stopMix();
};
t.prototype.playAction = function() {
this.touchNode.getComponent(cc.AudioSource).play();
if ("hand" == this.touchNode.name) {
this.touchNode.getComponent(cc.Animation).getAnimationState("rub").isPaused ? this.touchNode.getComponent(cc.Animation).resume() : this.touchNode.getComponent(cc.Animation).play("rub");
}
var e = cc.scaleTo(.5, 1.05, .95), t = cc.scaleTo(.5, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(e, t)));
this.mixtureNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
this.touchNode.getComponent(cc.AudioSource).stop();
"hand" == this.touchNode.name && this.touchNode.getComponent(cc.Animation).pause();
this.mixtureNode.stopAllActions();
};
t.prototype.mixFinish = function() {
cc.find("Canvas/spoon/spoon0").active = !0;
this.stopAction();
var e = this.touchNode.getPosition();
this.touchNode.getComponent(cc.AudioSource).stop();
this.touchNode.getComponent(i.default).enabled = !1;
this.touchNode.runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, -1600)), cc.callFunc(function() {
this.touchNode.setPosition(e);
this.touchNode.opacity = 0;
if (2 == this.count) {
r.default.getInstance().jumpTips();
this.node.getChildByName("dish").runAction(cc.sequence(cc.spawn(cc.moveBy(.5, cc.v2(0, 200)), cc.scaleTo(.5, .8)), cc.spawn(cc.moveTo(1, cc.v2(0, 0)), cc.scaleTo(1, 1.2)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("pullSlimeSD");
}.bind(this))));
} else if (1 == this.count) {
var t = cc.find("dish/mix" + this.count, this.node).rotation;
cc.find("dish/mix" + this.count, this.node).active = !1;
cc.find("dish/mix" + (this.count + 1), this.node).active = !0;
cc.find("dish/mix" + (this.count + 1), this.node).setRotation(t);
this.count = this.count + 1;
this.touchNode = this.node.getChildByName("hand");
this.touchNode.getComponent(n.default).doShowAction();
this.mixtureNode = cc.find("Canvas/dish/mix" + this.count);
} else {
r.default.getInstance().jumpTips();
this.node.getChildByName("dish").runAction(cc.moveTo(.5, cc.v2(-165, 0)));
t = cc.find("dish/mix" + this.count, this.node).rotation;
cc.find("dish/mix" + this.count, this.node).active = !1;
cc.find("dish/mix" + (this.count + 1), this.node).active = !0;
cc.find("dish/mix" + (this.count + 1), this.node).setRotation(t);
this.count = this.count + 1;
this.node.getChildByName("waterBowl").getComponent(n.default).doShowAction();
}
}.bind(this))));
};
t.prototype.backLastScence = function() {
a.default.changeScene("makeWaterSD");
};
return t = __decorate([ d ], t);
}(cc.Component));
o.default = u;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentSD": "MixComponentSD",
"../common/Script/MoveInSD": "MoveInSD",
"../common/Script/codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"../common/Script/codebase/TransitionSceneSD": "TransitionSceneSD",
"./DataConfigSD": "DataConfigSD",
"./TipManagerSD": "TipManagerSD"
} ],
AddEggCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "364bdtTBnNKZ5W65G9QqFbg", "AddEggCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompCB"), i = e("../codebase/utils/NodeTransformCB"), c = e("../codebase/SpriteDrag/SpriteDragCB"), a = e("../codebase/SpriteDrag/DragEventListenerCB"), s = e("../codebase/utils/CocosHelperCB"), r = e("../codebase/EventListenerCB"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerCB": "EventListenerCB",
"../codebase/SpriteDrag/DragEventListenerCB": "DragEventListenerCB",
"../codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"../codebase/utils/CocosHelperCB": "CocosHelperCB",
"../codebase/utils/NodeCompCB": "NodeCompCB",
"../codebase/utils/NodeTransformCB": "NodeTransformCB"
} ],
AddEggCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b145dFX02lHgLz2MnD+U1+y", "AddEggCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompCE"), i = e("../codebase/utils/NodeTransformCE"), c = e("../codebase/SpriteDrag/SpriteDragCE"), a = e("../codebase/SpriteDrag/DragEventListenerCE"), s = e("../codebase/utils/CocosHelperCE"), r = e("../codebase/EventListenerCE"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerCE": "EventListenerCE",
"../codebase/SpriteDrag/DragEventListenerCE": "DragEventListenerCE",
"../codebase/SpriteDrag/SpriteDragCE": "SpriteDragCE",
"../codebase/utils/CocosHelperCE": "CocosHelperCE",
"../codebase/utils/NodeCompCE": "NodeCompCE",
"../codebase/utils/NodeTransformCE": "NodeTransformCE"
} ],
AddEggCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22bdtTBnNKZ5W65G9QqFbg", "AddEggCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompCS"), i = e("../codebase/utils/NodeTransformCS"), c = e("../codebase/SpriteDrag/SpriteDragCS"), a = e("../codebase/SpriteDrag/DragEventListenerCS"), s = e("../codebase/utils/CocosHelperCS"), r = e("../codebase/EventListenerCS"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerCS": "EventListenerCS",
"../codebase/SpriteDrag/DragEventListenerCS": "DragEventListenerCS",
"../codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"../codebase/utils/CocosHelperCS": "CocosHelperCS",
"../codebase/utils/NodeCompCS": "NodeCompCS",
"../codebase/utils/NodeTransformCS": "NodeTransformCS"
} ],
AddEggFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b215dFX02lHgLz2MnD+U1+y", "AddEggFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompFS"), i = e("../codebase/utils/NodeTransformFS"), c = e("../codebase/SpriteDrag/SpriteDragFS"), a = e("../codebase/SpriteDrag/DragEventListenerFS"), s = e("../codebase/utils/CocosHelperFS"), r = e("../codebase/EventListenerFS"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerFS": "EventListenerFS",
"../codebase/SpriteDrag/DragEventListenerFS": "DragEventListenerFS",
"../codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../codebase/utils/CocosHelperFS": "CocosHelperFS",
"../codebase/utils/NodeCompFS": "NodeCompFS",
"../codebase/utils/NodeTransformFS": "NodeTransformFS"
} ],
AddEggGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b195dFX02lHgLz2MnD+U1+y", "AddEggGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompGL"), i = e("../codebase/utils/NodeTransformGL"), c = e("../codebase/SpriteDrag/SpriteDragGL"), a = e("../codebase/SpriteDrag/DragEventListenerGL"), s = e("../codebase/utils/CocosHelperGL"), r = e("../codebase/EventListenerGL"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerGL": "EventListenerGL",
"../codebase/SpriteDrag/DragEventListenerGL": "DragEventListenerGL",
"../codebase/SpriteDrag/SpriteDragGL": "SpriteDragGL",
"../codebase/utils/CocosHelperGL": "CocosHelperGL",
"../codebase/utils/NodeCompGL": "NodeCompGL",
"../codebase/utils/NodeTransformGL": "NodeTransformGL"
} ],
AddEggGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "988faP9bhFM/Ku6OOqaPqki", "AddEggGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompGS"), i = e("../codebase/utils/NodeTransformGS"), c = e("../codebase/SpriteDrag/SpriteDragGS"), a = e("../codebase/SpriteDrag/DragEventListenerGS"), s = e("../codebase/utils/CocosHelperGS"), r = e("../codebase/EventListenerGS"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerGS": "EventListenerGS",
"../codebase/SpriteDrag/DragEventListenerGS": "DragEventListenerGS",
"../codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"../codebase/utils/CocosHelperGS": "CocosHelperGS",
"../codebase/utils/NodeCompGS": "NodeCompGS",
"../codebase/utils/NodeTransformGS": "NodeTransformGS"
} ],
AddEggHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11bdtTBnNKZ5W65G9QqFbg", "AddEggHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompHC"), i = e("../codebase/utils/NodeTransformHC"), c = e("../codebase/SpriteDrag/SpriteDragHC"), a = e("../codebase/SpriteDrag/DragEventListenerHC"), s = e("../codebase/utils/CocosHelperHC"), r = e("../codebase/EventListenerHC"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerHC": "EventListenerHC",
"../codebase/SpriteDrag/DragEventListenerHC": "DragEventListenerHC",
"../codebase/SpriteDrag/SpriteDragHC": "SpriteDragHC",
"../codebase/utils/CocosHelperHC": "CocosHelperHC",
"../codebase/utils/NodeCompHC": "NodeCompHC",
"../codebase/utils/NodeTransformHC": "NodeTransformHC"
} ],
AddEggMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "657d7aTXXxEu6+u0pXNeHgI", "AddEggMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompMS"), i = e("../codebase/utils/NodeTransformMS"), c = e("../codebase/SpriteDrag/SpriteDragMS"), a = e("../codebase/SpriteDrag/DragEventListenerMS"), s = e("../codebase/utils/CocosHelperMS"), r = e("../codebase/EventListenerMS"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.eggAudio = null;
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
e.eggAudio && cc.audioEngine.playEffect(e.eggAudio, !1);
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "eggAudio", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerMS": "EventListenerMS",
"../codebase/SpriteDrag/DragEventListenerMS": "DragEventListenerMS",
"../codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../codebase/utils/CocosHelperMS": "CocosHelperMS",
"../codebase/utils/NodeCompMS": "NodeCompMS",
"../codebase/utils/NodeTransformMS": "NodeTransformMS"
} ],
AddEggRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b775dFX02lHgLz2MnD+U1+y", "AddEggRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompRP"), i = e("../codebase/utils/NodeTransformRP"), c = e("../codebase/SpriteDrag/SpriteDragRP"), a = e("../codebase/SpriteDrag/DragEventListenerRP"), s = e("../codebase/utils/CocosHelperRP"), r = e("../codebase/EventListenerRP"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerRP": "EventListenerRP",
"../codebase/SpriteDrag/DragEventListenerRP": "DragEventListenerRP",
"../codebase/SpriteDrag/SpriteDragRP": "SpriteDragRP",
"../codebase/utils/CocosHelperRP": "CocosHelperRP",
"../codebase/utils/NodeCompRP": "NodeCompRP",
"../codebase/utils/NodeTransformRP": "NodeTransformRP"
} ],
AddEggRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12bdtTBnNKZ5W65G9QqFbg", "AddEggRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompRS"), i = e("../codebase/utils/NodeTransformRS"), c = e("../codebase/SpriteDrag/SpriteDragRS"), a = e("../codebase/SpriteDrag/DragEventListenerRS"), s = e("../codebase/utils/CocosHelperRS"), r = e("../codebase/EventListenerRS"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerRS": "EventListenerRS",
"../codebase/SpriteDrag/DragEventListenerRS": "DragEventListenerRS",
"../codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../codebase/utils/CocosHelperRS": "CocosHelperRS",
"../codebase/utils/NodeCompRS": "NodeCompRS",
"../codebase/utils/NodeTransformRS": "NodeTransformRS"
} ],
AddEggSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13bdtTBnNKZ5W65G9QqFbg", "AddEggSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompSD"), i = e("../codebase/utils/NodeTransformSD"), c = e("../codebase/SpriteDrag/SpriteDragSD"), a = e("../codebase/SpriteDrag/DragEventListenerSD"), s = e("../codebase/utils/CocosHelperSD"), r = e("../codebase/EventListenerSD"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListenerSD": "EventListenerSD",
"../codebase/SpriteDrag/DragEventListenerSD": "DragEventListenerSD",
"../codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"../codebase/utils/CocosHelperSD": "CocosHelperSD",
"../codebase/utils/NodeCompSD": "NodeCompSD",
"../codebase/utils/NodeTransformSD": "NodeTransformSD"
} ],
AddEgg: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "da15dFX02lHgLz2MnD+U1+y", "AddEgg");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeComp"), i = e("../codebase/utils/NodeTransform"), c = e("../codebase/SpriteDrag/SpriteDrag"), a = e("../codebase/SpriteDrag/DragEventListener"), s = e("../codebase/utils/CocosHelper"), r = e("../codebase/EventListener"), l = cc._decorator, d = l.ccclass, u = l.property, p = l.requireComponent, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addTouchPos = new i.default();
t.fallPos = new i.default();
t.isAutoFall = !1;
t.finger = null;
t.eggInBowl = null;
t.addEggLis = [];
t.breakNode = null;
t.fallNode = null;
t.m_drarg = null;
return t;
}
o = t;
t.prototype.start = function() {
if (null == this.m_drarg) {
this.m_drarg = this.node.getComponent(c.default);
null != this.m_drarg && this.m_drarg.eventTouchs.push(new a.default(this, "dragToBowl", a.DragEventType.TouchEnd));
}
if (null == this.breakNode) {
this.breakNode = this.node.getChildByName("breakNode");
this.breakNode.active = !1;
}
if (null == this.fallNode) {
this.fallNode = this.node.getChildByName("fallNode");
this.fallNode.active = !1;
}
if (null == this.eggInBowl) {
this.eggInBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, this.node.name + "Inbowl");
null != this.eggInBowl && (this.eggInBowl.active = !1);
}
};
t.prototype.dragToBowl = function(e, t) {
null != t && (t.enabled = !1);
var o = this.node;
new cc.Tween().target(o).to(.5, {
position: this.addTouchPos.pos,
scaleX: this.addTouchPos.scale.x,
scaleY: this.addTouchPos.scale.y,
rotation: this.addTouchPos.rotate
}, null).call(this.movetoTouchPos.bind(this)).start();
};
t.prototype.movetoTouchPos = function() {
this.isAutoFall && this.showBreakAction();
};
t.prototype.showBreakAction = function() {
var e = this;
new cc.Tween().target(this.node).by(.2, {
position: new cc.Vec2(20, 50)
}, {
progress: null,
easing: "expoOut"
}).by(.2, {
position: new cc.Vec2(-20, -50)
}, {
progress: null,
easing: "backOut"
}).call(function() {
e.breakNode.active = !0;
e.hideNode();
}).delay(.1).to(.4, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
e.breakNode.active = !1;
e.fallNode.active = !0;
}).delay(.3).call(function() {
e.fallNode.active = !1;
e.eggInBowl && (e.eggInBowl.active = !0);
for (var t = 0, n = e.addEggLis; t < n.length; t++) {
n[t].emit(o.ADD_EGG_END, e);
}
}).start();
};
t.prototype.hideNode = function() {
var e = this.node.getChildByName("noshade");
e && (e.active = !1);
var t = this.node.getChildByName("moving");
null != t && (t.active = !0);
var o = this.getComponent(cc.Sprite);
o && (o.enabled = !1);
};
var o;
t.ADD_EGG_END = "ADD_EGG_END";
__decorate([ u({
type: i.default
}) ], t.prototype, "addTouchPos", void 0);
__decorate([ u({
type: i.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ u() ], t.prototype, "isAutoFall", void 0);
__decorate([ u({
type: cc.Node,
visible: function() {
return !this.isAutoFall;
}
}) ], t.prototype, "finger", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "eggInBowl", void 0);
__decorate([ u({
type: [ r.default ]
}) ], t.prototype, "addEggLis", void 0);
return t = o = __decorate([ d, p(n) ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../codebase/EventListener": "EventListener",
"../codebase/SpriteDrag/DragEventListener": "DragEventListener",
"../codebase/SpriteDrag/SpriteDrag": "SpriteDrag",
"../codebase/utils/CocosHelper": "CocosHelper",
"../codebase/utils/NodeComp": "NodeComp",
"../codebase/utils/NodeTransform": "NodeTransform"
} ],
AddIngredientsCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0b771JlkhFAI6ceA6uCgctX", "AddIngredientsCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallCB"), i = e("../codebase/EventListenerCB"), c = e("../codebase/SpriteDrag/SpriteDragCB"), a = e("../CombinedComponent/MixComponentCB"), s = e("../codebase/utils/CocosHelperCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentCB": "MixComponentCB",
"../codebase/EventListenerCB": "EventListenerCB",
"../codebase/SpriteDrag/DragFallCB": "DragFallCB",
"../codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"../codebase/utils/CocosHelperCB": "CocosHelperCB"
} ],
AddIngredientsCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b149dHlqcBJtLTGvBf0XMXv", "AddIngredientsCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallCE"), i = e("../codebase/EventListenerCE"), c = e("../codebase/SpriteDrag/SpriteDragCE"), a = e("../CombinedComponent/MixComponentCE"), s = e("../codebase/utils/CocosHelperCE"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentCE": "MixComponentCE",
"../codebase/EventListenerCE": "EventListenerCE",
"../codebase/SpriteDrag/DragFallCE": "DragFallCE",
"../codebase/SpriteDrag/SpriteDragCE": "SpriteDragCE",
"../codebase/utils/CocosHelperCE": "CocosHelperCE"
} ],
AddIngredientsCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2271JlkhFAI6ceA6uCgctX", "AddIngredientsCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallCS"), i = e("../codebase/EventListenerCS"), c = e("../codebase/SpriteDrag/SpriteDragCS"), a = e("../CombinedComponent/MixComponentCS"), s = e("../codebase/utils/CocosHelperCS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentCS": "MixComponentCS",
"../codebase/EventListenerCS": "EventListenerCS",
"../codebase/SpriteDrag/DragFallCS": "DragFallCS",
"../codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"../codebase/utils/CocosHelperCS": "CocosHelperCS"
} ],
AddIngredientsFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b219dHlqcBJtLTGvBf0XMXv", "AddIngredientsFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallFS"), i = e("../codebase/EventListenerFS"), c = e("../codebase/SpriteDrag/SpriteDragFS"), a = e("../CombinedComponent/MixComponentFS"), s = e("../codebase/utils/CocosHelperFS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentFS": "MixComponentFS",
"../codebase/EventListenerFS": "EventListenerFS",
"../codebase/SpriteDrag/DragFallFS": "DragFallFS",
"../codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../codebase/utils/CocosHelperFS": "CocosHelperFS"
} ],
AddIngredientsGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b199dHlqcBJtLTGvBf0XMXv", "AddIngredientsGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallGL"), i = e("../codebase/EventListenerGL"), c = e("../codebase/SpriteDrag/SpriteDragGL"), a = e("../CombinedComponent/MixComponentGL"), s = e("../codebase/utils/CocosHelperGL"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentGL": "MixComponentGL",
"../codebase/EventListenerGL": "EventListenerGL",
"../codebase/SpriteDrag/DragFallGL": "DragFallGL",
"../codebase/SpriteDrag/SpriteDragGL": "SpriteDragGL",
"../codebase/utils/CocosHelperGL": "CocosHelperGL"
} ],
AddIngredientsGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c0483dpZTZNorjVBwiHDlxe", "AddIngredientsGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallGS"), i = e("../codebase/EventListenerGS"), c = e("../codebase/SpriteDrag/SpriteDragGS"), a = e("../CombinedComponent/MixComponentGS"), s = e("../codebase/utils/CocosHelperGS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentGS": "MixComponentGS",
"../codebase/EventListenerGS": "EventListenerGS",
"../codebase/SpriteDrag/DragFallGS": "DragFallGS",
"../codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"../codebase/utils/CocosHelperGS": "CocosHelperGS"
} ],
AddIngredientsHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1171JlkhFAI6ceA6uCgctX", "AddIngredientsHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallHC"), i = e("../codebase/EventListenerHC"), c = e("../codebase/SpriteDrag/SpriteDragHC"), a = e("../CombinedComponent/MixComponentHC"), s = e("../codebase/utils/CocosHelperHC"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentHC": "MixComponentHC",
"../codebase/EventListenerHC": "EventListenerHC",
"../codebase/SpriteDrag/DragFallHC": "DragFallHC",
"../codebase/SpriteDrag/SpriteDragHC": "SpriteDragHC",
"../codebase/utils/CocosHelperHC": "CocosHelperHC"
} ],
AddIngredientsMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7e3f6RzatlOBafJ1Fy3+Bbi", "AddIngredientsMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallMS"), i = e("../codebase/EventListenerMS"), c = e("../codebase/SpriteDrag/SpriteDragMS"), a = e("../CombinedComponent/MixComponentMS"), s = e("../codebase/utils/CocosHelperMS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentMS": "MixComponentMS",
"../codebase/EventListenerMS": "EventListenerMS",
"../codebase/SpriteDrag/DragFallMS": "DragFallMS",
"../codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../codebase/utils/CocosHelperMS": "CocosHelperMS"
} ],
AddIngredientsRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b779dHlqcBJtLTGvBf0XMXv", "AddIngredientsRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallRP"), i = e("../codebase/EventListenerRP"), c = e("../codebase/SpriteDrag/SpriteDragRP"), a = e("../CombinedComponent/MixComponentRP"), s = e("../codebase/utils/CocosHelperRP"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentRP": "MixComponentRP",
"../codebase/EventListenerRP": "EventListenerRP",
"../codebase/SpriteDrag/DragFallRP": "DragFallRP",
"../codebase/SpriteDrag/SpriteDragRP": "SpriteDragRP",
"../codebase/utils/CocosHelperRP": "CocosHelperRP"
} ],
AddIngredientsRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1271JlkhFAI6ceA6uCgctX", "AddIngredientsRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallRS"), i = e("../codebase/EventListenerRS"), c = e("../codebase/SpriteDrag/SpriteDragRS"), a = e("../CombinedComponent/MixComponentRS"), s = e("../codebase/utils/CocosHelperRS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentRS": "MixComponentRS",
"../codebase/EventListenerRS": "EventListenerRS",
"../codebase/SpriteDrag/DragFallRS": "DragFallRS",
"../codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../codebase/utils/CocosHelperRS": "CocosHelperRS"
} ],
AddIngredientsSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1371JlkhFAI6ceA6uCgctX", "AddIngredientsSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFallSD"), i = e("../codebase/EventListenerSD"), c = e("../codebase/SpriteDrag/SpriteDragSD"), a = e("../CombinedComponent/MixComponentSD"), s = e("../codebase/utils/CocosHelperSD"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponentSD": "MixComponentSD",
"../codebase/EventListenerSD": "EventListenerSD",
"../codebase/SpriteDrag/DragFallSD": "DragFallSD",
"../codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"../codebase/utils/CocosHelperSD": "CocosHelperSD"
} ],
AddIngredients: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7b79dHlqcBJtLTGvBf0XMXv", "AddIngredients");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/SpriteDrag/DragFall"), i = e("../codebase/EventListener"), c = e("../codebase/SpriteDrag/SpriteDrag"), a = e("../CombinedComponent/MixComponent"), s = e("../codebase/utils/CocosHelper"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bowl = null;
t.bowlUp = null;
t.mixLayer = null;
t.blender = null;
t.addCount = 0;
t.ingredientNum = 0;
return t;
}
t.prototype.onLoad = function() {
if (null == this.blender) {
this.blender = s.CocosHelper.findNode(cc.Canvas.instance.node, "blender");
this.blender && (this.blender.active = !1);
}
null == this.bowl && (this.bowl = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
if (null == this.bowlUp) {
this.bowlUp = s.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp");
this.bowlUp.setSiblingIndex(this.bowlUp.parent.childrenCount + 1);
}
null == this.mixLayer && (this.mixLayer = s.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
};
t.prototype.initIngredients = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var a = o[t], r = null, l = (r = a instanceof cc.Node ? a : s.CocosHelper.findNode(cc.Canvas.instance.node, a)).getComponent(c.default);
if (0 == l.targetCollider.length && null != this.bowl) {
var d = this.bowl.getComponent(cc.Collider);
null != d && l.targetCollider.push(d);
}
var u = r.getComponent(n.default), p = new i.default(this, "startFall", n.default.fallStart);
u.fallLis.push(p);
u.fallLis.push(new i.default(this, "fallEnd", n.default.fallEnd));
this.ingredientNum++;
}
};
t.prototype.initInbowl = function(e) {
for (var t = 0, o = e; t < o.length; t++) {
var i = o[t], c = (i instanceof cc.Node ? i : s.CocosHelper.findNode(cc.Canvas.instance.node, i)).getComponent(n.default);
null == c.inBowl && (c.inBowl = s.CocosHelper.findNode(cc.Canvas.instance.node, i + "Inbowl"));
if (null != c.inBowl) {
c.inBowl.opacity = 0;
c.inBowl.scale = 0;
}
}
};
t.prototype.showBlender = function() {
if (null != this.blender) {
var e = this.blender.getComponent(c.default);
e.enabled = !1;
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
s.CocosHelper.showBackOut(this.blender, s.CocosHelper.ShowDirection.show_from_right, function() {
e.enabled = !0;
});
if (null != this.mixLayer) {
this.mixLayer.getComponent(a.default).mixLis.push(new i.default(this, "mixEnd", a.default.MIXEND));
}
}
};
t.prototype.mixEnd = function() {
if (null != this.blender && null != this.bowlUp) {
var e = this.blender.getComponent(c.default);
e && (e.enabled = !1);
this.blender.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
}
null != this.blender && s.CocosHelper.hideNode(this.blender, s.CocosHelper.ShowDirection.show_from_right, null, !1);
};
t.prototype.fallEnd = function(e) {
e.node.runAction(cc.rotateTo(.4, 0));
s.CocosHelper.hideNode(e.node, s.CocosHelper.ShowDirection.show_from_right);
this.addCount++;
this.addCount == this.ingredientNum && this.showBlender();
};
t.prototype.startFall = function(e) {
var t = e.pourTime, o = e.node;
null != this.bowl && o.setSiblingIndex(this.bowl.getSiblingIndex() + 1);
if (null != e.inBowl) {
o.runAction(cc.moveBy(t, new cc.Vec2(0, 50)));
var c = e.inBowl, a = new cc.Tween();
if (null == c) {
c = o;
a.delay(t);
} else a.to(t, {
scale: 1,
opacity: 255
}, null);
a.target(c).call(function() {
i.default.emitEvents(n.default.fallEnd, e.fallLis, e);
}).start();
var r = s.CocosHelper.findNode(o, o.name + "Inner");
if (r) {
new cc.Tween().by(t, {
position: cc.v2(.45 * -r.getContentSize().width, -40)
}, null).hide().target(r).start();
}
}
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../CombinedComponent/MixComponent": "MixComponent",
"../codebase/EventListener": "EventListener",
"../codebase/SpriteDrag/DragFall": "DragFall",
"../codebase/SpriteDrag/SpriteDrag": "SpriteDrag",
"../codebase/utils/CocosHelper": "CocosHelper"
} ],
AddMatrial2FS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21f1UKU7lCl5wqjVHsnbrY", "AddMatrial2FS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MyMoveInFS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), c = e("./MyCocosHelperFS"), a = e("../common/Script/codebase/TransitionSceneFS"), s = e("./TipManagerFS"), r = e("../common/Script/ads/showLaodingFS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.finish = null;
t.par = null;
t.win = null;
t.text = "hello";
t.bowl = null;
t.smallFlower = null;
t.bigFlower = null;
return t;
}
t.prototype.start = function() {
var e = this;
this.bowl = this.node.getChildByName("bigbowl");
this.smallFlower = this.node.getChildByName("smallFlower");
this.bigFlower = this.node.getChildByName("bigFlower");
this.MoveInCallBack();
this.scheduleOnce(function() {
e.node.getChildByName("bird2").getComponent(cc.Animation).play();
}, 2);
};
t.prototype.MoveInCallBack = function() {
var e = this;
this.bowl.getComponent(n.default).actionCallBack = function() {
e.bowl.addChild(cc.instantiate(e.par));
e.bowl.getChildByName("shadow").active = !0;
};
this.smallFlower.getComponent(n.default).actionCallBack = function() {
e.smallFlower.addChild(cc.instantiate(e.par));
e.smallFlower.runAction(cc.sequence(cc.scaleTo(.5, .95), cc.scaleTo(.5, .9), cc.delayTime(.2), cc.moveTo(.7, 320, -130), cc.callFunc(function() {
e.smallFlower.getChildByName("shadow").active = !0;
var t = e.node.getChildByName("finger");
t.active = !0;
c.MyCocosHelper.showHand(t, e.smallFlower, e.smallFlower, e.bowl);
e.smallFlower.getComponent(i.default).enabled = !0;
})));
};
this.bigFlower.getComponent(n.default).actionCallBack = function() {
e.bigFlower.addChild(cc.instantiate(e.par));
e.bigFlower.runAction(cc.sequence(cc.scaleTo(.5, .95), cc.scaleTo(.5, .9), cc.delayTime(.2), cc.moveTo(.7, 320, -130), cc.callFunc(function() {
e.bigFlower.getChildByName("shadow").active = !0;
e.bigFlower.getComponent(i.default).enabled = !0;
})));
};
};
t.prototype.touchCancle = function(e) {
var t = e.target;
t.getChildByName("shadow") && (t.getChildByName("shadow").active = !0);
};
t.prototype.touchEnd = function(e, t) {
var o = this, i = e.target;
t.enabled = !1;
var c = this, l = this.node.convertToNodeSpaceAR(c.bowl.getChildByName("moveNode").convertToWorldSpaceAR(cc.v2(0, 0))), d = cc.moveTo(.7, l), u = cc.rotateTo(.7, -75), p = cc.callFunc(function() {
i.getChildByName("par").active = !0;
o.node.getComponent(cc.AudioSource).enabled = !0;
cc.find("pic", i.getChildByName("mask")).runAction(cc.sequence(cc.moveTo(3.5, -180, -60), cc.callFunc(function() {
s.default.getInstance().jumpTips();
o.node.addChild(cc.instantiate(o.finish));
i.getChildByName("par").active = !1;
o.node.getComponent(cc.AudioSource).enabled = !1;
i.runAction(cc.sequence(cc.spawn(cc.moveBy(1, cc.visibleRect.width, 0), cc.rotateTo(.4, 0)), cc.callFunc(function() {
if (i == c.smallFlower) c.bigFlower.getComponent(n.default).enabled = !0; else {
o.node.getChildByName("heartFull1").active = !0;
cc.audioEngine.playEffect(o.win, !1);
setTimeout(function() {
r.default.getInstance().showAds("loading_ffm", "loading_ffm", !1);
r.default.getInstance().loadingDoneCallback = function() {
r.default.getInstance().loadingDoneCallback = null;
console.log("广告关闭");
a.default.changeScene("playSlimeFS", 7);
};
}, 2e3);
}
})));
})));
i == c.smallFlower ? c.bowl.getChildByName("flower11").runAction(cc.fadeIn(4)) : c.bowl.getChildByName("flower4").runAction(cc.fadeIn(4));
});
i.runAction(cc.sequence(cc.spawn(d, u), p));
};
t.prototype.touchDown = function(e) {
var t = this.node.getChildByName("finger");
t.stopAllActions();
t.active = !1;
var o = e.target;
o.getChildByName("shadow") && (o.getChildByName("shadow").active = !1);
};
__decorate([ u(cc.Label) ], t.prototype, "label", void 0);
__decorate([ u(cc.Prefab) ], t.prototype, "finish", void 0);
__decorate([ u(cc.Prefab) ], t.prototype, "par", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "win", void 0);
__decorate([ u ], t.prototype, "text", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../common/Script/ads/showLaodingFS": "showLaodingFS",
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"./MyCocosHelperFS": "MyCocosHelperFS",
"./MyMoveInFS": "MyMoveInFS",
"./TipManagerFS": "TipManagerFS"
} ],
AddMatrialActionFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2114j1KslGboQHtwmD8mvd", "AddMatrialActionFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MyMoveInFS"), i = e("./MyMixComponentFS"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), a = e("./MyBlenderMixFS"), s = e("./AddMatrialFS"), r = e("../common/Script/codebase/TransitionSceneFS"), l = e("./TipManagerFS"), d = cc._decorator, u = d.ccclass, p = d.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addGlue = null;
t.jump = null;
t.par = null;
t.finish = null;
t.ji = null;
t.win = null;
t.addColor = null;
t.smallFoam = null;
t.colorPic = null;
t.water = null;
t.text = "hello";
t.mixRound = 0;
t.curNode = null;
t.isStop = !1;
t.glueSound = -1;
t.foamRound = 0;
t.isStop1 = !1;
return t;
}
t.prototype.start = function() {};
t.prototype.GlueInBowl = function() {
var e = this, t = this.node.getChildByName("glue"), o = cc.find("pos", this.node.getChildByName("bowl")).convertToWorldSpaceAR(cc.v2(0, 0)), n = this.node.convertToNodeSpaceAR(o), i = cc.moveTo(.7, n.x, n.y + 100), c = cc.rotateTo(.7, -115), a = cc.callFunc(function() {
e.node.getComponent(s.default).showHelp(t, t, !0);
t.on(cc.Node.EventType.TOUCH_START, e.GlueTouchOn, e);
t.on(cc.Node.EventType.TOUCH_END, e.GlueTouchUp, e);
t.on(cc.Node.EventType.TOUCH_CANCEL, e.GlueTouchUp, e);
});
t.runAction(cc.sequence(cc.spawn(i, c), a));
};
t.prototype.GlueTouchOn = function() {
var e = this;
this.node.getComponent(s.default).StopFinger();
var t = cc.find("Canvas/bowl/mixNode/bowl_glue");
this.isStop ? t.resumeAllActions() : t.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(5, 1), cc.callFunc(function() {
e.GlueOk();
})));
cc.find("Canvas/glue/par").active = !0;
cc.find("Canvas/glue/glue0").active = !1;
this.glueSound = cc.audioEngine.playEffect(this.addGlue, !0);
};
t.prototype.GlueTouchUp = function() {
cc.find("Canvas/bowl/mixNode/bowl_glue").pauseAllActions();
this.isStop = !0;
cc.find("Canvas/glue/par").active = !1;
cc.find("Canvas/glue/glue0").active = !0;
cc.audioEngine.stopEffect(this.glueSound);
};
t.prototype.GlueOk = function() {
var e = this, t = cc.find("Canvas/bowl/mixNode/bowl_glue");
t.stopAllActions();
cc.find("Canvas/glue/par").active = !1;
cc.find("Canvas/glue/glue0").active = !0;
cc.audioEngine.stopEffect(this.glueSound);
var o = this.node.getChildByName("glue");
o.off(cc.Node.EventType.TOUCH_START, this.GlueTouchOn, this);
o.off(cc.Node.EventType.TOUCH_END, this.GlueTouchUp, this);
o.off(cc.Node.EventType.TOUCH_CANCEL, this.GlueTouchUp, this);
t.parent.addChild(cc.instantiate(this.par));
o.runAction(cc.sequence(cc.spawn(cc.moveBy(1, cc.visibleRect.width, 0), cc.rotateTo(.6, 0)), cc.callFunc(function() {
e.node.getChildByName("foam").getComponent(n.default).enabled = !0;
e.node.getChildByName("foam").getComponent(n.default).actionCallBack = function() {
e.node.getChildByName("foam").getComponent(c.default).enabled = !0;
};
})));
l.default.getInstance().jumpTips();
};
t.prototype.FoamInBowl = function() {
var e = this, t = this.node.getChildByName("foam"), o = cc.find("pos", this.node.getChildByName("bowl")).convertToWorldSpaceAR(cc.v2(0, 0)), n = this.node.convertToNodeSpaceAR(o), i = cc.moveTo(.7, n), c = cc.rotateTo(.7, -55), a = cc.callFunc(function() {
e.node.getComponent(s.default).showHelp(t, t, !0);
t.on(cc.Node.EventType.TOUCH_START, e.FoamTouchOn, e);
t.on(cc.Node.EventType.TOUCH_END, e.FoamTouchUp, e);
t.on(cc.Node.EventType.TOUCH_CANCEL, e.FoamTouchUp, e);
});
t.runAction(cc.sequence(cc.spawn(i, c), a));
};
t.prototype.FoamTouchOn = function() {
var e = this;
this.node.getComponent(s.default).StopFinger();
var t = this.node.getChildByName("foam").getChildByName("foam0"), o = cc.moveBy(.35, 0, -20), n = cc.callFunc(function() {
e.createFoam();
});
cc.audioEngine.playEffect(this.ji, !1);
t.runAction(cc.sequence(o, n));
};
t.prototype.FoamTouchUp = function() {
var e = this, t = this.node.getChildByName("foam"), o = t.getChildByName("foam0");
t.off(cc.Node.EventType.TOUCH_START, this.FoamTouchOn, this);
t.off(cc.Node.EventType.TOUCH_END, this.FoamTouchUp, this);
t.off(cc.Node.EventType.TOUCH_CANCEL, this.FoamTouchUp, this);
o.stopAllActions();
o.runAction(cc.sequence(cc.moveTo(.1, 0, 155), cc.callFunc(function() {
t.on(cc.Node.EventType.TOUCH_START, e.FoamTouchOn, e);
t.on(cc.Node.EventType.TOUCH_END, e.FoamTouchUp, e);
t.on(cc.Node.EventType.TOUCH_CANCEL, e.FoamTouchUp, e);
})));
};
t.prototype.createFoam = function() {
var e = this, t = this.node.getChildByName("foam"), o = t.getChildByName("foam0"), i = cc.find("Canvas/bowl/mixNode"), a = new cc.Node();
a.scale = 0;
a.addComponent(cc.Sprite).spriteFrame = this.smallFoam;
a.setPosition(i.convertToNodeSpaceAR(cc.find("Canvas/foam/createPos").convertToWorldSpaceAR(cc.v2(0, 0))));
i.addChild(a);
var r = cc.moveTo(.8, 100 * Math.random() - 50, 80 * Math.random() - 50), d = cc.scaleTo(.4, 1);
a.runAction(cc.sequence(cc.spawn(r, d), cc.callFunc(function() {
a.addChild(cc.instantiate(e.par));
})));
this.foamRound += 1;
if (this.foamRound >= 4) {
l.default.getInstance().jumpTips();
o.runAction(cc.sequence(cc.moveTo(.25, 0, 155), cc.callFunc(function() {
t.off(cc.Node.EventType.TOUCH_START, e.FoamTouchOn, e);
t.off(cc.Node.EventType.TOUCH_END, e.FoamTouchUp, e);
t.off(cc.Node.EventType.TOUCH_CANCEL, e.FoamTouchUp, e);
})));
t.runAction(cc.sequence(cc.delayTime(1.2), cc.spawn(cc.moveBy(1, cc.visibleRect.width, 0), cc.rotateTo(.6, 0)), cc.callFunc(function() {
e.node.getChildByName("spoon").getComponent(n.default).enabled = !0;
e.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
e.node.getChildByName("spoon").getComponent(c.default).enabled = !0;
e.node.getComponent(s.default).showHelp(e.node.getChildByName("spoon"), e.node.getChildByName("bowl"), !1);
};
})));
}
};
t.prototype.ColorInBowl = function() {
var e = this, t = this.node.getChildByName("color"), o = cc.find("pos", this.node.getChildByName("bowl")).convertToWorldSpaceAR(cc.v2(0, 0)), i = this.node.convertToNodeSpaceAR(o), a = cc.moveTo(.7, i.x - 50, i.y + 90), s = cc.rotateTo(.7, -90), r = cc.callFunc(function() {
t.getChildByName("foodcolor1").opacity = 0;
t.getChildByName("foodcolor2").opacity = 255;
t.getChildByName("foodcolor").runAction(cc.fadeOut(.5));
t.getChildByName("foodcolor_fall").runAction(cc.fadeIn(.5));
t.getChildByName("par").active = !0;
var o = cc.audioEngine.playEffect(e.addColor, !0), i = new cc.Node();
i.opacity = 0;
i.addComponent(cc.Sprite).spriteFrame = e.colorPic;
cc.find("Canvas/bowl/mixNode").addChild(i);
e.curNode = i;
i.runAction(cc.sequence(cc.fadeIn(3), cc.callFunc(function() {
cc.audioEngine.stopEffect(o);
t.getChildByName("par").active = !1;
t.runAction(cc.sequence(cc.delayTime(.7), cc.spawn(cc.moveBy(1, cc.visibleRect.width, 0), cc.rotateTo(.6, 0)), cc.callFunc(function() {
e.node.getChildByName("spoon").getComponent(n.default).doShowAction();
e.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
e.node.getChildByName("spoon").getComponent(c.default).enabled = !0;
};
})));
})));
});
t.runAction(cc.sequence(cc.spawn(a, s), r));
};
t.prototype.WaterInBowl = function() {
var e = this, t = this.node.getChildByName("water"), o = cc.find("pos", this.node.getChildByName("bowl")).convertToWorldSpaceAR(cc.v2(0, 0)), n = this.node.convertToNodeSpaceAR(o), i = cc.moveTo(.7, n), c = cc.rotateTo(.7, -90), a = cc.callFunc(function() {
e.node.getComponent(s.default).showHelp(t, t, !0);
t.on(cc.Node.EventType.TOUCH_START, e.WaterTouchOn, e);
t.on(cc.Node.EventType.TOUCH_END, e.WaterTouchUp, e);
t.on(cc.Node.EventType.TOUCH_CANCEL, e.WaterTouchUp, e);
});
t.runAction(cc.sequence(cc.spawn(i, c), a));
};
t.prototype.WaterTouchOn = function() {
var e = this;
this.node.getComponent(s.default).StopFinger();
var t = cc.find("Canvas/bowl/mixNode/bowl_water");
cc.find("Canvas/water/par").active = !0;
cc.find("Canvas/water/activator2").opacity = 255;
cc.find("Canvas/water/activator1").opacity = 0;
cc.find("Canvas/water/mask/activator_fall").opacity = 255;
cc.find("Canvas/water/activator").opacity = 0;
if (this.isStop1) {
t.resumeAllActions();
cc.find("Canvas/water/mask/activator_fall").resumeAllActions();
} else {
t.scale = 0;
t.opacity = 255;
t.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(3, .4), cc.callFunc(function() {
e.WaterOk();
})));
cc.find("Canvas/water/mask/activator_fall").runAction(cc.moveBy(4, 0, 40));
}
this.glueSound = cc.audioEngine.playEffect(this.addColor, !0);
};
t.prototype.WaterTouchUp = function() {
cc.find("Canvas/bowl/mixNode/bowl_water").pauseAllActions();
cc.find("Canvas/water/mask/activator_fall").pauseAllActions();
this.isStop1 = !0;
cc.find("Canvas/water/par").active = !1;
cc.find("Canvas/water/activator2").opacity = 0;
cc.find("Canvas/water/activator1").opacity = 255;
cc.audioEngine.stopEffect(this.glueSound);
};
t.prototype.WaterOk = function() {
var e = this, t = cc.find("Canvas/bowl/mixNode/bowl_water");
this.curNode = t;
t.stopAllActions();
cc.find("Canvas/water/mask/activator_fall").stopAllActions();
cc.find("Canvas/water/par").active = !1;
cc.find("Canvas/water/activator2").opacity = 0;
cc.find("Canvas/water/activator1").opacity = 255;
cc.audioEngine.stopEffect(this.glueSound);
this.node.getChildByName("glue");
var o = this.node.getChildByName("water");
o.off(cc.Node.EventType.TOUCH_START, this.WaterTouchOn, this);
o.off(cc.Node.EventType.TOUCH_END, this.WaterTouchUp, this);
o.off(cc.Node.EventType.TOUCH_CANCEL, this.WaterTouchUp, this);
t.parent.addChild(cc.instantiate(this.par));
o.runAction(cc.sequence(cc.spawn(cc.moveBy(1, cc.visibleRect.width, 0), cc.rotateTo(.6, 0)), cc.callFunc(function() {
o.getChildByName("shadow").active = !0;
cc.find("Canvas/water/mask/activator_fall").opacity = 0;
cc.find("Canvas/water/activator").opacity = 255;
cc.find("Canvas/water/activator").scaleY -= .2;
e.node.getChildByName("spoon").getComponent(n.default).doShowAction();
e.node.getChildByName("spoon").getComponent(n.default).actionCallBack = function() {
e.node.getChildByName("spoon").getComponent(c.default).enabled = !0;
};
})));
l.default.getInstance().jumpTips();
this.isStop1 = !1;
};
t.prototype.update = function(e) {
var t = this, o = cc.find("Canvas/bowl/mixNode"), d = o.getComponent(i.default);
if (d.mixEnable) {
this.node.getComponent(s.default).StopFinger();
null != this.curNode && 0 != this.curNode.opacity && (this.curNode.opacity -= 3);
var u = this.node.getChildByName("spoon");
if (d.stopEnable) {
l.default.getInstance().jumpTips();
o.addChild(cc.instantiate(this.par));
d.stopEnable = !1;
u.runAction(cc.moveBy(.7, cc.visibleRect.width, 0));
this.node.getChildByName("bowl").runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
cc.audioEngine.playEffect(t.jump, !1);
}), cc.spawn(cc.jumpBy(.5, 0, 0, 120, 1), cc.scaleTo(.5, 1)), cc.callFunc(function() {
t.node.getChildByName("star5").active = !0;
cc.audioEngine.playEffect(t.win, !1);
setTimeout(function() {
r.default.changeScene("addMatrial2FS", 7);
}, 2e3);
})));
}
var p = u.getComponent(c.default);
u.getComponent(a.default);
if (3 == d._count && 0 == this.mixRound) {
o.addChild(cc.instantiate(this.par));
l.default.getInstance().jumpTips();
p.enabled = !1;
d.stopMix();
u.getComponent(a.default).touchUpBlender();
var h = cc.moveBy(.7, cc.visibleRect.width, 0), f = cc.callFunc(function() {
var e = t.node.getChildByName("color");
e.getComponent(n.default).enabled = !0;
e.getComponent(n.default).actionCallBack = function() {
e.getComponent(c.default).enabled = !0;
};
});
this.node.getChildByName("spoon").runAction(cc.sequence(h, f));
this.mixRound += 1;
} else if (6 == d._count && 1 == this.mixRound || 8 == d._count && 2 == this.mixRound || 10 == d._count && 3 == this.mixRound) {
o.addChild(cc.instantiate(this.par));
l.default.getInstance().jumpTips();
p.enabled = !1;
d.stopMix();
u.getComponent(a.default).touchUpBlender();
h = cc.moveBy(.7, cc.visibleRect.width, 0), f = cc.callFunc(function() {
var e = t.node.getChildByName("water");
e.getComponent(n.default).doShowAction();
e.getComponent(n.default).actionCallBack = function() {
e.getComponent(c.default).enabled = !0;
};
});
this.node.getChildByName("spoon").runAction(cc.sequence(h, f));
this.mixRound += 1;
}
}
};
__decorate([ p(cc.AudioClip) ], t.prototype, "addGlue", void 0);
__decorate([ p(cc.AudioClip) ], t.prototype, "jump", void 0);
__decorate([ p(cc.Prefab) ], t.prototype, "par", void 0);
__decorate([ p(cc.Prefab) ], t.prototype, "finish", void 0);
__decorate([ p(cc.AudioClip) ], t.prototype, "ji", void 0);
__decorate([ p(cc.AudioClip) ], t.prototype, "win", void 0);
__decorate([ p(cc.AudioClip) ], t.prototype, "addColor", void 0);
__decorate([ p(cc.SpriteFrame) ], t.prototype, "smallFoam", void 0);
__decorate([ p(cc.SpriteFrame) ], t.prototype, "colorPic", void 0);
__decorate([ p(cc.SpriteFrame) ], t.prototype, "water", void 0);
__decorate([ p ], t.prototype, "text", void 0);
return t = __decorate([ u ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"./AddMatrialFS": "AddMatrialFS",
"./MyBlenderMixFS": "MyBlenderMixFS",
"./MyMixComponentFS": "MyMixComponentFS",
"./MyMoveInFS": "MyMoveInFS",
"./TipManagerFS": "TipManagerFS"
} ],
AddMatrialFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b216e6jjbNNmbX//i5r6Snt", "AddMatrialFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), i = e("./AddMatrialActionFS"), c = e("./MyMoveInFS"), a = e("./MyCocosHelperFS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
var e = this;
this.node.getChildByName("glue").getComponent(c.default).actionCallBack = function() {
e.node.getChildByName("glue").getComponent(n.default).enabled = !0;
e.showHelp(e.node.getChildByName("glue"), e.node.getChildByName("bowl"), !1);
};
};
t.prototype.StopFinger = function() {
var e = this.node.getChildByName("finger");
e.getChildByName("chick").active = !1;
e.stopAllActions();
e.active = !1;
};
t.prototype.touchDown = function(e) {
this.StopFinger();
var t = e.target;
t.getChildByName("shadow") && (t.getChildByName("shadow").active = !1);
};
t.prototype.touchCancle = function(e) {
var t = e.target;
t.getChildByName("shadow") && (t.getChildByName("shadow").active = !0);
};
t.prototype.touchEnd = function(e, t) {
var o = e.target;
t.enabled = !1;
switch (o.name) {
case "glue":
this.node.getComponent(i.default).GlueInBowl();
break;

case "foam":
this.node.getComponent(i.default).FoamInBowl();
break;

case "color":
this.node.getComponent(i.default).ColorInBowl();
break;

case "water":
this.node.getComponent(i.default).WaterInBowl();
}
};
t.prototype.showHelp = function(e, t, o) {
var n = this.node.getChildByName("finger");
n.active = !0;
o && (n.getChildByName("chick").active = !0);
a.MyCocosHelper.showHand(n, e, e, t);
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"./AddMatrialActionFS": "AddMatrialActionFS",
"./MyCocosHelperFS": "MyCocosHelperFS",
"./MyMoveInFS": "MyMoveInFS"
} ],
AdsManagerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cea75rE/RtNv4Z0YadIWJnB", "AdsManagerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14feecGjxBj4AuZz9B5Buv", "AdsManagerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2275rE/RtNv4Z0YadIWJnB", "AdsManagerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21feecGjxBj4AuZz9B5Buv", "AdsManagerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19feecGjxBj4AuZz9B5Buv", "AdsManagerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fb727KVe4NLFKoBFmepHVFH", "AdsManagerGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = this, t = jsToCPP.getInstance();
t.initOnAdsLoaded(function(t) {
console.log(" 广告加载====>ID值" + t);
e.onAdsLoaded && e.onAdsLoaded(t);
});
t.initOnAdsClicked(function(t) {
console.log(" 广告点击====>ID值" + t);
e.onAdsClicked && e.onAdsClicked(t);
});
t.initOnAdsExpanded(function(t) {
console.log(" 广告====>ID值" + t);
e.onAdsExpanded && e.onAdsExpanded(t);
});
t.initOnAdsCollapsed(function(t) {
console.log(" 广告关闭====>ID值" + t);
e.onAdsCollapsed && e.onAdsCollapsed(t);
});
t.initOnAdsLoadFailed(function(t, o) {
console.log(" 广告加载失败====>ID值" + o + "名称" + t);
e.onAdsLoadFailed && e.onAdsLoadFailed(t, o);
});
t.initOnAdsRewarded(function(t, o, n) {
console.log(" reward广告====>ID值" + o + "名称" + t + "是否成功" + n);
e.onAdsRewarded && e.onAdsRewarded(t, o, n);
});
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1175rE/RtNv4Z0YadIWJnB", "AdsManagerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = this, t = jsToCPP.getInstance();
t.initOnAdsLoaded(function(t) {
console.log(" 广告加载====>ID值" + t);
console.log(e.onAdsLoaded + "值");
e.onAdsLoaded && e.onAdsLoaded(t);
console.log("2222");
});
t.initOnAdsClicked(function(t) {
console.log(" 广告点击====>ID值" + t);
e.onAdsClicked && e.onAdsClicked(t);
});
t.initOnAdsExpanded(function(t) {
console.log(" 广告====>ID值" + t);
e.onAdsExpanded && e.onAdsExpanded(t);
});
t.initOnAdsCollapsed(function(t) {
console.log(" 广告关闭====>ID值" + t);
e.onAdsCollapsed && e.onAdsCollapsed(t);
});
t.initOnAdsLoadFailed(function(t, o) {
console.log(" 广告加载失败====>ID值" + o + "名称" + t);
e.onAdsLoadFailed && e.onAdsLoadFailed(t, o);
});
t.initOnAdsRewarded(function(t, o, n) {
console.log(" reward广告====>ID值" + o + "名称" + t + "是否成功" + n);
e.onAdsRewarded && e.onAdsRewarded(t, o, n);
});
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerHall: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "debf735slNIY7pqbe5MGKUt", "AdsManagerHall");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = this, t = jsToCPP.getInstance();
t.initOnAdsLoaded(function(t) {
console.log(" 广告加载====>ID值" + t);
e.onAdsLoaded && e.onAdsLoaded(t);
});
t.initOnAdsClicked(function(t) {
console.log(" 广告点击====>ID值" + t);
e.onAdsClicked && e.onAdsClicked(t);
});
t.initOnAdsExpanded(function(t) {
console.log(" 广告====>ID值" + t);
e.onAdsExpanded && e.onAdsExpanded(t);
});
t.initOnAdsCollapsed(function(t) {
console.log(" 广告关闭====>ID值" + t);
e.onAdsCollapsed && e.onAdsCollapsed(t);
});
t.initOnAdsLoadFailed(function(t, o) {
console.log(" 广告加载失败====>ID值" + o + "名称" + t);
e.onAdsLoadFailed && e.onAdsLoadFailed(t, o);
});
t.initOnAdsRewarded(function(t, o, n) {
console.log(" reward广告====>ID值" + o + "名称" + t + "是否成功" + n);
e.onAdsRewarded && e.onAdsRewarded(t, o, n);
});
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1b918QVIXxNIr1ShsuVxT05", "AdsManagerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77feecGjxBj4AuZz9B5Buv", "AdsManagerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1275rE/RtNv4Z0YadIWJnB", "AdsManagerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManagerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1375rE/RtNv4Z0YadIWJnB", "AdsManagerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AdsManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a92feecGjxBj4AuZz9B5Buv", "AdsManager");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator;
n.ccclass, n.property;
(function(e) {
e[e.kTypeNativeAds = 32] = "kTypeNativeAds";
e[e.kTypeRectAds = 16] = "kTypeRectAds";
e[e.kTypeBannerAds = 8] = "kTypeBannerAds";
e[e.kTypeInterstitialAds = 4] = "kTypeInterstitialAds";
e[e.kTypeCrosspromoAds = 2] = "kTypeCrosspromoAds";
e[e.kTypeRewardedAds = 1] = "kTypeRewardedAds";
})(o.ADS_TYPE || (o.ADS_TYPE = {}));
var i = function() {
function e() {
this.initLisenter();
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initLisenter = function() {
var e = jsToCPP.getInstance();
e.initOnAdsLoaded(function(e) {
console.log(" 广告加载====>ID值" + e);
console.log(this.onAdsLoaded);
this.onAdsLoaded && this.onAdsLoaded(e);
}.bind(this));
e.initOnAdsClicked(function(e) {
console.log(" 广告点击====>ID值" + e);
this.onAdsClicked && this.onAdsClicked(e);
}.bind(this));
e.initOnAdsExpanded(function(e) {
console.log(" 广告====>ID值" + e);
this.onAdsExpanded && this.onAdsExpanded(e);
}.bind(this));
e.initOnAdsCollapsed(function(e) {
console.log(" 广告关闭====>ID值" + e);
this.onAdsCollapsed && this.onAdsCollapsed(e);
}.bind(this));
e.initOnAdsLoadFailed(function(e, t) {
console.log(" 广告加载失败====>ID值" + t + "名称" + e);
this.onAdsLoadFailed && this.onAdsLoadFailed(e, t);
}.bind(this));
e.initOnAdsRewarded(function(e, t, o) {
console.log(" reward广告====>ID值" + t + "名称" + e + "是否成功" + o);
this.onAdsRewarded && this.onAdsRewarded(e, t, o);
}.bind(this));
};
e.prototype.public = function() {
jsToCPP.getInstance().showInterstitial();
};
e.prototype.showInterstitial = function() {
return jsToCPP.getInstance().showInterstitial();
};
e.prototype.showCross = function() {
return jsToCPP.getInstance().showCross();
};
e.prototype.showBanner = function() {
jsToCPP.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
jsToCPP.getInstance().hideBanner();
};
e.prototype.showReward = function() {
return jsToCPP.getInstance().showReward();
};
e.prototype.preAllAds = function() {
jsToCPP.getInstance().preLoadAllAds();
};
e.prototype.preAdsByType = function(e) {
jsToCPP.getInstance().preLoadAds(Number(e));
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {} ],
AnimationEventCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a903eN9WfpMDqGv5/ClNAI9", "AnimationEventCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragCB"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.dissolveFinish = function() {
cc.find("Canvas/cup/scoop/scoop").active = !0;
cc.find("Canvas/cup/scoop").getComponent(n.default).enabled = !1;
cc.find("Canvas/cup/scoop").runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, 700)), cc.callFunc(function() {
cc.find("Canvas/cup/scoop").active = !1;
}.bind(this))));
cc.find("Canvas/cup").runAction(cc.sequence(cc.delayTime(.5), cc.spawn(cc.scaleTo(.5, .7), cc.moveBy(.5, cc.v2(250, 0))), cc.callFunc(function() {
cc.find("Canvas/bottle").runAction(cc.moveTo(.5, cc.v2(0, -335)));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
cc.find("Canvas/cup").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/tipClick").active = !0;
cc.find("Canvas/tipClick").setPosition(cc.find("Canvas/cup").getPosition());
}.bind(this))));
cc.find("Canvas/cup/waterMask").stopAllActions();
cc.find("Canvas/cup/cup_borax").stopAllActions();
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB"
} ],
AnimationEventCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b143eN9WfpMDqGv5/ClNAI9", "AnimationEventCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
AnimationEventCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b223eN9WfpMDqGv5/ClNAI9", "AnimationEventCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventCS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragCS"), c = e("../common/Script/codebase/TransitionSceneCS"), a = e("../common/Script/codebase/utils/CocosHelperCS"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.dissolveFinish = function() {
cc.find("Canvas/bowl/spoon").getComponent(i.default).enabled = !1;
cc.find("Canvas/bowl/spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(700, 0)), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").active = !1;
}.bind(this))));
cc.find("Canvas/bowl").runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("addMaterialCS");
}.bind(this))));
cc.find("Canvas/bowl/bowl_water").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").stopAllActions();
};
t.prototype.coilFinish = function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime").getComponent(n.default).destroyTouchEvent();
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
};
t.prototype.playAudio = function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"./SlimeTouchEventCS": "SlimeTouchEventCS"
} ],
AnimationEventFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b213eN9WfpMDqGv5/ClNAI9", "AnimationEventFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventFS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), c = e("../common/Script/codebase/TransitionSceneFS"), a = e("../common/Script/codebase/utils/CocosHelperFS"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.dissolveFinish = function() {
cc.find("Canvas/bowl/spoon").getComponent(i.default).enabled = !1;
cc.find("Canvas/bowl/spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(700, 0)), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").active = !1;
}.bind(this))));
cc.find("Canvas/bowl").runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("addMaterial");
}.bind(this))));
cc.find("Canvas/bowl/bowl_water").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").stopAllActions();
};
t.prototype.coilFinish = function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime").getComponent(n.default).destroyTouchEvent();
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
};
t.prototype.playAudio = function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"./SlimeTouchEventFS": "SlimeTouchEventFS"
} ],
AnimationEventGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b193eN9WfpMDqGv5/ClNAI9", "AnimationEventGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventGL"), i = e("../common/Script/compoent/MoveInGL"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.resetScene = function() {
cc.director.loadScene("choose");
};
t.prototype.growFinish0 = function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).stop();
cc.find("Canvas/slime").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/slime").getComponent(n.default).firstPlay = !1;
cc.find("Canvas/slime/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/slime/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/progress/star0").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(1, -30), cc.rotateBy(1, 30))));
cc.find("Canvas").runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(n.default).registerTouchEvent();
cc.find("Canvas/arrow_top").active = !0;
})));
};
t.prototype.growFinish1 = function() {
cc.find("Canvas/slime").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/progress/star1").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(1, -30), cc.rotateBy(1, 30))));
cc.find("Canvas").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).stop();
cc.find("Canvas/slime/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/slime/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/bubble").active = !0;
cc.find("Canvas/slime/tipClick").active = !0;
cc.find("Canvas/clock").active = !0;
})));
};
t.prototype.timeOver = function() {
cc.find("Canvas/clock").getComponent(cc.AudioSource).stop();
if (cc.find("Canvas/progress/mask").height < 390) {
cc.find("Canvas/btn_reset").getComponent(i.default).doShowAction();
cc.find("Canvas/slime").children.forEach(function(e) {
"bubbleCopy" == e.name && e.destroy();
});
}
};
t.prototype.boomFinish = function() {
cc.find("Canvas/boom").active = !1;
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./SlimeTouchEventGL": "SlimeTouchEventGL"
} ],
AnimationEventHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b113eN9WfpMDqGv5/ClNAI9", "AnimationEventHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventHC"), i = e("../common/Script/MoveInHC"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.resetScene = function() {
cc.director.loadScene("chooseHC");
};
t.prototype.growFinish0 = function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).stop();
cc.find("Canvas/slime").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/slime").getComponent(n.default).firstPlay = !1;
cc.find("Canvas/slime/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/slime/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/progress/star0").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(1, -30), cc.rotateBy(1, 30))));
cc.find("Canvas").runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(n.default).registerTouchEvent();
cc.find("Canvas/arrow_top").active = !0;
})));
};
t.prototype.growFinish1 = function() {
cc.find("Canvas/slime").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/progress/star1").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(1, -30), cc.rotateBy(1, 30))));
cc.find("Canvas").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).stop();
cc.find("Canvas/slime/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/slime/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/bubble").active = !0;
cc.find("Canvas/slime/tipClick").active = !0;
cc.find("Canvas/clock").active = !0;
})));
};
t.prototype.timeOver = function() {
if (cc.find("Canvas/progress/mask").height < 390) {
cc.find("Canvas/btn_reset").getComponent(i.default).doShowAction();
cc.find("Canvas/slime").children.forEach(function(e) {
"bubbleCopy" == e.name && e.destroy();
});
}
};
t.prototype.boomFinish = function() {
cc.find("Canvas/boom").active = !1;
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/MoveInHC": "MoveInHC",
"./SlimeTouchEventHC": "SlimeTouchEventHC"
} ],
AnimationEventMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1fa0fYGAG9D6o59Onhl5X7S", "AnimationEventMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventMS"), i = e("../common/common/Script/compoent/MoveInMS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.resetScene = function() {
cc.director.loadScene("choose");
};
t.prototype.growFinish0 = function() {
cc.find("Canvas/playLayer5/slime").getComponent(cc.AudioSource).stop();
cc.find("Canvas/playLayer5/slime").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/playLayer5/slime").getComponent(n.default).firstPlay = !1;
cc.find("Canvas/playLayer5/slime/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/playLayer5/slime/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/playLayer5/progress/star0").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(1, -30), cc.rotateBy(1, 30))));
cc.find("Canvas/playLayer5").runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
cc.find("Canvas/playLayer5/slime").getComponent(n.default).registerTouchEvent();
cc.find("Canvas/playLayer5/arrow_top").active = !0;
})));
};
t.prototype.growFinish1 = function() {
cc.find("Canvas/playLayer5/slime").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/playLayer5/progress/star1").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(1, -30), cc.rotateBy(1, 30))));
cc.find("Canvas/playLayer5").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/playLayer5/slime").getComponent(cc.AudioSource).stop();
cc.find("Canvas/playLayer5/slime/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/playLayer5/slime/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/playLayer5/slime/bubble").active = !0;
cc.find("Canvas/playLayer5/slime/tipClick").active = !0;
})));
};
t.prototype.timeOver = function() {
if (cc.find("Canvas/playLayer5/progress/mask").height < 390) {
cc.find("Canvas/playLayer5/btn_reset").getComponent(i.default).doShowAction();
cc.find("Canvas/playLayer5/slime").children.forEach(function(e) {
"bubbleCopy" == e.name && e.destroy();
});
}
};
t.prototype.boomFinish = function() {
cc.find("Canvas/playLayer5/boom").active = !1;
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./SlimeTouchEventMS": "SlimeTouchEventMS"
} ],
AnimationEventRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b773eN9WfpMDqGv5/ClNAI9", "AnimationEventRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
AnimationEventRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b123eN9WfpMDqGv5/ClNAI9", "AnimationEventRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventRS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragRS"), c = e("../common/Script/codebase/TransitionSceneRS"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.dissolveFinish = function() {
cc.find("Canvas/bowl/spoon").getComponent(i.default).enabled = !1;
cc.find("Canvas/bowl/spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(700, 0)), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").active = !1;
}.bind(this))));
cc.find("Canvas/bowl").runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("addMaterialRS");
}.bind(this))));
cc.find("Canvas/bowl/bowl_water").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").stopAllActions();
};
t.prototype.coilFinish = function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/slime1").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/slime/slime1/handRight").runAction(cc.sequence(cc.delayTime(.5), cc.moveBy(.5, cc.v2(0, -700)), cc.callFunc(function() {
c.default.changeScene("pullSlimeRS");
}.bind(this))));
};
t.prototype.playAudio = function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"./SlimeTouchEventRS": "SlimeTouchEventRS"
} ],
AnimationEventSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b133eN9WfpMDqGv5/ClNAI9", "AnimationEventSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragSD"), i = e("../common/Script/codebase/TransitionSceneSD"), c = e("./TipManagerSD"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.dissolveFinish = function() {
c.default.getInstance().jumpTips();
cc.find("Canvas/bowl/spoon").getComponent(n.default).enabled = !1;
cc.find("Canvas/bowl/spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(700, 0)), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").active = !1;
}.bind(this))));
cc.find("Canvas/bowl").runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
i.default.changeScene("addMaterialSD");
}.bind(this))));
cc.find("Canvas/bowl/bowl_water").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").stopAllActions();
cc.find("Canvas/bowl/bowl_stir").stopAllActions();
};
t.prototype.playAudio = function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"../common/Script/codebase/TransitionSceneSD": "TransitionSceneSD",
"./TipManagerSD": "TipManagerSD"
} ],
AudioManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "29cd28xrORDGJQRl5irYFwg", "AudioManager");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bgMusic = null;
t.text = "hello";
t.bgMusicChannel = null;
return t;
}
t.prototype.onLoad = function() {
cc.game.addPersistRootNode(this.node);
};
t.prototype.start = function() {};
t.prototype.playBgMusic = function(e) {
this.bgMusicChannel = cc.audioEngine.playMusic(e, !0);
};
t.prototype.stopBgMusic = function() {
cc.audioEngine.stopMusic();
};
__decorate([ c(cc.AudioClip) ], t.prototype, "bgMusic", void 0);
__decorate([ c ], t.prototype, "text", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
BarAction: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ca202Qg80hAE4g7v8LeqZU7", "BarAction");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.horizontalBar = null;
t.speed = 10;
t._pingpong = !1;
return t;
}
t.prototype.onLoad = function() {
this._pingpong = !0;
this.horizontalBar.progress = 0;
};
t.prototype.update = function(e) {
this._updateProgressBar(this.horizontalBar, e);
};
t.prototype._updateProgressBar = function(e, t) {
var o = e.progress;
if (o < 1 && this._pingpong) o += t * this.speed; else {
o -= t * this.speed;
this._pingpong = o <= 0;
}
e.progress = o;
};
__decorate([ c(cc.ProgressBar) ], t.prototype, "horizontalBar", void 0);
__decorate([ c() ], t.prototype, "speed", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
BgScaleCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8af1226I25KsoUBf99pgtxB", "BgScaleCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleCB") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b148beh6s5CcbBCO5hMxiBn", "BgScaleCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleCE") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b221226I25KsoUBf99pgtxB", "BgScaleCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleCS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b218beh6s5CcbBCO5hMxiBn", "BgScaleFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleFS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b198beh6s5CcbBCO5hMxiBn", "BgScaleGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleGL") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9106crrbjdKN5QhWOslCYVo", "BgScaleGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleGS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b111226I25KsoUBf99pgtxB", "BgScaleHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleHC") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5e2b7VWfoxIBKou47/uSz6W", "BgScaleMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleMS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b778beh6s5CcbBCO5hMxiBn", "BgScaleRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleRP") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b121226I25KsoUBf99pgtxB", "BgScaleRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleRS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScaleSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b131226I25KsoUBf99pgtxB", "BgScaleSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScaleSD") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScale_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8f7c9ns7htM1arvXBxakfAL", "BgScale_my");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/viewadapter/BgScale") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BgScale: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3d98beh6s5CcbBCO5hMxiBn", "BgScale");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.disallowMultiple, a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setBgScale = function() {
if (this.enabled) {
var e = cc.view.getVisibleSize(), t = this.node.width, o = this.node.height;
o < e.height && this.node.setScale(e.height / o);
t < e.width && this.node.setScale(e.width / t);
}
};
t.prototype.onEnable = function() {
this.setBgScale();
};
t.prototype.onLoad = function() {
var e = this;
this.setBgScale();
null == this.rf && (this.rf = cc.director.on("ResizeFrame", function() {
e.setBgScale();
}, this));
};
t.prototype.onDestroy = function() {
null != this.rf && cc.director.off("ResizeFrame", this.rf, this);
};
return t = __decorate([ i, c(), a("common/BgScale") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
BlendMixMultipleCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c2d98ppBvVBpZozSB4Ik63F", "BlendMixMultipleCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentCB"), i = e("../codebase/SpriteDrag/SpriteDragCB"), c = e("../codebase/SpriteDrag/DragEventListenerCB"), a = e("../codebase/EventListenerCB"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isNeedRotate = !1;
t.mixBlenderAnimation = [];
t._mixCom = [];
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixActions = [];
t.mixAudio = null;
return t;
}
Object.defineProperty(t.prototype, "mixCom", {
get: function() {
return this._mixCom;
},
set: function(e) {
this._mixCom = e;
this._mixActions = [];
for (var t = 0, o = this._mixCom; t < o.length; t++) {
o[t].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
if (this._mixActions.length != this.mixCom.length) {
this._mixActions = [];
for (var e = 0, t = this._mixCom; e < t.length; e++) {
t[e].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
}
null != this.mixAudio && (this.mixAudio = this.getComponent(cc.AudioSource));
null == this._drag && (this._drag = this.getComponent(i.default));
if (null != this._drag) for (var o = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], s = [ c.DragEventType.Draging, c.DragEventType.TouchCancle, c.DragEventType.TouchEnd ], r = 0; r < o.length; r++) this._drag.eventTouchs.push(new c.default(this, o[r], s[r]));
};
t.prototype.startBlendAction = function(e) {
null == this.mixAudio || this.mixAudio.isPlaying || this.mixAudio.play();
if (null == this._blendaction) {
var t = this.getComponent(cc.Sprite);
if (null != t) {
this.orignalFrame = t.spriteFrame;
for (var o = [], n = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = this.mixBlenderAnimation; i < c.length; i++) {
n(c[i]);
}
this._blendaction = cc.repeatForever(cc.sequence(o));
this.node.runAction(this._blendaction);
}
}
var a = this.mixCom[e].node, s = this._mixActions[e];
if (null != a && null == s) {
cc.log("run Action " + e);
var r = cc.scaleTo(.7, 1, .95), l = cc.scaleTo(.7, .95, 1.08);
if (this.isNeedRotate) {
var d = cc.sequence(r, l), u = cc.spawn(d, cc.rotateBy(1.5, 100 * Math.random() + 80));
s = cc.repeatForever(u);
} else s = cc.repeatForever(cc.sequence(r, l));
a.runAction(s);
this._mixActions[e] = s;
}
};
t.prototype.stopBlendAction = function(e) {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
}
if (-1 == e) for (var o = 0; o < this.mixCom.length; o++) {
var n = this.mixCom[o].node, i = this._mixActions[o];
null != n && null != i && n.stopAction(i);
this._mixActions[o] = null;
this.mixCom[o].stopMix();
} else {
n = this.mixCom[e].node, i = this._mixActions[e];
null != n && null != i && n.stopAction(i);
this._mixActions[e] = null;
this.mixCom[e].stopMix();
}
};
t.prototype.moveBlender = function(e, t) {
var o = t.getInTargetIndex();
if (-1 != o) {
for (var n = 0; n < this.mixCom.length; n++) n != o && this.moveOutLimit(n);
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
this.mixCom[o].startMix();
this.startBlendAction(o);
} else this.moveOutLimit(-1);
};
t.prototype.touchUpBlender = function() {
null != this.mixAudio && this.mixAudio.stop();
this.moveOutLimit(-1);
};
t.prototype.moveOutLimit = function(e) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
if (-1 == e) for (var t = 0; t < this.mixCom.length; t++) this.mixCom[t].stopMix(); else this.mixCom[e].stopMix();
this.stopBlendAction(e);
};
t.prototype.mixEnd = function(e) {
null != this.mixAudio && this.mixAudio.stop();
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
for (var o = e.node, n = null, i = 0; i < this.mixCom.length; i++) if (this.mixCom[i] == e) {
n = this._mixActions[i];
break;
}
null != this._drag && this._drag.targetCollider.length > i && (this._drag.targetCollider[i] = null);
if (null != o) {
null != n && o.stopAction(n);
this._mixActions[i] = null;
o.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
};
__decorate([ l({
tooltip: "是否需要旋转"
}) ], t.prototype, "isNeedRotate", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ l({
type: [ n.default ],
visible: !1
}) ], t.prototype, "_mixCom", void 0);
__decorate([ l({
type: [ n.default ]
}) ], t.prototype, "mixCom", null);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../codebase/EventListenerCB": "EventListenerCB",
"../codebase/SpriteDrag/DragEventListenerCB": "DragEventListenerCB",
"../codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"./MixComponentCB": "MixComponentCB"
} ],
BlendMixMultipleCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2298ppBvVBpZozSB4Ik63F", "BlendMixMultipleCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentCS"), i = e("../codebase/SpriteDrag/SpriteDragCS"), c = e("../codebase/SpriteDrag/DragEventListenerCS"), a = e("../codebase/EventListenerCS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isNeedRotate = !1;
t.mixBlenderAnimation = [];
t._mixCom = [];
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixActions = [];
t.mixAudio = null;
return t;
}
Object.defineProperty(t.prototype, "mixCom", {
get: function() {
return this._mixCom;
},
set: function(e) {
this._mixCom = e;
this._mixActions = [];
for (var t = 0, o = this._mixCom; t < o.length; t++) {
o[t].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
if (this._mixActions.length != this.mixCom.length) {
this._mixActions = [];
for (var e = 0, t = this._mixCom; e < t.length; e++) {
t[e].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
}
null != this.mixAudio && (this.mixAudio = this.getComponent(cc.AudioSource));
null == this._drag && (this._drag = this.getComponent(i.default));
if (null != this._drag) for (var o = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], s = [ c.DragEventType.Draging, c.DragEventType.TouchCancle, c.DragEventType.TouchEnd ], r = 0; r < o.length; r++) this._drag.eventTouchs.push(new c.default(this, o[r], s[r]));
};
t.prototype.startBlendAction = function(e) {
null == this.mixAudio || this.mixAudio.isPlaying || this.mixAudio.play();
if (null == this._blendaction) {
var t = this.getComponent(cc.Sprite);
if (null != t) {
this.orignalFrame = t.spriteFrame;
for (var o = [], n = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = this.mixBlenderAnimation; i < c.length; i++) {
n(c[i]);
}
this._blendaction = cc.repeatForever(cc.sequence(o));
this.node.runAction(this._blendaction);
}
}
var a = this.mixCom[e].node, s = this._mixActions[e];
if (null != a && null == s) {
cc.log("run Action " + e);
var r = cc.scaleTo(.7, 1, .95), l = cc.scaleTo(.7, .95, 1.08);
if (this.isNeedRotate) {
var d = cc.sequence(r, l), u = cc.spawn(d, cc.rotateBy(1.5, 100 * Math.random() + 80));
s = cc.repeatForever(u);
} else s = cc.repeatForever(cc.sequence(r, l));
a.runAction(s);
this._mixActions[e] = s;
}
};
t.prototype.stopBlendAction = function(e) {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
}
if (-1 == e) for (var o = 0; o < this.mixCom.length; o++) {
var n = this.mixCom[o].node, i = this._mixActions[o];
null != n && null != i && n.stopAction(i);
this._mixActions[o] = null;
this.mixCom[o].stopMix();
} else {
n = this.mixCom[e].node, i = this._mixActions[e];
null != n && null != i && n.stopAction(i);
this._mixActions[e] = null;
this.mixCom[e].stopMix();
}
};
t.prototype.moveBlender = function(e, t) {
var o = t.getInTargetIndex();
if (-1 != o) {
for (var n = 0; n < this.mixCom.length; n++) n != o && this.moveOutLimit(n);
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
this.mixCom[o].startMix();
this.startBlendAction(o);
} else this.moveOutLimit(-1);
};
t.prototype.touchUpBlender = function() {
null != this.mixAudio && this.mixAudio.stop();
this.moveOutLimit(-1);
};
t.prototype.moveOutLimit = function(e) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
if (-1 == e) for (var t = 0; t < this.mixCom.length; t++) this.mixCom[t].stopMix(); else this.mixCom[e].stopMix();
this.stopBlendAction(e);
};
t.prototype.mixEnd = function(e) {
null != this.mixAudio && this.mixAudio.stop();
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
for (var o = e.node, n = null, i = 0; i < this.mixCom.length; i++) if (this.mixCom[i] == e) {
n = this._mixActions[i];
break;
}
null != this._drag && this._drag.targetCollider.length > i && (this._drag.targetCollider[i] = null);
if (null != o) {
null != n && o.stopAction(n);
this._mixActions[i] = null;
o.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
};
__decorate([ l({
tooltip: "是否需要旋转"
}) ], t.prototype, "isNeedRotate", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ l({
type: [ n.default ],
visible: !1
}) ], t.prototype, "_mixCom", void 0);
__decorate([ l({
type: [ n.default ]
}) ], t.prototype, "mixCom", null);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../codebase/EventListenerCS": "EventListenerCS",
"../codebase/SpriteDrag/DragEventListenerCS": "DragEventListenerCS",
"../codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"./MixComponentCS": "MixComponentCS"
} ],
BlendMixMultipleGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c0f1edEYyVF/4AxtvRF+VtU", "BlendMixMultipleGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentGS"), i = e("../codebase/SpriteDrag/SpriteDragGS"), c = e("../codebase/SpriteDrag/DragEventListenerGS"), a = e("../codebase/EventListenerGS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isNeedRotate = !1;
t.mixBlenderAnimation = [];
t._mixCom = [];
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixActions = [];
t.mixAudio = null;
return t;
}
Object.defineProperty(t.prototype, "mixCom", {
get: function() {
return this._mixCom;
},
set: function(e) {
this._mixCom = e;
this._mixActions = [];
for (var t = 0, o = this._mixCom; t < o.length; t++) {
o[t].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
if (this._mixActions.length != this.mixCom.length) {
this._mixActions = [];
for (var e = 0, t = this._mixCom; e < t.length; e++) {
t[e].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
}
null != this.mixAudio && (this.mixAudio = this.getComponent(cc.AudioSource));
null == this._drag && (this._drag = this.getComponent(i.default));
if (null != this._drag) for (var o = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], s = [ c.DragEventType.Draging, c.DragEventType.TouchCancle, c.DragEventType.TouchEnd ], r = 0; r < o.length; r++) this._drag.eventTouchs.push(new c.default(this, o[r], s[r]));
};
t.prototype.startBlendAction = function(e) {
null == this.mixAudio || this.mixAudio.isPlaying || this.mixAudio.play();
if (null == this._blendaction) {
var t = this.getComponent(cc.Sprite);
if (null != t) {
this.orignalFrame = t.spriteFrame;
for (var o = [], n = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = this.mixBlenderAnimation; i < c.length; i++) {
n(c[i]);
}
this._blendaction = cc.repeatForever(cc.sequence(o));
this.node.runAction(this._blendaction);
}
}
var a = this.mixCom[e].node, s = this._mixActions[e];
if (null != a && null == s) {
cc.log("run Action " + e);
var r = cc.scaleTo(.7, 1, .95), l = cc.scaleTo(.7, .95, 1.08);
if (this.isNeedRotate) {
var d = cc.sequence(r, l), u = cc.spawn(d, cc.rotateBy(1.5, 100 * Math.random() + 80));
s = cc.repeatForever(u);
} else s = cc.repeatForever(cc.sequence(r, l));
a.runAction(s);
this._mixActions[e] = s;
}
};
t.prototype.stopBlendAction = function(e) {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
}
if (-1 == e) for (var o = 0; o < this.mixCom.length; o++) {
var n = this.mixCom[o].node, i = this._mixActions[o];
null != n && null != i && n.stopAction(i);
this._mixActions[o] = null;
this.mixCom[o].stopMix();
} else {
n = this.mixCom[e].node, i = this._mixActions[e];
null != n && null != i && n.stopAction(i);
this._mixActions[e] = null;
this.mixCom[e].stopMix();
}
};
t.prototype.moveBlender = function(e, t) {
var o = t.getInTargetIndex();
if (-1 != o) {
for (var n = 0; n < this.mixCom.length; n++) n != o && this.moveOutLimit(n);
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
this.mixCom[o].startMix();
this.startBlendAction(o);
} else this.moveOutLimit(-1);
};
t.prototype.touchUpBlender = function() {
null != this.mixAudio && this.mixAudio.stop();
this.moveOutLimit(-1);
};
t.prototype.moveOutLimit = function(e) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
if (-1 == e) for (var t = 0; t < this.mixCom.length; t++) this.mixCom[t].stopMix(); else this.mixCom[e].stopMix();
this.stopBlendAction(e);
};
t.prototype.mixEnd = function(e) {
null != this.mixAudio && this.mixAudio.stop();
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
for (var o = e.node, n = null, i = 0; i < this.mixCom.length; i++) if (this.mixCom[i] == e) {
n = this._mixActions[i];
break;
}
null != this._drag && this._drag.targetCollider.length > i && (this._drag.targetCollider[i] = null);
if (null != o) {
null != n && o.stopAction(n);
this._mixActions[i] = null;
o.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
};
__decorate([ l({
tooltip: "是否需要旋转"
}) ], t.prototype, "isNeedRotate", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ l({
type: [ n.default ],
visible: !1
}) ], t.prototype, "_mixCom", void 0);
__decorate([ l({
type: [ n.default ]
}) ], t.prototype, "mixCom", null);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../codebase/EventListenerGS": "EventListenerGS",
"../codebase/SpriteDrag/DragEventListenerGS": "DragEventListenerGS",
"../codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"./MixComponentGS": "MixComponentGS"
} ],
BlendMixMultipleHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1198ppBvVBpZozSB4Ik63F", "BlendMixMultipleHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentHC"), i = e("../codebase/SpriteDrag/SpriteDragHC"), c = e("../codebase/SpriteDrag/DragEventListenerHC"), a = e("../codebase/EventListenerHC"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isNeedRotate = !1;
t.mixBlenderAnimation = [];
t._mixCom = [];
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixActions = [];
t.mixAudio = null;
return t;
}
Object.defineProperty(t.prototype, "mixCom", {
get: function() {
return this._mixCom;
},
set: function(e) {
this._mixCom = e;
this._mixActions = [];
for (var t = 0, o = this._mixCom; t < o.length; t++) {
o[t].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
if (this._mixActions.length != this.mixCom.length) {
this._mixActions = [];
for (var e = 0, t = this._mixCom; e < t.length; e++) {
t[e].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
}
null != this.mixAudio && (this.mixAudio = this.getComponent(cc.AudioSource));
null == this._drag && (this._drag = this.getComponent(i.default));
if (null != this._drag) for (var o = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], s = [ c.DragEventType.Draging, c.DragEventType.TouchCancle, c.DragEventType.TouchEnd ], r = 0; r < o.length; r++) this._drag.eventTouchs.push(new c.default(this, o[r], s[r]));
};
t.prototype.startBlendAction = function(e) {
null == this.mixAudio || this.mixAudio.isPlaying || this.mixAudio.play();
if (null == this._blendaction) {
var t = this.getComponent(cc.Sprite);
if (null != t) {
this.orignalFrame = t.spriteFrame;
for (var o = [], n = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = this.mixBlenderAnimation; i < c.length; i++) {
n(c[i]);
}
this._blendaction = cc.repeatForever(cc.sequence(o));
this.node.runAction(this._blendaction);
}
}
var a = this.mixCom[e].node, s = this._mixActions[e];
if (null != a && null == s) {
cc.log("run Action " + e);
var r = cc.scaleTo(.7, 1, .95), l = cc.scaleTo(.7, .95, 1.08);
if (this.isNeedRotate) {
var d = cc.sequence(r, l), u = cc.spawn(d, cc.rotateBy(1.5, 100 * Math.random() + 80));
s = cc.repeatForever(u);
} else s = cc.repeatForever(cc.sequence(r, l));
a.runAction(s);
this._mixActions[e] = s;
}
};
t.prototype.stopBlendAction = function(e) {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
}
if (-1 == e) for (var o = 0; o < this.mixCom.length; o++) {
var n = this.mixCom[o].node, i = this._mixActions[o];
null != n && null != i && n.stopAction(i);
this._mixActions[o] = null;
this.mixCom[o].stopMix();
} else {
n = this.mixCom[e].node, i = this._mixActions[e];
null != n && null != i && n.stopAction(i);
this._mixActions[e] = null;
this.mixCom[e].stopMix();
}
};
t.prototype.moveBlender = function(e, t) {
var o = t.getInTargetIndex();
if (-1 != o) {
for (var n = 0; n < this.mixCom.length; n++) n != o && this.moveOutLimit(n);
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
this.mixCom[o].startMix();
this.startBlendAction(o);
} else this.moveOutLimit(-1);
};
t.prototype.touchUpBlender = function() {
null != this.mixAudio && this.mixAudio.stop();
this.moveOutLimit(-1);
};
t.prototype.moveOutLimit = function(e) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
if (-1 == e) for (var t = 0; t < this.mixCom.length; t++) this.mixCom[t].stopMix(); else this.mixCom[e].stopMix();
this.stopBlendAction(e);
};
t.prototype.mixEnd = function(e) {
null != this.mixAudio && this.mixAudio.stop();
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
for (var o = e.node, n = null, i = 0; i < this.mixCom.length; i++) if (this.mixCom[i] == e) {
n = this._mixActions[i];
break;
}
null != this._drag && this._drag.targetCollider.length > i && (this._drag.targetCollider[i] = null);
if (null != o) {
null != n && o.stopAction(n);
this._mixActions[i] = null;
o.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
};
__decorate([ l({
tooltip: "是否需要旋转"
}) ], t.prototype, "isNeedRotate", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ l({
type: [ n.default ],
visible: !1
}) ], t.prototype, "_mixCom", void 0);
__decorate([ l({
type: [ n.default ]
}) ], t.prototype, "mixCom", null);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../codebase/EventListenerHC": "EventListenerHC",
"../codebase/SpriteDrag/DragEventListenerHC": "DragEventListenerHC",
"../codebase/SpriteDrag/SpriteDragHC": "SpriteDragHC",
"./MixComponentHC": "MixComponentHC"
} ],
BlendMixMultipleRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1298ppBvVBpZozSB4Ik63F", "BlendMixMultipleRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentRS"), i = e("../codebase/SpriteDrag/SpriteDragRS"), c = e("../codebase/SpriteDrag/DragEventListenerRS"), a = e("../codebase/EventListenerRS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isNeedRotate = !1;
t.mixBlenderAnimation = [];
t._mixCom = [];
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixActions = [];
t.mixAudio = null;
return t;
}
Object.defineProperty(t.prototype, "mixCom", {
get: function() {
return this._mixCom;
},
set: function(e) {
this._mixCom = e;
this._mixActions = [];
for (var t = 0, o = this._mixCom; t < o.length; t++) {
o[t].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
if (this._mixActions.length != this.mixCom.length) {
this._mixActions = [];
for (var e = 0, t = this._mixCom; e < t.length; e++) {
t[e].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
}
null != this.mixAudio && (this.mixAudio = this.getComponent(cc.AudioSource));
null == this._drag && (this._drag = this.getComponent(i.default));
if (null != this._drag) for (var o = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], s = [ c.DragEventType.Draging, c.DragEventType.TouchCancle, c.DragEventType.TouchEnd ], r = 0; r < o.length; r++) this._drag.eventTouchs.push(new c.default(this, o[r], s[r]));
};
t.prototype.startBlendAction = function(e) {
null == this.mixAudio || this.mixAudio.isPlaying || this.mixAudio.play();
if (null == this._blendaction) {
var t = this.getComponent(cc.Sprite);
if (null != t) {
this.orignalFrame = t.spriteFrame;
for (var o = [], n = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = this.mixBlenderAnimation; i < c.length; i++) {
n(c[i]);
}
this._blendaction = cc.repeatForever(cc.sequence(o));
this.node.runAction(this._blendaction);
}
}
var a = this.mixCom[e].node, s = this._mixActions[e];
if (null != a && null == s) {
cc.log("run Action " + e);
var r = cc.scaleTo(.7, 1, .95), l = cc.scaleTo(.7, .95, 1.08);
if (this.isNeedRotate) {
var d = cc.sequence(r, l), u = cc.spawn(d, cc.rotateBy(1.5, 100 * Math.random() + 80));
s = cc.repeatForever(u);
} else s = cc.repeatForever(cc.sequence(r, l));
a.runAction(s);
this._mixActions[e] = s;
}
};
t.prototype.stopBlendAction = function(e) {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
}
if (-1 == e) for (var o = 0; o < this.mixCom.length; o++) {
var n = this.mixCom[o].node, i = this._mixActions[o];
null != n && null != i && n.stopAction(i);
this._mixActions[o] = null;
this.mixCom[o].stopMix();
} else {
n = this.mixCom[e].node, i = this._mixActions[e];
null != n && null != i && n.stopAction(i);
this._mixActions[e] = null;
this.mixCom[e].stopMix();
}
};
t.prototype.moveBlender = function(e, t) {
var o = t.getInTargetIndex();
if (-1 != o) {
for (var n = 0; n < this.mixCom.length; n++) n != o && this.moveOutLimit(n);
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
this.mixCom[o].startMix();
this.startBlendAction(o);
} else this.moveOutLimit(-1);
};
t.prototype.touchUpBlender = function() {
null != this.mixAudio && this.mixAudio.stop();
this.moveOutLimit(-1);
};
t.prototype.moveOutLimit = function(e) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
if (-1 == e) for (var t = 0; t < this.mixCom.length; t++) this.mixCom[t].stopMix(); else this.mixCom[e].stopMix();
this.stopBlendAction(e);
};
t.prototype.mixEnd = function(e) {
null != this.mixAudio && this.mixAudio.stop();
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
for (var o = e.node, n = null, i = 0; i < this.mixCom.length; i++) if (this.mixCom[i] == e) {
n = this._mixActions[i];
break;
}
null != this._drag && this._drag.targetCollider.length > i && (this._drag.targetCollider[i] = null);
if (null != o) {
null != n && o.stopAction(n);
this._mixActions[i] = null;
o.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
};
__decorate([ l({
tooltip: "是否需要旋转"
}) ], t.prototype, "isNeedRotate", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ l({
type: [ n.default ],
visible: !1
}) ], t.prototype, "_mixCom", void 0);
__decorate([ l({
type: [ n.default ]
}) ], t.prototype, "mixCom", null);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../codebase/EventListenerRS": "EventListenerRS",
"../codebase/SpriteDrag/DragEventListenerRS": "DragEventListenerRS",
"../codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"./MixComponentRS": "MixComponentRS"
} ],
BlendMixMultipleSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1398ppBvVBpZozSB4Ik63F", "BlendMixMultipleSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentSD"), i = e("../codebase/SpriteDrag/SpriteDragSD"), c = e("../codebase/SpriteDrag/DragEventListenerSD"), a = e("../codebase/EventListenerSD"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isNeedRotate = !1;
t.mixBlenderAnimation = [];
t._mixCom = [];
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixActions = [];
t.mixAudio = null;
return t;
}
Object.defineProperty(t.prototype, "mixCom", {
get: function() {
return this._mixCom;
},
set: function(e) {
this._mixCom = e;
this._mixActions = [];
for (var t = 0, o = this._mixCom; t < o.length; t++) {
o[t].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
if (this._mixActions.length != this.mixCom.length) {
this._mixActions = [];
for (var e = 0, t = this._mixCom; e < t.length; e++) {
t[e].mixLis.push(new a.default(this, "mixEnd", n.default.MIXEND));
this._mixActions.push(null);
}
}
null != this.mixAudio && (this.mixAudio = this.getComponent(cc.AudioSource));
null == this._drag && (this._drag = this.getComponent(i.default));
if (null != this._drag) for (var o = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], s = [ c.DragEventType.Draging, c.DragEventType.TouchCancle, c.DragEventType.TouchEnd ], r = 0; r < o.length; r++) this._drag.eventTouchs.push(new c.default(this, o[r], s[r]));
};
t.prototype.startBlendAction = function(e) {
null == this.mixAudio || this.mixAudio.isPlaying || this.mixAudio.play();
if (null == this._blendaction) {
var t = this.getComponent(cc.Sprite);
if (null != t) {
this.orignalFrame = t.spriteFrame;
for (var o = [], n = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = this.mixBlenderAnimation; i < c.length; i++) {
n(c[i]);
}
this._blendaction = cc.repeatForever(cc.sequence(o));
this.node.runAction(this._blendaction);
}
}
var a = this.mixCom[e].node, s = this._mixActions[e];
if (null != a && null == s) {
cc.log("run Action " + e);
var r = cc.scaleTo(.7, 1, .95), l = cc.scaleTo(.7, .95, 1.08);
if (this.isNeedRotate) {
var d = cc.sequence(r, l), u = cc.spawn(d, cc.rotateBy(1.5, 100 * Math.random() + 80));
s = cc.repeatForever(u);
} else s = cc.repeatForever(cc.sequence(r, l));
a.runAction(s);
this._mixActions[e] = s;
}
};
t.prototype.stopBlendAction = function(e) {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
}
if (-1 == e) for (var o = 0; o < this.mixCom.length; o++) {
var n = this.mixCom[o].node, i = this._mixActions[o];
null != n && null != i && n.stopAction(i);
this._mixActions[o] = null;
this.mixCom[o].stopMix();
} else {
n = this.mixCom[e].node, i = this._mixActions[e];
null != n && null != i && n.stopAction(i);
this._mixActions[e] = null;
this.mixCom[e].stopMix();
}
};
t.prototype.moveBlender = function(e, t) {
var o = t.getInTargetIndex();
if (-1 != o) {
for (var n = 0; n < this.mixCom.length; n++) n != o && this.moveOutLimit(n);
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
this.mixCom[o].startMix();
this.startBlendAction(o);
} else this.moveOutLimit(-1);
};
t.prototype.touchUpBlender = function() {
null != this.mixAudio && this.mixAudio.stop();
this.moveOutLimit(-1);
};
t.prototype.moveOutLimit = function(e) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
if (-1 == e) for (var t = 0; t < this.mixCom.length; t++) this.mixCom[t].stopMix(); else this.mixCom[e].stopMix();
this.stopBlendAction(e);
};
t.prototype.mixEnd = function(e) {
null != this.mixAudio && this.mixAudio.stop();
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var t = this.getComponent(cc.Sprite);
t && this.orignalFrame && (t.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
for (var o = e.node, n = null, i = 0; i < this.mixCom.length; i++) if (this.mixCom[i] == e) {
n = this._mixActions[i];
break;
}
null != this._drag && this._drag.targetCollider.length > i && (this._drag.targetCollider[i] = null);
if (null != o) {
null != n && o.stopAction(n);
this._mixActions[i] = null;
o.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
};
__decorate([ l({
tooltip: "是否需要旋转"
}) ], t.prototype, "isNeedRotate", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ l({
type: [ n.default ],
visible: !1
}) ], t.prototype, "_mixCom", void 0);
__decorate([ l({
type: [ n.default ]
}) ], t.prototype, "mixCom", null);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../codebase/EventListenerSD": "EventListenerSD",
"../codebase/SpriteDrag/DragEventListenerSD": "DragEventListenerSD",
"../codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"./MixComponentSD": "MixComponentSD"
} ],
BlenderMixCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a810bBuvcpPSbMrA4e8+i2J", "BlenderMixCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentCB"), i = e("../codebase/utils/CocosHelperCB"), c = e("../codebase/SpriteDrag/SpriteDragCB"), a = e("../codebase/SpriteDrag/DragEventListenerCB"), s = e("../codebase/EventListenerCB"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerCB": "EventListenerCB",
"../codebase/SpriteDrag/DragEventListenerCB": "DragEventListenerCB",
"../codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"../codebase/utils/CocosHelperCB": "CocosHelperCB",
"./MixComponentCB": "MixComponentCB"
} ],
BlenderMixCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14cabeV7VFlJnSzyFcYsIO", "BlenderMixCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentCE"), i = e("../codebase/utils/CocosHelperCE"), c = e("../codebase/SpriteDrag/SpriteDragCE"), a = e("../codebase/SpriteDrag/DragEventListenerCE"), s = e("../codebase/EventListenerCE"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerCE": "EventListenerCE",
"../codebase/SpriteDrag/DragEventListenerCE": "DragEventListenerCE",
"../codebase/SpriteDrag/SpriteDragCE": "SpriteDragCE",
"../codebase/utils/CocosHelperCE": "CocosHelperCE",
"./MixComponentCE": "MixComponentCE"
} ],
BlenderMixCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b220bBuvcpPSbMrA4e8+i2J", "BlenderMixCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentCS"), i = e("../codebase/utils/CocosHelperCS"), c = e("../codebase/SpriteDrag/SpriteDragCS"), a = e("../codebase/SpriteDrag/DragEventListenerCS"), s = e("../codebase/EventListenerCS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerCS": "EventListenerCS",
"../codebase/SpriteDrag/DragEventListenerCS": "DragEventListenerCS",
"../codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"../codebase/utils/CocosHelperCS": "CocosHelperCS",
"./MixComponentCS": "MixComponentCS"
} ],
BlenderMixFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21cabeV7VFlJnSzyFcYsIO", "BlenderMixFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentFS"), i = e("../codebase/utils/CocosHelperFS"), c = e("../codebase/SpriteDrag/SpriteDragFS"), a = e("../codebase/SpriteDrag/DragEventListenerFS"), s = e("../codebase/EventListenerFS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerFS": "EventListenerFS",
"../codebase/SpriteDrag/DragEventListenerFS": "DragEventListenerFS",
"../codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../codebase/utils/CocosHelperFS": "CocosHelperFS",
"./MixComponentFS": "MixComponentFS"
} ],
BlenderMixGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19cabeV7VFlJnSzyFcYsIO", "BlenderMixGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentGL"), i = e("../codebase/utils/CocosHelperGL"), c = e("../codebase/SpriteDrag/SpriteDragGL"), a = e("../codebase/SpriteDrag/DragEventListenerGL"), s = e("../codebase/EventListenerGL"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerGL": "EventListenerGL",
"../codebase/SpriteDrag/DragEventListenerGL": "DragEventListenerGL",
"../codebase/SpriteDrag/SpriteDragGL": "SpriteDragGL",
"../codebase/utils/CocosHelperGL": "CocosHelperGL",
"./MixComponentGL": "MixComponentGL"
} ],
BlenderMixGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bf921+S9EZJO5lJTe74XgWG", "BlenderMixGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentGS"), i = e("../codebase/utils/CocosHelperGS"), c = e("../codebase/SpriteDrag/SpriteDragGS"), a = e("../codebase/SpriteDrag/DragEventListenerGS"), s = e("../codebase/EventListenerGS"), r = e("../codebase/TransitionSceneGS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
t.isEnter1 = !1;
t.isEnter2 = !1;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.55, 1, .95), a = cc.scaleTo(.55, .95, 1.08);
cc.rotateBy(.55, 50);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
if ("spoon0" == this.node.name) {
var t = cc.moveBy(1, cc.v2(cc.view.getVisibleSize().width, 0)), o = cc.callFunc(function() {
cc.find("Canvas/kettle").getComponent("kettleGS").SceneEnd();
}.bind(this)), n = cc.sequence(o, t);
this.node.runAction(n);
var i = this;
this.schedule(function() {
if (!i.isEnter1) {
i.isEnter1 = !0;
r.default.changeScene("gameScene2GS", "111");
}
}, 3);
}
if ("spoon3" == this.node.name) {
o = cc.callFunc(function() {
cc.find("Canvas/cup/kettle").getComponent("kettleGS").Scene2End();
}.bind(this)), t = cc.moveBy(1.5, cc.v2(cc.view.getVisibleSize().width, 0)), n = cc.sequence(o, t);
this.node.runAction(n);
var c = this;
this.schedule(function() {
if (!c.isEnter2) {
c.isEnter2 = !0;
r.default.changeScene("gameScene3GS", "111");
}
}, 3);
}
if ("spoon" == this.node.name) {
o = cc.callFunc(function() {
cc.find("Canvas/cup").getComponent("cupGS").sceneEnd();
}.bind(this));
this.node.runAction(o);
this.schedule(function() {}, 3);
}
};
__decorate([ u({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ u({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ u({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/EventListenerGS": "EventListenerGS",
"../codebase/SpriteDrag/DragEventListenerGS": "DragEventListenerGS",
"../codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"../codebase/TransitionSceneGS": "TransitionSceneGS",
"../codebase/utils/CocosHelperGS": "CocosHelperGS",
"./MixComponentGS": "MixComponentGS"
} ],
BlenderMixHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b110bBuvcpPSbMrA4e8+i2J", "BlenderMixHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentHC"), i = e("../codebase/utils/CocosHelperHC"), c = e("../codebase/SpriteDrag/SpriteDragHC"), a = e("../codebase/SpriteDrag/DragEventListenerHC"), s = e("../codebase/EventListenerHC"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerHC": "EventListenerHC",
"../codebase/SpriteDrag/DragEventListenerHC": "DragEventListenerHC",
"../codebase/SpriteDrag/SpriteDragHC": "SpriteDragHC",
"../codebase/utils/CocosHelperHC": "CocosHelperHC",
"./MixComponentHC": "MixComponentHC"
} ],
BlenderMixMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4a08051cCxFhYy3GvG/gAPI", "BlenderMixMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentMS"), i = e("../codebase/utils/CocosHelperMS"), c = e("../codebase/SpriteDrag/SpriteDragMS"), a = e("../codebase/SpriteDrag/DragEventListenerMS"), s = e("../codebase/EventListenerMS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t.isNeedScale = !0;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && "spoon" == this.node.name) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction && this.isNeedScale) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
__decorate([ d ], t.prototype, "isNeedScale", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerMS": "EventListenerMS",
"../codebase/SpriteDrag/DragEventListenerMS": "DragEventListenerMS",
"../codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../codebase/utils/CocosHelperMS": "CocosHelperMS",
"./MixComponentMS": "MixComponentMS"
} ],
BlenderMixRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77cabeV7VFlJnSzyFcYsIO", "BlenderMixRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentRP"), i = e("../codebase/utils/CocosHelperRP"), c = e("../codebase/SpriteDrag/SpriteDragRP"), a = e("../codebase/SpriteDrag/DragEventListenerRP"), s = e("../codebase/EventListenerRP"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerRP": "EventListenerRP",
"../codebase/SpriteDrag/DragEventListenerRP": "DragEventListenerRP",
"../codebase/SpriteDrag/SpriteDragRP": "SpriteDragRP",
"../codebase/utils/CocosHelperRP": "CocosHelperRP",
"./MixComponentRP": "MixComponentRP"
} ],
BlenderMixRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b120bBuvcpPSbMrA4e8+i2J", "BlenderMixRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentRS"), i = e("../codebase/utils/CocosHelperRS"), c = e("../codebase/SpriteDrag/SpriteDragRS"), a = e("../codebase/SpriteDrag/DragEventListenerRS"), s = e("../codebase/EventListenerRS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerRS": "EventListenerRS",
"../codebase/SpriteDrag/DragEventListenerRS": "DragEventListenerRS",
"../codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../codebase/utils/CocosHelperRS": "CocosHelperRS",
"./MixComponentRS": "MixComponentRS"
} ],
BlenderMixSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b130bBuvcpPSbMrA4e8+i2J", "BlenderMixSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponentSD"), i = e("../codebase/utils/CocosHelperSD"), c = e("../codebase/SpriteDrag/SpriteDragSD"), a = e("../codebase/SpriteDrag/DragEventListenerSD"), s = e("../codebase/EventListenerSD"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListenerSD": "EventListenerSD",
"../codebase/SpriteDrag/DragEventListenerSD": "DragEventListenerSD",
"../codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"../codebase/utils/CocosHelperSD": "CocosHelperSD",
"./MixComponentSD": "MixComponentSD"
} ],
BlenderMix: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "762cabeV7VFlJnSzyFcYsIO", "BlenderMix");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MixComponent"), i = e("../codebase/utils/CocosHelper"), c = e("../codebase/SpriteDrag/SpriteDrag"), a = e("../codebase/SpriteDrag/DragEventListener"), s = e("../codebase/EventListener"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.CocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1.08);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../codebase/EventListener": "EventListener",
"../codebase/SpriteDrag/DragEventListener": "DragEventListener",
"../codebase/SpriteDrag/SpriteDrag": "SpriteDrag",
"../codebase/utils/CocosHelper": "CocosHelper",
"./MixComponent": "MixComponent"
} ],
BubbleClickGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b192bjGpQpBX727wOMnSpre", "BubbleClickGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./PlayControllerGL"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.click = function() {
this.node.stopAllActions();
var e = cc.scaleBy(.1, 1.05, .95), t = cc.scaleBy(.1, .95, 1.05), o = cc.scaleTo(.1, 1, 1);
cc.find("Canvas/slime").runAction(cc.repeat(cc.sequence(e, t, o), 2));
var i = cc.find("Canvas/progress/mask").height;
this.node.getComponent(cc.Animation).play("bubble");
this.node.getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/tipClick").active = !1;
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.node.destroy();
cc.find("Canvas").getComponent(n.default).createBubble();
cc.find("Canvas").getComponent(n.default).bubbleNum = cc.find("Canvas").getComponent(n.default).bubbleNum + 1;
}.bind(this))));
if (!cc.find("Canvas/clock").getComponent(cc.Animation).getAnimationState("timing").isPlaying) {
cc.find("Canvas/clock").getComponent(cc.Animation).play("timing");
cc.find("Canvas/clock").getComponent(cc.AudioSource).play();
}
cc.find("Canvas/progress/mask").height = i + 5;
if (cc.find("Canvas/progress/mask").height >= 390) {
cc.find("Canvas/slime").runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
cc.log("aaa");
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
}.bind(this))));
cc.find("Canvas/boom").active = !0;
cc.find("Canvas/boom").getComponent(cc.AudioSource).play();
cc.find("Canvas/clock").getComponent(cc.Animation).stop();
cc.find("Canvas/clock/clock2").rotation = 0;
cc.find("Canvas/clock").getComponent(cc.AudioSource).stop();
cc.find("Canvas/clock").active = !1;
cc.find("Canvas/slime").children.forEach(function(e) {
"bubbleCopy" == e.name && e.destroy();
});
}
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./PlayControllerGL": "PlayControllerGL"
} ],
BubbleClickHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11c2T9FNlIaaDD5mPuIvkt", "BubbleClickHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./PlayControllerHC"), i = e("../common/Script/codebase/utils/CocosHelperHC"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.click = function() {
this.node.stopAllActions();
var e = cc.scaleBy(.1, 1.05, .95), t = cc.scaleBy(.1, .95, 1.05), o = cc.scaleTo(.1, 1, .8);
cc.find("Canvas/slime").runAction(cc.repeat(cc.sequence(e, t, o), 2));
var c = cc.find("Canvas/progress/mask").height;
this.node.getComponent(cc.Animation).play("bubble");
this.node.getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/tipClick").active = !1;
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.node.destroy();
cc.find("Canvas").getComponent(n.default).createBubble();
cc.find("Canvas").getComponent(n.default).bubbleNum = cc.find("Canvas").getComponent(n.default).bubbleNum + 1;
}.bind(this))));
cc.find("Canvas/clock").getComponent(cc.Animation).getAnimationState("timing").isPlaying || cc.find("Canvas/clock").getComponent(cc.Animation).play("timing");
cc.find("Canvas/progress/mask").height = c + 5;
if (cc.find("Canvas/progress/mask").height >= 390) {
cc.find("Canvas/slime").runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
cc.log("aaa");
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.sequence(cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}.bind(this))));
cc.find("Canvas/boom").active = !0;
cc.find("Canvas/boom").getComponent(cc.AudioSource).play();
cc.find("Canvas/clock").getComponent(cc.Animation).stop();
cc.find("Canvas/clock/clock2").rotation = 0;
cc.find("Canvas/clock").active = !1;
cc.find("Canvas/slime").children.forEach(function(e) {
"bubbleCopy" == e.name && e.destroy();
});
}
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperHC": "CocosHelperHC",
"./PlayControllerHC": "PlayControllerHC"
} ],
BubbleClickMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4620fFWGdxE0bM+RDRCyPjC", "BubbleClickMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.click = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
ButtonSafeCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "96202+7z/FAdIavfDLduMbf", "ButtonSafeCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
var i = e.node.getScale(), c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1498ApuzxNW4dD3UBBCYjg", "ButtonSafeCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.scale = 0;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
var i = e.node.scale;
0 != e.scale && (i = e.scale);
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
__decorate([ c ], t.prototype, "scale", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2202+7z/FAdIavfDLduMbf", "ButtonSafeCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = this.node.scale, i = !1;
this.node.on("click", function() {
t.clickEvents = [];
if (!i) {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, n);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
i = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
i = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2198ApuzxNW4dD3UBBCYjg", "ButtonSafeFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.scale = 0;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
t.clickEvents = [];
if (!n) {
var i = e.node.scale;
0 != e.scale && (i = e.scale);
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
__decorate([ c ], t.prototype, "scale", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1998ApuzxNW4dD3UBBCYjg", "ButtonSafeGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.scale = 0;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
t.clickEvents = [];
if (!n) {
var i = e.node.scale;
0 != e.scale && (i = e.scale);
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
__decorate([ c ], t.prototype, "scale", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "50ddfJWuiRMD6YZ/EWIymm8", "ButtonSafeGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.stopAllActions();
var i = e.node.getScale(), c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1102+7z/FAdIavfDLduMbf", "ButtonSafeHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
var i = e.node.getScale(), c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b4214eqYVNM5YpvrX4PMU4z", "ButtonSafeMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = .5;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7798ApuzxNW4dD3UBBCYjg", "ButtonSafeRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.scale = 0;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
t.clickEvents = [];
if (!n) {
var i = e.node.scale;
0 != e.scale && (i = e.scale);
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
__decorate([ c ], t.prototype, "scale", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1202+7z/FAdIavfDLduMbf", "ButtonSafeRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
var i = e.node.getScale(), c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafeSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1302+7z/FAdIavfDLduMbf", "ButtonSafeSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = this.node.scale, i = !1;
this.node.on("click", function() {
t.clickEvents = [];
if (!i) {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, n);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
i = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
i = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafe_hall: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e94d6pbjLZGtYNg4c0TBjGF", "ButtonSafe_hall");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = .5;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
t.clickEvents = [];
if (!n) {
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ButtonSafe: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bcc98ApuzxNW4dD3UBBCYjg", "ButtonSafe");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.safeTime = 1;
t.scale = 0;
t.clickEvents = [];
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getComponent(cc.Button);
if (t) {
this.clickEvents = t.clickEvents;
var o = this, n = !1;
this.node.on("click", function() {
e.node.getComponent(cc.AudioSource) && e.node.getComponent(cc.AudioSource).play();
e.node.stopAllActions();
t.clickEvents = [];
if (!n) {
var i = e.node.scale;
0 != e.scale && (i = e.scale);
var c = cc.scaleBy(.3, 1.1, .9), a = cc.scaleBy(.3, .9, 1.1), s = cc.scaleTo(.1, i);
e.node.runAction(cc.repeat(cc.sequence(c, a, s), 2));
n = !0;
o.scheduleOnce(function(e) {
t.clickEvents = o.clickEvents;
n = !1;
}, e.safeTime);
}
}, this);
}
};
__decorate([ c ], t.prototype, "safeTime", void 0);
__decorate([ c ], t.prototype, "scale", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
CakeMaskCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b140d88vp1A6phG/KA1mxpl", "CakeMaskCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskCE"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"./CustomMaskCE": "CustomMaskCE"
} ],
CakeMaskFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b210d88vp1A6phG/KA1mxpl", "CakeMaskFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskFS"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"./CustomMaskFS": "CustomMaskFS"
} ],
CakeMaskGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b190d88vp1A6phG/KA1mxpl", "CakeMaskGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskGL"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"./CustomMaskGL": "CustomMaskGL"
} ],
CakeMaskMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb1adbDh31Bq5ZSY2ainOsa", "CakeMaskMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskMS"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"./CustomMaskMS": "CustomMaskMS"
} ],
CakeMaskRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b770d88vp1A6phG/KA1mxpl", "CakeMaskRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskRP"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"./CustomMaskRP": "CustomMaskRP"
} ],
CakeMask: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2e20d88vp1A6phG/KA1mxpl", "CakeMask");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMask"), i = cc._decorator, c = i.ccclass, a = (i.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"./CustomMask": "CustomMask"
} ],
CellClickGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19b1F4evhJPoj9nnRIk3G2", "CellClickGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneGL"), i = e("./DataConfigGL"), c = e("./PopupComponetGL"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.cellClick = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
if (o.parent.active) {
cc.find("Canvas").getComponent(cc.AudioSource).play();
o.parent.stopAllActions();
o.parent.angle = 0;
o.parent.runAction(cc.sequence(cc.scaleBy(.5, 1.1), cc.scaleBy(.5, .9), cc.callFunc(function() {
cc.loader.loadRes("galaxyslime/prefab/popup", cc.Prefab, function(e, o) {
var a = cc.instantiate(o);
cc.find("Canvas").addChild(a);
var s = a.getComponent(c.default);
s.showPopup();
s.setTip("Redo?");
s.setCallback(function() {
console.log("btn" + t);
i.default.getInstance().setChangeIndex(parseInt(t));
n.default.changeScene("makeSlimeGL");
});
}.bind(this));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
o.getComponent(cc.Button).interactable = !0;
}.bind(this))));
}
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"./DataConfigGL": "DataConfigGL",
"./PopupComponetGL": "PopupComponetGL"
} ],
CheckScribblePercentCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c5e63ZneP5LjbGAcgFNE1Qh", "CheckScribblePercentCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperCB"), i = e("../codebase/EventListenerCB"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
var t = this;
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
n.CocosHelper.captureNode(e).then(function(o) {
t._pixcelBegin = t.calcute(o);
e.destroy();
t.iniiting = !1;
t.hasInited = !0;
});
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
var t = this;
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) this.hasInited && n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelEnd = t.calcute(e);
var n = 1 - t._pixcelEnd / t._pixcelBegin;
t.enabled && i.default.emitEvents(o.CheckPercentEvent, t.checkEvents, n, t);
}); else {
this.iniiting = !0;
n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelBegin = t.calcute(e);
t.iniiting = !1;
t.hasInited = !0;
});
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerCB": "EventListenerCB",
"../codebase/utils/CocosHelperCB": "CocosHelperCB"
} ],
CheckScribblePercentCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1445Q1G01Hu6R+085s9Dc9", "CheckScribblePercentCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperCE"), i = e("../codebase/EventListenerCE"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(e));
e.destroy();
this.iniiting = !1;
this.hasInited = !0;
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerCE": "EventListenerCE",
"../codebase/utils/CocosHelperCE": "CocosHelperCE"
} ],
CheckScribblePercentCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2263ZneP5LjbGAcgFNE1Qh", "CheckScribblePercentCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperCS"), i = e("../codebase/EventListenerCS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
var t = this;
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
n.CocosHelper.captureNode(e).then(function(o) {
t._pixcelBegin = t.calcute(o);
e.destroy();
t.iniiting = !1;
t.hasInited = !0;
});
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
var t = this;
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) this.hasInited && n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelEnd = t.calcute(e);
var n = 1 - t._pixcelEnd / t._pixcelBegin;
t.enabled && i.default.emitEvents(o.CheckPercentEvent, t.checkEvents, n, t);
}); else {
this.iniiting = !0;
n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelBegin = t.calcute(e);
t.iniiting = !1;
t.hasInited = !0;
});
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerCS": "EventListenerCS",
"../codebase/utils/CocosHelperCS": "CocosHelperCS"
} ],
CheckScribblePercentFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2145Q1G01Hu6R+085s9Dc9", "CheckScribblePercentFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperFS"), i = e("../codebase/EventListenerFS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(e));
e.destroy();
this.iniiting = !1;
this.hasInited = !0;
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerFS": "EventListenerFS",
"../codebase/utils/CocosHelperFS": "CocosHelperFS"
} ],
CheckScribblePercentGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1945Q1G01Hu6R+085s9Dc9", "CheckScribblePercentGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperGL"), i = e("../codebase/EventListenerGL"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(e));
e.destroy();
this.iniiting = !1;
this.hasInited = !0;
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerGL": "EventListenerGL",
"../codebase/utils/CocosHelperGL": "CocosHelperGL"
} ],
CheckScribblePercentGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "19bbdu7ocBLYbssFupRBmUw", "CheckScribblePercentGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperGS"), i = e("../codebase/EventListenerGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
var t = this;
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
n.CocosHelper.captureNode(e).then(function(o) {
t._pixcelBegin = t.calcute(o);
e.destroy();
t.iniiting = !1;
t.hasInited = !0;
});
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerGS": "EventListenerGS",
"../codebase/utils/CocosHelperGS": "CocosHelperGS"
} ],
CheckScribblePercentHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1163ZneP5LjbGAcgFNE1Qh", "CheckScribblePercentHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperHC"), i = e("../codebase/EventListenerHC"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
var t = this;
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
n.CocosHelper.captureNode(e).then(function(o) {
t._pixcelBegin = t.calcute(o);
e.destroy();
t.iniiting = !1;
t.hasInited = !0;
});
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
var t = this;
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) this.hasInited && n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelEnd = t.calcute(e);
var n = 1 - t._pixcelEnd / t._pixcelBegin;
t.enabled && i.default.emitEvents(o.CheckPercentEvent, t.checkEvents, n, t);
}); else {
this.iniiting = !0;
n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelBegin = t.calcute(e);
t.iniiting = !1;
t.hasInited = !0;
});
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerHC": "EventListenerHC",
"../codebase/utils/CocosHelperHC": "CocosHelperHC"
} ],
CheckScribblePercentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e7fafko2y5O6K2lIbgLiRr0", "CheckScribblePercentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperMS"), i = e("../codebase/EventListenerMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
console.log("########");
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(e));
console.log("initBeginPixcel" + this._pixcelBegin);
e.destroy();
cc.log("_pixcelBegin" + this._pixcelBegin);
this.iniiting = !1;
this.hasInited = !0;
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
cc.log("_pixcelBegin" + this._pixcelBegin);
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerMS": "EventListenerMS",
"../codebase/utils/CocosHelperMS": "CocosHelperMS"
} ],
CheckScribblePercentRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7745Q1G01Hu6R+085s9Dc9", "CheckScribblePercentRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperRP"), i = e("../codebase/EventListenerRP"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(e));
e.destroy();
this.iniiting = !1;
this.hasInited = !0;
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerRP": "EventListenerRP",
"../codebase/utils/CocosHelperRP": "CocosHelperRP"
} ],
CheckScribblePercentRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1263ZneP5LjbGAcgFNE1Qh", "CheckScribblePercentRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperRS"), i = e("../codebase/EventListenerRS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
var t = this;
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
n.CocosHelper.captureNode(e).then(function(o) {
t._pixcelBegin = t.calcute(o);
e.destroy();
t.iniiting = !1;
t.hasInited = !0;
});
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
var t = this;
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) this.hasInited && n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelEnd = t.calcute(e);
var n = 1 - t._pixcelEnd / t._pixcelBegin;
t.enabled && i.default.emitEvents(o.CheckPercentEvent, t.checkEvents, n, t);
}); else {
this.iniiting = !0;
n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelBegin = t.calcute(e);
t.iniiting = !1;
t.hasInited = !0;
});
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerRS": "EventListenerRS",
"../codebase/utils/CocosHelperRS": "CocosHelperRS"
} ],
CheckScribblePercentSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1363ZneP5LjbGAcgFNE1Qh", "CheckScribblePercentSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelperSD"), i = e("../codebase/EventListenerSD"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
var t = this;
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
n.CocosHelper.captureNode(e).then(function(o) {
t._pixcelBegin = t.calcute(o);
e.destroy();
t.iniiting = !1;
t.hasInited = !0;
});
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
var t = this;
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) this.hasInited && n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelEnd = t.calcute(e);
var n = 1 - t._pixcelEnd / t._pixcelBegin;
t.enabled && i.default.emitEvents(o.CheckPercentEvent, t.checkEvents, n, t);
}); else {
this.iniiting = !0;
n.CocosHelper.captureNode(this.node).then(function(e) {
t._pixcelBegin = t.calcute(e);
t.iniiting = !1;
t.hasInited = !0;
});
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListenerSD": "EventListenerSD",
"../codebase/utils/CocosHelperSD": "CocosHelperSD"
} ],
CheckScribblePercent: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "91745Q1G01Hu6R+085s9Dc9", "CheckScribblePercent");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/CocosHelper"), i = e("../codebase/EventListener"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checkPercent = 1;
t.checkEvents = [];
t._pixcelBegin = 0;
t._pixcelEnd = 0;
t.hasInited = !1;
t.iniiting = !1;
return t;
}
o = t;
t.prototype.initBeginPixcel = function(e) {
if (!this.iniiting && !this.hasInited) {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(e));
e.destroy();
this.iniiting = !1;
this.hasInited = !0;
}
};
t.prototype.onEnable = function() {
this.schedule(this.checkSchedle, this.checkPercent);
};
t.prototype.onDisable = function() {
this.unschedule(this.checkSchedle);
};
t.prototype.calcute = function(e) {
for (var t = e.readPixels(), o = 1, n = 0; n < e.height; ++n) for (var i = 0; i < e.width; ++i) {
var c = n * e.width + i, a = t[4 * c], s = t[4 * c + 1], r = t[4 * c + 2];
t[4 * c + 3] > 10 && (a > 0 || s > 0 || r > 0) && ++o;
}
return o;
};
t.prototype.checkSchedle = function(e) {
if (this.enabled && null != this.node) if (this.hasInited || this.iniiting) {
if (this.hasInited) {
this._pixcelEnd = this.calcute(n.CocosHelper.captureNode2(this.node));
var t = 1 - this._pixcelEnd / this._pixcelBegin;
this.enabled && i.default.emitEvents(o.CheckPercentEvent, this.checkEvents, t, this);
}
} else {
this.iniiting = !0;
this._pixcelBegin = this.calcute(n.CocosHelper.captureNode2(this.node));
this.iniiting = !1;
this.hasInited = !0;
}
};
var o;
t.CheckPercentEvent = "CheckPercentEvent";
__decorate([ s ], t.prototype, "checkPercent", void 0);
__decorate([ s([ i.default ]) ], t.prototype, "checkEvents", void 0);
return t = o = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../codebase/EventListener": "EventListener",
"../codebase/utils/CocosHelper": "CocosHelper"
} ],
ChooseControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e180cTH5BBHF6Y3yHnRNcjB", "ChooseControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DataConfigCB"), i = e("../common/Script/codebase/TransitionSceneCB"), c = e("../common/Script/codebase/utils/CocosHelperCB"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.positions = null;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {};
t.prototype.foamClick = function(e, t) {
n.default.getInstance().setFoam(e.target.name);
n.default.getInstance().setIndex(t);
for (var o = [ "foam3", "foam9" ], a = 0; a < o.length; a++) {
var s = o[a];
if (s != e.target.name) {
c.CocosHelper.findNode(cc.Canvas.instance.node, s).runAction(cc.fadeOut(.5));
}
}
e.target.runAction(cc.sequence(cc.spawn(cc.scaleTo(1, 1.1), cc.moveTo(1, cc.v2(0, 0))), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
i.default.changeScene("stickBeadCB");
}.bind(this))));
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"./DataConfigCB": "DataConfigCB"
} ],
ChooseControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1121Vxi7lFI6V4acekKErj", "ChooseControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInHC"), i = e("./PopupComponetHC"), c = e("../common/Script/codebase/utils/CocosHelperHC"), a = e("../common/Script/codebase/TransitionSceneHC"), s = e("../common/Script/showLaodingHC"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
this.showChoose();
this.changPosition();
var e = cc.instantiate(cc.find("cupCopy").children[0]);
e.parent = cc.find("cupChoose/choose1", this.node);
e.setPosition(cc.v2(0));
var t = Math.floor(4 * Math.random()) + 1;
cc.loader.loadRes("chocolateslime/image/cup" + t, cc.SpriteFrame, function(e, t) {
cc.find("cupChoose/choose2/cup", this.node).getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
var o = Math.floor(4 * Math.random()) + 1;
cc.loader.loadRes("chocolateslime/image/cup" + o, cc.SpriteFrame, function(e, t) {
cc.find("slimeChoose/choose2/cup", this.node).getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
var i = Math.floor(4 * Math.random()) + 1;
cc.loader.loadRes("chocolateslime/image/cup" + i, cc.SpriteFrame, function(e, t) {
cc.find("slimeChoose/choose1/cup", this.node).getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
this.node.getChildByName("tipBg").getComponent(n.default).actionCallBack = function() {
this.activateButtons();
this.node.getChildByName("tipBg").runAction(cc.sequence(cc.scaleTo(.3, 1), cc.scaleTo(.2, .9)));
}.bind(this);
};
t.prototype.activateButtons = function() {
cc.find("cupChoose/choose1/touch_ui", this.node).getComponent(cc.Button).interactable = !0;
cc.find("cupChoose/choose2/touch_ui", this.node).getComponent(cc.Button).interactable = !0;
cc.find("slimeChoose/choose1/touch_ui", this.node).getComponent(cc.Button).interactable = !0;
cc.find("slimeChoose/choose2/touch_ui", this.node).getComponent(cc.Button).interactable = !0;
};
t.prototype.sleepButtons = function() {
cc.find("cupChoose/choose1/touch_ui", this.node).getComponent(cc.Button).interactable = !1;
cc.find("cupChoose/choose2/touch_ui", this.node).getComponent(cc.Button).interactable = !1;
cc.find("slimeChoose/choose1/touch_ui", this.node).getComponent(cc.Button).interactable = !1;
cc.find("slimeChoose/choose2/touch_ui", this.node).getComponent(cc.Button).interactable = !1;
};
t.prototype.showChoose = function() {
this.node.getChildByName("tipBg").getComponent(n.default).doShowAction();
if (0 == (Math.random() > .5 ? 1 : 0)) {
this.node.getChildByName("cupChoose").active = !0;
this.node.getChildByName("slimeChoose").active = !1;
cc.find("tipBg/word1", this.node).active = !1;
cc.find("tipBg/word2", this.node).active = !0;
} else {
this.node.getChildByName("cupChoose").active = !1;
this.node.getChildByName("slimeChoose").active = !0;
cc.find("tipBg/word1", this.node).active = !0;
cc.find("tipBg/word2", this.node).active = !1;
}
};
t.prototype.changPosition = function() {
if (0 == (Math.random() > .5 ? 1 : 0)) {
cc.find("cupChoose/choose1", this.node).setPosition(cc.v2(170));
cc.find("cupChoose/choose2", this.node).setPosition(cc.v2(-170));
cc.find("slimeChoose/choose1", this.node).setPosition(cc.v2(170));
cc.find("slimeChoose/choose2", this.node).setPosition(cc.v2(-170));
} else {
cc.find("cupChoose/choose2", this.node).setPosition(cc.v2(170));
cc.find("cupChoose/choose1", this.node).setPosition(cc.v2(-170));
cc.find("slimeChoose/choose2", this.node).setPosition(cc.v2(170));
cc.find("slimeChoose/choose1", this.node).setPosition(cc.v2(-170));
}
};
t.prototype.cupChooseButton = function(e, t) {
this.hideTip();
this.sleepButtons();
if ("1" == t) {
this.node.getComponent(cc.AudioSource).play();
cc.find("cupChoose/choose1/touch_ui", this.node).active = !1;
cc.find("cupChoose/choose2", this.node).active = !1;
cc.find("cupChoose/choose1", this.node).runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, -50)), cc.scaleTo(.5, .7)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var e = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.sequence(cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}.bind(this))));
} else {
this.node.getChildByName("bg").getComponent(cc.AudioSource).play();
cc.find("cupChoose/choose1/cup", this.node).runAction(cc.repeat(cc.sequence(cc.moveBy(.2, cc.v2(0, 10)), cc.moveBy(.2, cc.v2(0, -10))), 2));
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("curtain").getComponent(cc.Animation).play("closeCurtain");
}.bind(this))));
}
};
t.prototype.slimeChooseButton = function(e, t) {
this.hideTip();
if ("1" == t) {
this.node.getComponent(cc.AudioSource).play();
cc.find("slimeChoose/choose1/touch_ui", this.node).active = !1;
cc.find("slimeChoose/choose2", this.node).active = !1;
cc.find("slimeChoose/choose1", this.node).runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, -50)), cc.scaleTo(.5, .7)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var e = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.sequence(cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}.bind(this))));
} else {
this.node.getChildByName("bg").getComponent(cc.AudioSource).play();
cc.find("slimeChoose/choose1/cup", this.node).runAction(cc.repeat(cc.sequence(cc.moveBy(.2, cc.v2(0, 10)), cc.moveBy(.2, cc.v2(0, -10))), 2));
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("curtain").getComponent(cc.Animation).play("closeCurtain");
}.bind(this))));
}
};
t.prototype.hideTip = function() {
this.node.getChildByName("tipBg").stopAllActions();
var e = this.node.getChildByName("tipBg").getPosition();
this.node.getChildByName("tipBg").runAction(cc.sequence(cc.moveBy(.5, cc.v2(600, 0)), cc.callFunc(function() {
this.node.getChildByName("tipBg").setScale(.9);
this.node.getChildByName("tipBg").opacity = 0;
this.node.getChildByName("tipBg").setPosition(e);
}.bind(this))));
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height;
c < i.width && e.photoNode.setScale(c / i.width);
a < i.height && e.photoNode.setScale(a / i.height);
n.addChild(e.photoNode);
var s = t.readPixels(), r = t.width, l = t.height, d = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + d + ".png";
jsb.saveImageData(s, r, l, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(i.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(i.default).hidePopup();
}.bind(this))));
e ? t.getComponent(i.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(i.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.touchNextBtn = function() {
s.default.getInstance().showAds(!0);
s.default.getInstance().loadingDoneCallback = function() {
a.default.changeScene("playSlimeHC");
};
};
t.prototype.touchBackBtn = function() {
a.default.changeScene("decorateCupHC");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/MoveInHC": "MoveInHC",
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC",
"../common/Script/codebase/utils/CocosHelperHC": "CocosHelperHC",
"../common/Script/showLaodingHC": "showLaodingHC",
"./PopupComponetHC": "PopupComponetHC"
} ],
ChooseControllerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13e7QlTp9KKbpa+xcXE6az", "ChooseControllerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInSD"), i = e("./DataConfigSD"), c = e("../common/Script/codebase/TransitionSceneSD"), a = e("../common/Script/showLaodingSD"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = i.default.getInstance().getCount();
cc.log(e);
if (1 == e) {
cc.find("Canvas/gift/single").active = !0;
cc.find("Canvas/gift/rainbow").active = !1;
cc.find("Canvas/single/green").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/single/green").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/single/pink").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/single/purple").getComponent(cc.Button).interactable = !0;
}.bind(this);
} else if (2 == e) {
cc.find("Canvas/gift/single").active = !1;
cc.find("Canvas/gift/rainbow").active = !0;
cc.find("Canvas/rainbow/green").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/tip1").getComponent(n.default).doShowAction();
this.node.runAction(cc.sequence(cc.delayTime(4), cc.callFunc(function() {
i.default.getInstance().setColor("rainbow");
i.default.getInstance().setIsStart(!1);
a.default.getInstance().loadingDoneCallback = function() {
a.default.getInstance().loadingDoneCallback = null;
c.default.changeScene("makeWaterSD");
};
a.default.getInstance().showAds(!1);
}.bind(this))));
}.bind(this);
}
this.node.getChildByName("gift").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/light").active = !0;
cc.find("Canvas/gift").getComponent(cc.AudioSource).play();
cc.find("Canvas/tip2").getComponent(n.default).doShowAction();
this.node.getChildByName("gift").runAction(cc.sequence(cc.moveBy(.1, cc.v2(0, 50)), cc.moveBy(.2, cc.v2(0, -50)), cc.moveBy(.1, cc.v2(0, 40)), cc.moveBy(.2, cc.v2(0, -40)), cc.moveBy(.1, cc.v2(0, 30)), cc.moveBy(.2, cc.v2(0, -30)), cc.moveBy(.1, cc.v2(0, 10)), cc.moveBy(.2, cc.v2(0, -10)), cc.callFunc(function() {
cc.find("Canvas/tipClick").active = !0;
this.node.getChildByName("gift").getComponent(cc.Button).interactable = !0;
}.bind(this))));
}.bind(this);
};
t.prototype.giftClick = function() {
cc.find("Canvas/tipClick").active = !1;
cc.find("Canvas/tip2").active = !1;
var e = i.default.getInstance().getCount();
1 == e ? this.node.getChildByName("gift").runAction(cc.sequence(cc.callFunc(function() {
cc.find("Canvas/gift/gift0").getComponent(cc.Animation).play("openGift");
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/gift").getComponent(cc.AudioSource).play();
cc.find("Canvas/gift/gift0").active = !1;
cc.find("Canvas/gift/gift0_").active = !1;
cc.find("Canvas/gift/single").zIndex = 1;
cc.find("Canvas/gift/single").runAction(cc.sequence(cc.sequence(cc.moveBy(.5, cc.v2(0, 150)), cc.spawn(cc.scaleTo(.5, 1), cc.moveTo(.5, cc.v2(0, 50)))), cc.delayTime(2), cc.scaleTo(1, 0), cc.callFunc(function() {
cc.find("Canvas/light").active = !1;
cc.find("Canvas/gift").active = !1;
cc.find("Canvas/bgMask").runAction(cc.sequence(cc.fadeTo(1, 0), cc.callFunc(function() {
cc.find("Canvas/single").active = !0;
}.bind(this))));
}.bind(this))));
}.bind(this)))) : 2 == e && this.node.getChildByName("gift").runAction(cc.sequence(cc.callFunc(function() {
cc.find("Canvas/gift/gift0").getComponent(cc.Animation).play("openGift");
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/gift").getComponent(cc.AudioSource).play();
cc.find("Canvas/gift/gift0").active = !1;
cc.find("Canvas/gift/gift0_").active = !1;
cc.find("Canvas/gift/rainbow").zIndex = 1;
cc.find("Canvas/gift/rainbow").runAction(cc.sequence(cc.sequence(cc.moveBy(.5, cc.v2(0, 150)), cc.spawn(cc.scaleTo(.5, 1), cc.moveTo(.5, cc.v2(0, 50)))), cc.delayTime(2), cc.scaleTo(1, 0), cc.callFunc(function() {
cc.find("Canvas/light").active = !1;
cc.find("Canvas/gift").active = !1;
cc.find("Canvas/bgMask").runAction(cc.sequence(cc.fadeTo(1, 0), cc.callFunc(function() {
cc.find("Canvas/rainbow").active = !0;
}.bind(this))));
}.bind(this))));
}.bind(this))));
};
t.prototype.colorChoose = function(e) {
this.node.getChildByName("tipClick").active = !1;
var t = e.target.name;
e.target.parent.getComponent(cc.AudioSource).play();
i.default.getInstance().setColor(t);
i.default.getInstance().setIsStart(!1);
a.default.getInstance().loadingDoneCallback = function() {
c.default.changeScene("makeWaterSD");
};
a.default.getInstance().showAds(!1);
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInSD": "MoveInSD",
"../common/Script/codebase/TransitionSceneSD": "TransitionSceneSD",
"../common/Script/showLaodingSD": "showLaodingSD",
"./DataConfigSD": "DataConfigSD"
} ],
ChooseScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c3d32BkQFxJdLZndWpDKGm4", "ChooseScene");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./GameData"), i = e("../common/uitls/CocosHelper_my"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveAudio = null;
t.playMusicAudio = null;
return t;
}
t.prototype.start = function() {
cc.audioEngine.stopMusic();
cc.audioEngine.playMusic(this.playMusicAudio, !0);
i.CocosHelper.findNode(cc.Canvas.instance.node, "arrow_r").runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(10, 0)), cc.moveBy(.5, cc.v2(-10, 0)))));
var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "arrow_l");
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(10, 0)), cc.moveBy(.5, cc.v2(-10, 0)))));
e.active = !1;
this.showItem();
jsToCPP.getInstance().showBanner();
};
t.prototype.showItem = function() {
for (var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "pageview").getChildByName("view").getChildByName("content"), t = function(t) {
var o = t < 5 ? "page_1" : "page_2", i = e.getChildByName(o).getChildByName("game" + (t <= 4 ? t : t - 4)), c = n.default.getInstance().getGameNameFormIndex(t);
console.log(i.name + "showItem");
cc.loader.loadRes(c, cc.Prefab, function(e, t) {
if (e) console.log(e + "gameNameerror"); else {
var o = cc.instantiate(t);
o.parent = i;
o.position = cc.v2(0, 0);
var a = n.default.getInstance().getIsNewFromName(c);
cc.log(a + "isNewisNewisNew");
a && cc.loader.loadRes("talk", cc.Prefab, function(e, t) {
cc.log(e + "errorerrorerrorerror");
var n = cc.instantiate(t);
n.parent = o;
n.position = cc.v2(174, 3);
n.runAction(cc.repeatForever(cc.sequence(cc.rotateTo(1, -40), cc.rotateTo(1, 0))));
});
}
});
}, o = 1; o < 9; o++) t(o);
};
t.prototype.touchArrow = function(e, t) {
console.log(t);
cc.audioEngine.playEffect(this.moveAudio, !1);
i.CocosHelper.findNode(cc.Canvas.instance.node, "pageview").getComponent(cc.PageView).scrollToPage("right" == t ? 1 : 0, .5);
};
t.prototype.pageView = function(e) {
var t = e.node.getComponent(cc.PageView).getCurrentPageIndex(), o = i.CocosHelper.findNode(cc.Canvas.instance.node, "arrow_r"), n = i.CocosHelper.findNode(cc.Canvas.instance.node, "arrow_l");
if (0 == t) {
o.active = !0;
n.active = !1;
} else {
o.active = !1;
n.active = !0;
}
cc.audioEngine.playEffect(this.moveAudio, !1);
};
t.prototype.touchUrl = function() {
cc.sys.platform == cc.sys.ANDROID ? jsToCPP.getInstance().openUrl("https://www.kidskitchenfunmedia.com/privacys/") : jsToCPP.getInstance().openUrl("https://www.crazykidsgamesmedia.com/privacys/");
};
__decorate([ s(cc.AudioClip) ], t.prototype, "moveAudio", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "playMusicAudio", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"./GameData": "GameData"
} ],
ClickControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "76b245r0/RGlb2aE5I/bq/l", "ClickControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCB"), i = e("../common/Script/codebase/TransitionSceneCB"), c = e("../common/Script/codebase/utils/CocosHelperCB"), a = e("./DataConfigCB"), s = e("../common/Script/showLaodingCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
var e = a.default.getInstance().getColors(), t = a.default.getInstance().getFoam();
e || (e = "blue");
t || (t = "foam9");
cc.loader.loadRes("cakebatter/image/shadow/slime_" + e, cc.SpriteFrame, function(t, o) {
if (t) cc.log(t); else {
cc.find("Canvas/pull/pull").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoReleaseRecursively(o, !0);
cc.loader.loadRes("cakebatter/image/shadow/motion3_" + e + "_", cc.SpriteFrame, function(e, t) {
if (e) cc.log(e); else {
cc.find("Canvas/pull/hand_shadow").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}
}.bind(this));
}
}.bind(this));
cc.loader.loadRes("cakebatter/image/foam1/" + t, cc.SpriteFrame, function(e, t) {
if (e) cc.log(e); else {
cc.find("pull/foam", this.node).getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}
}.bind(this));
this.node.getChildByName("pull").getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
if (5 == this.touchNum) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var t = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
t.active = !0;
t.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.node.getChildByName("tipClick").active = !1;
var o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.getChildByName("pull").convertToNodeSpaceAR(o[0].getStartLocation()), a = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(i, a.points)) {
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, n), cc.callFunc(function() {
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.parent = this.node.getChildByName("pull");
t.setPosition(i);
cc.find("heartParticle", this.node).setPosition(n);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var o = cc.instantiate(t);
o.parent = this.node.getChildByName("pull");
o.setPosition(cc.v2(i.x - 50, i.y + 10));
var c = new cc.Vec2();
c = o.getPosition();
cc.Intersection.pointInPolygon(c, a.points) ? o.active = !0 : o.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(i.x - 80, i.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, a.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.touchNextBtn = function() {
s.default.getInstance().loadingDoneCallback = function() {
i.default.changeScene("playSlimeCB");
};
s.default.getInstance().showAds(!1);
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("pullSlimeCB");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/MoveInCB": "MoveInCB",
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"../common/Script/showLaodingCB": "showLaodingCB",
"./DataConfigCB": "DataConfigCB"
} ],
ClickControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22245r0/RGlb2aE5I/bq/l", "ClickControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCS"), i = e("../common/Script/codebase/TransitionSceneCS"), c = e("../common/Script/codebase/utils/CocosHelperCS"), a = e("./PopupComponetCS"), s = e("./TipManagerCS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("pull").getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
if (7 == this.touchNum) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var t = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
t.active = !0;
t.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
this.showEgainBtn();
}
this.node.getChildByName("tipClick").active = !1;
var o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.getChildByName("pull").convertToNodeSpaceAR(o[0].getStartLocation()), a = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(i, a.points)) {
this.node.getChildByName("pull").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.touchNum % 3 == 0 && s.default.getInstance().jumpTips();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, n), cc.callFunc(function() {
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.parent = this.node.getChildByName("pull");
t.setPosition(i);
cc.find("heartParticle", this.node).setPosition(n);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var o = cc.instantiate(t);
o.parent = this.node.getChildByName("pull");
o.setPosition(cc.v2(i.x - 50, i.y + 10));
var c = new cc.Vec2();
c = o.getPosition();
cc.Intersection.pointInPolygon(c, a.points) ? o.active = !0 : o.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(i.x - 80, i.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, a.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.touchNextBtn = function() {
cc.audioEngine.stopMusic();
cc.INGAME = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "SlimeMakeNew/chiristmas_slime";
console.log(cc.INGAME);
window.require(cc.INGAME + "/src/dating.js");
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("playSlimeCS");
};
t.prototype.showEgainBtn = function() {
this.node.getChildByName("playagain_btn").active = !0;
this.node.getChildByName("playagain_btn").setPosition(cc.v2(0, 600));
this.node.getChildByName("playagain_btn").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 200)), cc.moveTo(.1, cc.v2(0, 230)), cc.moveTo(.1, cc.v2(0, 200)), cc.callFunc(function() {
this.node.getChildByName("playagain_btn").getComponent(cc.Button).interactable = !0;
}.bind(this))));
};
t.prototype.playAgain = function() {
i.default.changeScene("rubSlimeCS");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/MoveInCS": "MoveInCS",
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"./PopupComponetCS": "PopupComponetCS",
"./TipManagerCS": "TipManagerCS"
} ],
ClickControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21245r0/RGlb2aE5I/bq/l", "ClickControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneFS"), i = e("../common/Script/codebase/utils/CocosHelperFS"), c = e("./PopupComponetFS"), a = e("./TipManagerFS"), s = e("../common/Script/compoent/MoveInFS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("pull").getComponent(s.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
if (7 == this.touchNum) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var t = cc.find("Canvas/button/next");
t.active = !0;
t.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.node.getChildByName("tipClick").active = !1;
var o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.getChildByName("pull").convertToNodeSpaceAR(o[0].getStartLocation()), c = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(i, c.points)) {
this.node.getChildByName("pull").runAction(cc.sequence(cc.scaleTo(.1, 1.25, 1.15), cc.scaleTo(.1, 1.15, 1.25), cc.scaleTo(.1, 1.22, 1.18), cc.scaleTo(.1, 1.18, 1.22), cc.scaleTo(.1, 1.2, 1.2)));
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.touchNum % 3 == 0 && a.default.getInstance().jumpTips();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, n), cc.callFunc(function() {
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.parent = this.node.getChildByName("pull");
t.setPosition(i);
cc.find("heartParticle", this.node).setPosition(n);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var o = cc.instantiate(t);
o.parent = this.node.getChildByName("pull");
o.setPosition(cc.v2(i.x - 50, i.y + 10));
var a = new cc.Vec2();
a = o.getPosition();
cc.Intersection.pointInPolygon(a, c.points) ? o.active = !0 : o.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(i.x - 80, i.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, c.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
i.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(c.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(c.default).hidePopup();
}.bind(this))));
e ? t.getComponent(c.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(c.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.touchNextBtn = function() {
cc.audioEngine.stopMusic();
cc.INGAME = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "SlimeMakeNew/chiristmas_slime";
console.log(cc.INGAME);
window.require(cc.INGAME + "/src/dating.js");
};
t.prototype.touchBackBtn = function() {
n.default.changeScene("playSlimeFS");
};
t.prototype.showEgainBtn = function() {
this.node.getChildByName("playagain_btn").active = !0;
this.node.getChildByName("playagain_btn").setPosition(cc.v2(0, 600));
this.node.getChildByName("playagain_btn").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 200)), cc.moveTo(.1, cc.v2(0, 230)), cc.moveTo(.1, cc.v2(0, 200)), cc.callFunc(function() {
this.node.getChildByName("playagain_btn").getComponent(cc.Button).interactable = !0;
}.bind(this))));
};
t.prototype.playAgain = function() {
n.default.changeScene("rubSlime");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"../common/Script/compoent/MoveInFS": "MoveInFS",
"./PopupComponetFS": "PopupComponetFS",
"./TipManagerFS": "TipManagerFS"
} ],
ClickControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1933fyyiBEMJEmcawIkoK7", "ClickControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneGL"), i = e("../common/Script/codebase/utils/CocosHelperGL"), c = e("./TipManagerGL"), a = e("../common/Script/compoent/MoveInGL"), s = e("./DataConfigGL"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("btns").children.forEach(function(e) {
"click" == e.name ? e.getChildByName("yes").active = !0 : e.getChildByName("yes").active = !1;
});
this.node.getChildByName("pull").getComponent(a.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
s.default.getInstance().setClick(!1);
if (!(s.default.getInstance().getDrag() || s.default.getInstance().getClick() || s.default.getInstance().getPlay() || s.default.getInstance().getSlap())) {
i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
}
};
t.prototype.onTouchStart = function(e) {
this.node.getChildByName("tipClick").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.getChildByName("pull").convertToNodeSpaceAR(t[0].getStartLocation()), i = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(n, i.points)) {
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.touchNum % 3 == 0 && c.default.getInstance().jumpTips();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, o), cc.callFunc(function() {
this.node.getChildByName("pull").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.name = "shadow";
t.parent = this.node.getChildByName("pull");
t.setPosition(n);
cc.find("heartParticle", this.node).setPosition(o);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var c = cc.instantiate(t);
c.name = "shadow";
c.parent = this.node.getChildByName("pull");
c.setPosition(cc.v2(n.x - 50, n.y + 10));
var a = new cc.Vec2();
a = c.getPosition();
cc.Intersection.pointInPolygon(a, i.points) ? c.active = !0 : c.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.name = "shadow";
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(n.x - 80, n.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, i.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.enterNextScence = function() {
s.default.getInstance().setClick(!0);
s.default.getInstance().setDrag(!0);
s.default.getInstance().setSlap(!0);
s.default.getInstance().setPlay(!0);
n.default.changeScene("packSlimeGL");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./DataConfigGL": "DataConfigGL",
"./TipManagerGL": "TipManagerGL"
} ],
ClickControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11245r0/RGlb2aE5I/bq/l", "ClickControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInHC"), i = e("../common/Script/codebase/TransitionSceneHC"), c = e("../common/Script/codebase/utils/CocosHelperHC"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("pull").getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
if (4 == this.touchNum) {
var t = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
t.active = !0;
t.runAction(cc.sequence(cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}
this.node.getChildByName("tipClick").active = !1;
var o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.getChildByName("pull").convertToNodeSpaceAR(o[0].getStartLocation()), a = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(i, a.points)) {
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, n), cc.callFunc(function() {
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.parent = this.node.getChildByName("pull");
t.setPosition(i);
cc.find("heartParticle", this.node).setPosition(n);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var o = cc.instantiate(t);
o.parent = this.node.getChildByName("pull");
o.setPosition(cc.v2(i.x - 50, i.y + 10));
var c = new cc.Vec2();
c = o.getPosition();
cc.Intersection.pointInPolygon(c, a.points) ? o.active = !0 : o.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(i.x - 80, i.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, a.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.touchNextBtn = function() {
i.default.changeScene("decorateCupHC");
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("makeHC");
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/MoveInHC": "MoveInHC",
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC",
"../common/Script/codebase/utils/CocosHelperHC": "CocosHelperHC"
} ],
ClickControllerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "72933fyyiBEMJEmcawIkoK7", "ClickControllerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/compoent/MoveInMS"), i = e("./TipManagerMS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.init = function() {
this.destroyTouchEvent();
this.touchNum = 0;
this.node.getChildByName("pull").stopAllActions();
this.node.getChildByName("pull").setScale(1);
this.node.getChildByName("pull").setPosition(cc.v2(0, 0));
this.node.getChildByName("pull").opacity = 0;
this.node.getChildByName("tipClick").active = !1;
this.node.getChildByName("pull").children.forEach(function(e) {
"shadow" == e.name && e.destroy();
});
this.node.getChildByName("pull").getComponent(n.default).doShowAction();
this.node.getChildByName("pull").getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
this.touchNum;
this.node.getChildByName("tipClick").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.getChildByName("pull").convertToNodeSpaceAR(t[0].getStartLocation()), c = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(n, c.points)) {
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.touchNum % 3 == 0 && i.default.getInstance().jumpTips();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, o), cc.callFunc(function() {
this.node.getChildByName("pull").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.name = "shadow";
t.parent = this.node.getChildByName("pull");
t.setPosition(n);
cc.find("heartParticle", this.node).setPosition(o);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var i = cc.instantiate(t);
i.name = "shadow";
i.parent = this.node.getChildByName("pull");
i.setPosition(cc.v2(n.x - 50, n.y + 10));
var a = new cc.Vec2();
a = i.getPosition();
cc.Intersection.pointInPolygon(a, c.points) ? i.active = !0 : i.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.name = "shadow";
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(n.x - 80, n.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, c.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./TipManagerMS": "TipManagerMS"
} ],
ClickControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12245r0/RGlb2aE5I/bq/l", "ClickControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInRS"), i = e("../common/Script/codebase/TransitionSceneRS"), c = e("../common/Script/codebase/utils/CocosHelperRS"), a = e("./PopupComponetRS"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("pull").getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
if (5 == this.touchNum) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var t = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
t.active = !0;
t.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.node.getChildByName("tipClick").active = !1;
var o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.getChildByName("pull").convertToNodeSpaceAR(o[0].getStartLocation()), a = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(i, a.points)) {
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, n), cc.callFunc(function() {
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.parent = this.node.getChildByName("pull");
t.setPosition(i);
cc.find("heartParticle", this.node).setPosition(n);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var o = cc.instantiate(t);
o.parent = this.node.getChildByName("pull");
o.setPosition(cc.v2(i.x - 50, i.y + 10));
var c = new cc.Vec2();
c = o.getPosition();
cc.Intersection.pointInPolygon(c, a.points) ? o.active = !0 : o.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(i.x - 80, i.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, a.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height;
a < i.height && e.photoNode.setScale(a / i.height);
c < i.width && e.photoNode.setScale(c / i.width);
n.addChild(e.photoNode);
cc.log(e.photoNode);
var s = t.readPixels(), r = t.width, l = t.height, d = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + d + ".png";
jsb.saveImageData(s, r, l, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.touchNextBtn = function() {
i.default.changeScene("makeWaterRS");
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("pullSlimeRS");
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInRS": "MoveInRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"../common/Script/codebase/utils/CocosHelperRS": "CocosHelperRS",
"./PopupComponetRS": "PopupComponetRS"
} ],
ClickControllerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13245r0/RGlb2aE5I/bq/l", "ClickControllerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInSD"), i = e("../common/Script/codebase/TransitionSceneSD"), c = e("../common/Script/codebase/utils/CocosHelperSD"), a = e("./PopupComponetSD"), s = e("./DataConfigSD"), r = e("./TipManagerSD"), l = cc._decorator, d = l.ccclass, u = (l.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
var e = s.default.getInstance().getColor();
cc.loader.loadRes("slimedark/image/slime/" + e + "_", cc.SpriteFrame, function(t, o) {
cc.find("Canvas/pull/pull").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoReleaseRecursively(o, !0);
cc.loader.loadRes("slimedark/image/slime/" + e, cc.SpriteFrame, function(t, o) {
cc.find("Canvas/pull/hand_shadow").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoReleaseRecursively(o, !0);
cc.loader.loadRes("slimedark/image/slime/" + e + "_0", cc.SpriteFrame, function(t, o) {
cc.loader.loadRes("slimedark/image/slime/hand_" + e, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/hand/hand_shadow").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.find("Canvas/pull/shadow").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoReleaseRecursively(o, !0);
this.node.getChildByName("pull").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/bgMask").runAction(cc.sequence(cc.fadeTo(2, 255), cc.callFunc(function() {
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this))));
}.bind(this);
}.bind(this));
}.bind(this));
}.bind(this));
};
t.prototype.onTouchStart = function(e) {
if (5 == this.touchNum) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var t = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
t.active = !0;
t.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.touchNum % 3 == 0 && r.default.getInstance().jumpTips();
this.node.getChildByName("tipClick").active = !1;
var o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.getChildByName("pull").convertToNodeSpaceAR(o[0].getStartLocation()), a = this.node.getChildByName("pull").getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(i, a.points)) {
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, n), cc.callFunc(function() {
this.node.getChildByName("pull").getComponent(cc.AudioSource).play();
var e = 3 * Math.random(), t = cc.instantiate(cc.find("pull/hand_shadow", this.node));
t.active = !0;
t.parent = this.node.getChildByName("pull");
t.setPosition(i);
cc.find("heartParticle", this.node).setPosition(n);
cc.find("heartParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
if (e > 1) {
var o = cc.instantiate(t);
o.parent = this.node.getChildByName("pull");
o.setPosition(cc.v2(i.x - 50, i.y + 10));
var c = new cc.Vec2();
c = o.getPosition();
cc.Intersection.pointInPolygon(c, a.points) ? o.active = !0 : o.active = !1;
if (e > 2) {
var s = cc.instantiate(t);
s.parent = this.node.getChildByName("pull");
s.setPosition(cc.v2(i.x - 80, i.y + 30));
var r = new cc.Vec2();
r = s.getPosition();
cc.Intersection.pointInPolygon(r, a.points) ? s.active = !0 : s.active = !1;
}
}
}.bind(this)), cc.moveTo(.5, cc.v2(-20, 200)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("pull").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("pull").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
if (!e) {
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
t.getComponent(a.default).setTip("There is no email account");
}
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.touchNextBtn = function() {
if ("rainbow" == s.default.getInstance().getColor()) {
s.default.getInstance().setCount(0);
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
} else {
s.default.getInstance().addCount();
i.default.changeScene("chooseColorSD");
}
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("kneadSlimeSD");
};
return t = __decorate([ d ], t);
}(cc.Component));
o.default = u;
cc._RF.pop();
}, {
"../common/Script/MoveInSD": "MoveInSD",
"../common/Script/codebase/TransitionSceneSD": "TransitionSceneSD",
"../common/Script/codebase/utils/CocosHelperSD": "CocosHelperSD",
"./DataConfigSD": "DataConfigSD",
"./PopupComponetSD": "PopupComponetSD",
"./TipManagerSD": "TipManagerSD"
} ],
ClickScaleCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2f236vfY65IY5fCmZmGik5R", "ClickScaleCB");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1430QaupxPy5KjIY5f+eCn", "ClickScaleCE");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2236vfY65IY5fCmZmGik5R", "ClickScaleCS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2130QaupxPy5KjIY5f+eCn", "ClickScaleFS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1930QaupxPy5KjIY5f+eCn", "ClickScaleGL");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a9fa9c0PvtCApCOCOiZPjsP", "ClickScaleGS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
var e = cc.scaleTo(.156, 1, .8);
this.node.runAction(e);
}, this);
var e = function() {
var e = cc.scaleTo(.132, .82, 1), t = cc.scaleTo(.12, 1, .86), o = cc.scaleTo(.108, .88, 1), n = cc.scaleTo(.096, 1, .89), i = cc.scaleTo(.084, 1), c = cc.sequence(e, t, o, n, i);
this.node.runAction(c);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1136vfY65IY5fCmZmGik5R", "ClickScaleHC");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bfd5e8fFoBCqYbnktbDwenq", "ClickScaleMS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = !1, t = !1;
this.node.on(cc.Node.EventType.TOUCH_START, function() {
if (!e) {
e = !0;
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var t = this.node.scale, o = cc.scaleTo(.156, 1 * t, .8 * t);
this.node.runAction(o);
}
}, this);
var o = function() {
if (!t) {
t = !0;
var o = this.node.scale, n = cc.scaleTo(.132, .82 * o, o), i = cc.scaleTo(.12, o, .86 * o), c = cc.scaleTo(.108, .88 * o, o), a = cc.scaleTo(.096, o, .89 * o), s = cc.scaleTo(.084, o), r = cc.callFunc(function() {
e = !1;
t = !1;
}, this), l = cc.sequence(n, i, c, a, s, r);
this.node.runAction(l);
}
};
this.node.on(cc.Node.EventType.TOUCH_END, o, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, o, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7730QaupxPy5KjIY5f+eCn", "ClickScaleRP");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1236vfY65IY5fCmZmGik5R", "ClickScaleRS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScaleSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1336vfY65IY5fCmZmGik5R", "ClickScaleSD");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScale_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c508fdYYRVPJrO5AB44iR9E", "ClickScale_my");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
var e = cc.scaleTo(.156, 1, .8);
this.node.runAction(e);
}, this);
var e = function() {
var e = cc.scaleTo(.132, .82, 1), t = cc.scaleTo(.12, 1, .86), o = cc.scaleTo(.108, .88, 1), n = cc.scaleTo(.096, 1, .89), i = cc.scaleTo(.084, 1), c = cc.sequence(e, t, o, n, i);
this.node.runAction(c);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
ClickScale: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d8830QaupxPy5KjIY5f+eCn", "ClickScale");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.on(cc.Node.EventType.TOUCH_START, function() {
this.node.getComponent(cc.AudioSource) && this.node.getComponent(cc.AudioSource).play();
var e = this.node.scale, t = cc.scaleTo(.156, 1 * e, .8 * e);
this.node.runAction(t);
}, this);
var e = function() {
var e = this.node.scale, t = cc.scaleTo(.132, .82 * e, e), o = cc.scaleTo(.12, e, .86 * e), n = cc.scaleTo(.108, .88 * e, e), i = cc.scaleTo(.096, e, .89 * e), c = cc.scaleTo(.084, e), a = cc.sequence(t, o, n, i, c);
this.node.runAction(a);
};
this.node.on(cc.Node.EventType.TOUCH_END, e, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
}
});
cc._RF.pop();
}, {} ],
CocosHelperCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "530ca4LLqBJAoBa2/zs4lmL", "CocosHelperCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.getSpinklePath = function(e) {
void 0 === e && (e = 0);
var t = [];
if (9 == e) for (var o = 0; o < 9; o++) t.push("PNG/make5/foam" + o + "_fall"); else t.push("PNG/make5/foam" + e + "_fall");
console.log(t);
return t;
};
e.caculate = function(e, t) {
return new Promise(function(t, o) {
var n = [], i = new cc.Node();
cc.Canvas.instance.node.addChild(i);
i.position = cc.v2(1e4, 1e4);
cc.loader.loadRes(e, cc.SpriteFrame, function(e, o) {
if (e) {
console.log(e + "");
return n;
}
var c = i.addComponent(cc.Sprite);
c.spriteFrame = o;
for (var a = c.node.width, s = c.node.height, r = cc.v2(.5 * -a, .5 * s), l = a / 6, d = s / 6, u = 0; u < 36; u++) {
var p = l / 2 + u % 6 * l, h = -d / 2 - Math.floor(u / 6) * d, f = cc.v2(p, h).add(r);
n.push(f);
}
t(n);
});
});
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0))), s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
e.captureNodeTemp = function(e, t, o) {
var n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
i.enabled = !1;
e.scaleY = s;
e.group = c;
return a;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14c6Lq6b1L7LC6046MW48R", "CocosHelperCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = cc.v2(i.getScreenToWorldPoint(a, new cc.Vec2()).x, i.getScreenToWorldPoint(a, new cc.Vec2()).y);
s = cc.v2(i.getScreenToWorldPoint(s, new cc.Vec2()).x, i.getScreenToWorldPoint(s, new cc.Vec2()).y);
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode2 = function(e) {
var t = e.getChildByName("cameraNode");
if (!t) {
(t = new cc.Node("cameraNode")).parent = e;
t.x = 0;
t.y = 0;
}
var o = t.getComponent(cc.Camera);
o || (o = t.addComponent(cc.Camera));
var n = e.group;
e.group = "captureLayer";
o.cullingMask = e._cullingMask;
var i = new cc.RenderTexture();
i.initWithSize(640, 960, cc.game._renderContext.STENCIL_INDEX8);
o.targetTexture = i;
var c = e.scaleY;
e.scaleY = -1 * c;
o.render(null);
e.scaleY = c;
e.group = n;
return i;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.saveImageByNode = function(t, o, n) {
e.captureNodeSize(t, 640, 960).then(function(e) {
var t = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + o + ".png";
if (jsb.saveImageData(t, i, c, a)) {
console.log("save image data success, file: " + a);
n();
} else console.log("save image data failed, file: " + a);
});
};
e.saveImageByTexture = function(e, t, o) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
};
e.getImage = function(e) {
return new Promise(function(t, o) {
var n = jsb.fileUtils.getWritablePath() + e + ".png";
console.log(n);
cc.loader.load(n, function(e, o) {
if (e) console.log("sadesffa" + e); else {
console.log("sadesffa" + n);
t(o);
}
});
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
c.setPosition(c.parent.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(0, 0))));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22ca4LLqBJAoBa2/zs4lmL", "CocosHelperCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0))), s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21c6Lq6b1L7LC6046MW48R", "CocosHelperFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = cc.v2(i.getScreenToWorldPoint(a, new cc.Vec2()).x, i.getScreenToWorldPoint(a, new cc.Vec2()).y);
s = cc.v2(i.getScreenToWorldPoint(s, new cc.Vec2()).x, i.getScreenToWorldPoint(s, new cc.Vec2()).y);
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode3 = function(e, t, o) {
var n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.captureNode2 = function(e) {
var t = e.getChildByName("cameraNode");
if (!t) {
(t = new cc.Node("cameraNode")).parent = e;
t.x = 0;
t.y = 0;
}
var o = t.getComponent(cc.Camera);
o || (o = t.addComponent(cc.Camera));
var n = e.group;
e.group = "captureLayer";
o.cullingMask = e._cullingMask;
var i = new cc.RenderTexture();
i.initWithSize(640, 960, cc.game._renderContext.STENCIL_INDEX8);
o.targetTexture = i;
var c = e.scaleY;
e.scaleY = -1 * c;
o.render(null);
e.scaleY = c;
e.group = n;
return i;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.saveImageByNode = function(t, o, n) {
e.captureNodeSize(t, 640, 960).then(function(e) {
var t = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + o + ".png";
if (jsb.saveImageData(t, i, c, a)) {
console.log("save image data success, file: " + a);
n();
} else console.log("save image data failed, file: " + a);
});
};
e.saveImageByTexture = function(e, t, o) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
};
e.getImage = function(e) {
return new Promise(function(t, o) {
var n = jsb.fileUtils.getWritablePath() + e + ".png";
console.log(n);
cc.loader.load(n, function(e, o) {
if (e) console.log("sadesffa" + e); else {
console.log("sadesffa" + n);
t(o);
}
});
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
c.setPosition(c.parent.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(0, 0))));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19c6Lq6b1L7LC6046MW48R", "CocosHelperGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = cc.v2(i.getScreenToWorldPoint(a, new cc.Vec2()).x, i.getScreenToWorldPoint(a, new cc.Vec2()).y);
s = cc.v2(i.getScreenToWorldPoint(s, new cc.Vec2()).x, i.getScreenToWorldPoint(s, new cc.Vec2()).y);
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode2 = function(e) {
var t = e.getChildByName("cameraNode");
if (!t) {
(t = new cc.Node("cameraNode")).parent = e;
t.x = 0;
t.y = 0;
}
var o = t.getComponent(cc.Camera);
o || (o = t.addComponent(cc.Camera));
var n = e.group;
e.group = "captureLayer";
o.cullingMask = e._cullingMask;
var i = new cc.RenderTexture();
i.initWithSize(640, 960, cc.game._renderContext.STENCIL_INDEX8);
o.targetTexture = i;
var c = e.scaleY;
e.scaleY = -1 * c;
o.render(null);
e.scaleY = c;
e.group = n;
return i;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.saveImageByNode = function(t, o, n) {
e.captureNodeSize(t, 640, 960).then(function(e) {
var t = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + o + ".png";
if (jsb.saveImageData(t, i, c, a)) {
console.log("save image data success, file: " + a);
n();
} else console.log("save image data failed, file: " + a);
});
};
e.saveImageByTexture = function(e, t, o) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
};
e.getImage = function(e) {
return new Promise(function(t, o) {
var n = jsb.fileUtils.getWritablePath() + e + ".png";
console.log(n);
cc.loader.load(n, function(e, o) {
if (e) console.log("sadesffa" + e); else {
console.log("sadesffa" + n);
t(o);
}
});
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
c.setPosition(c.parent.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(0, 0))));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9ec2a0QwchDGbG4X3GtRIMj", "CocosHelperGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode2 = function(e) {
var t = Math.floor(e.width), o = Math.floor(e.height), n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11ca4LLqBJAoBa2/zs4lmL", "CocosHelperHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0))), s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f1f70nH+m1O25lYmcP2VbKj", "CocosHelperMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
var l = i.getScreenToWorldPoint(a, new cc.Vec2());
a = cc.v2(l.x, l.y);
var d = i.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y - 500));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = cc.view.getVisibleSize().width, i = cc.view.getVisibleSize().height, c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode2 = function(e) {
var t = Math.floor(e.width * e.scaleX), o = Math.floor(e.height * e.scaleY), n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77c6Lq6b1L7LC6046MW48R", "CocosHelperRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = cc.v2(i.getScreenToWorldPoint(a, new cc.Vec2()).x, i.getScreenToWorldPoint(a, new cc.Vec2()).y);
s = cc.v2(i.getScreenToWorldPoint(s, new cc.Vec2()).x, i.getScreenToWorldPoint(s, new cc.Vec2()).y);
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode3 = function(e, t, o) {
var n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.captureNode2 = function(e) {
var t = e.getChildByName("cameraNode");
if (!t) {
(t = new cc.Node("cameraNode")).parent = e;
t.x = 0;
t.y = 0;
}
var o = t.getComponent(cc.Camera);
o || (o = t.addComponent(cc.Camera));
var n = e.group;
e.group = "captureLayer";
o.cullingMask = e._cullingMask;
var i = new cc.RenderTexture();
i.initWithSize(640, 960, cc.game._renderContext.STENCIL_INDEX8);
o.targetTexture = i;
var c = e.scaleY;
e.scaleY = -1 * c;
o.render(null);
e.scaleY = c;
e.group = n;
return i;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.saveImageByNode = function(t, o, n) {
e.captureNodeSize(t, 640, 960).then(function(e) {
var t = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + o + ".png";
if (jsb.saveImageData(t, i, c, a)) {
console.log("save image data success, file: " + a);
n();
} else console.log("save image data failed, file: " + a);
});
};
e.saveImageByTexture = function(e, t, o) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
};
e.getImage = function(e) {
return new Promise(function(t, o) {
var n = jsb.fileUtils.getWritablePath() + e + ".png";
console.log(n);
cc.loader.load(n, function(e, o) {
if (e) console.log("sadesffa" + e); else {
console.log("sadesffa" + n);
t(o);
}
});
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
c.setPosition(c.parent.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(0, 0))));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12ca4LLqBJAoBa2/zs4lmL", "CocosHelperRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0))), s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelperSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13ca4LLqBJAoBa2/zs4lmL", "CocosHelperSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0))), s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelper_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fd8abSdoZNI8rh0m5qjlA+M", "CocosHelper_my");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getCameraToWorldPoint(a, new cc.Vec2());
s = i.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode2 = function(e) {
var t = Math.floor(e.width), o = Math.floor(e.height), n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CocosHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "acdc6Lq6b1L7LC6046MW48R", "CocosHelper");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(t, o) {
var n, i = cc.Camera.findCamera(t), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = t.position;
t.position;
null != t.parent && (r = t.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = cc.v2(i.getScreenToWorldPoint(a, new cc.Vec2()).x, i.getScreenToWorldPoint(a, new cc.Vec2()).y);
s = cc.v2(i.getScreenToWorldPoint(s, new cc.Vec2()).x, i.getScreenToWorldPoint(s, new cc.Vec2()).y);
}
switch (o) {
case e.ShowDirection.show_from_bottom:
n = new cc.Vec2(r.x, s.y - t.getContentSize().height * (1 - t.getAnchorPoint().y));
break;

case e.ShowDirection.show_from_left:
n = new cc.Vec2(a.x - t.getContentSize().width * (1 - t.getAnchorPoint().x), r.y);
break;

case e.ShowDirection.show_from_right:
n = new cc.Vec2(s.x + t.getContentSize().width * t.getAnchorPoint().x, r.y);
break;

case e.ShowDirection.show_from_top:
n = new cc.Vec2(r.x, a.y + t.getContentSize().width * t.getAnchorPoint().y);
}
null != t.parent && (n = t.parent.convertToNodeSpaceAR(n));
return n;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNode3 = function(e, t, o) {
var n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.captureNode2 = function(e) {
var t = e.getChildByName("cameraNode");
if (!t) {
(t = new cc.Node("cameraNode")).parent = e;
t.x = 0;
t.y = 0;
}
var o = t.getComponent(cc.Camera);
o || (o = t.addComponent(cc.Camera));
var n = e.group;
e.group = "captureLayer";
o.cullingMask = e._cullingMask;
var i = new cc.RenderTexture();
i.initWithSize(640, 960, cc.game._renderContext.STENCIL_INDEX8);
o.targetTexture = i;
var c = e.scaleY;
e.scaleY = -1 * c;
o.render(null);
e.scaleY = c;
e.group = n;
return i;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.saveImageByNode = function(t, o, n) {
e.captureNodeSize(t, 640, 960).then(function(e) {
var t = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + o + ".png";
if (jsb.saveImageData(t, i, c, a)) {
console.log("save image data success, file: " + a);
n();
} else console.log("save image data failed, file: " + a);
});
};
e.saveImageByTexture = function(e, t, o) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
};
e.getImage = function(e) {
return new Promise(function(t, o) {
var n = jsb.fileUtils.getWritablePath() + e + ".png";
console.log(n);
cc.loader.load(n, function(e, o) {
if (e) console.log("sadesffa" + e); else {
console.log("sadesffa" + n);
t(o);
}
});
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
c.setPosition(c.parent.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(0, 0))));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
a.enabled = !1;
e.scaleY = l;
e.group = s;
n(r);
});
};
return e;
}();
o.CocosHelper = n;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
o.CocosHelper = n;
cc._RF.pop();
}, {} ],
CoilControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b220a6dFidPTalIzMWDOTYB", "CoilControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneCS"), i = e("./PopupComponetCS"), c = e("../common/Script/codebase/utils/CocosHelperCS"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.touchNextBtn = function() {
n.default.changeScene("playSlimeCS");
};
t.prototype.touchBackBtn = function() {
n.default.changeScene("pullSlime1CS");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(i.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(i.default).hidePopup();
}.bind(this))));
e ? t.getComponent(i.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(i.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"./PopupComponetCS": "PopupComponetCS"
} ],
CoilControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b210a6dFidPTalIzMWDOTYB", "CoilControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneFS"), i = e("./PopupComponetFS"), c = e("../common/Script/codebase/utils/CocosHelperFS"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.touchNextBtn = function() {
n.default.changeScene("playSlimeFS");
};
t.prototype.touchBackBtn = function() {
n.default.changeScene("pullSlime1");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(i.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(i.default).hidePopup();
}.bind(this))));
e ? t.getComponent(i.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(i.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"./PopupComponetFS": "PopupComponetFS"
} ],
CoilSlimeControllerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b770eqiRutPjoE0l6M+ro2a", "CoilSlimeControllerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./TipManagerRP"), i = e("../common/Script/codebase/TransitionSceneRP"), c = e("../common/Script/ads/showLaodingRP"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNode = null;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/juan/juan0").runAction(cc.sequence(cc.moveTo(2, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/tip").active = !0;
cc.find("Canvas/juan").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan0").active = !1;
cc.find("Canvas/juan/juan1").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan1").active = !1;
cc.find("Canvas/juan/juan2").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
n.default.getInstance().jumpTips();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan2").active = !1;
cc.find("Canvas/juan/juan3").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan3/juan3_chang").active = !1;
cc.find("Canvas/juan/juan4").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan4/juan4_chang").active = !1;
cc.find("Canvas/juan/juan5").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan5/juan5_chang").active = !1;
cc.find("Canvas/juan/juan6").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
n.default.getInstance().jumpTips();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/juan/juan6/juan6_chang").active = !1;
cc.find("Canvas/juan/juan7").active = !0;
this.touchNode.getComponent(cc.AudioSource).play();
this.destroyTouchEvent();
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
}.bind(this)), cc.scaleTo(.5, .6), cc.spawn(cc.scaleTo(1, .4), cc.moveBy(1, cc.v2(0, -88))), cc.callFunc(function() {
cc.find("Canvas/juan").active = !1;
cc.find("Canvas/dragon").active = !0;
}.bind(this))));
cc.director.getActionManager().pauseTarget(cc.find("Canvas/juan"));
this.registerTouchEvent();
}.bind(this))));
};
t.prototype.registerTouchEvent = function() {
this.touchNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.touchNode.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.director.getActionManager().resumeTarget(cc.find("Canvas/juan"));
cc.find("Canvas/tip").active = !1;
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/tip").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
cc.director.getActionManager().pauseTarget(cc.find("Canvas/juan"));
this.touchNode.getComponent(cc.Animation).play();
this.touchNode.getComponent(cc.AudioSource).play();
};
t.prototype.enterNextScene = function() {
c.default.getInstance().loadingDoneCallback = function() {
c.default.getInstance().loadingDoneCallback = null;
i.default.changeScene("decorateSlimeRP", 7);
}.bind(this);
c.default.getInstance().showAds("rainbowpoop/prefab/loadingRP", "rainbowpoop/prefab/loading1", !1);
};
__decorate([ r(cc.Node) ], t.prototype, "touchNode", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/Script/ads/showLaodingRP": "showLaodingRP",
"../common/Script/codebase/TransitionSceneRP": "TransitionSceneRP",
"./TipManagerRP": "TipManagerRP"
} ],
ColorRectAssemblerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ee239IUZR1Bp5oOZvXFkK5z", "ColorRectAssemblerCB");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14edGR+sNIDbLV7qd3tZMc", "ColorRectAssemblerCE");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2239IUZR1Bp5oOZvXFkK5z", "ColorRectAssemblerCS");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21edGR+sNIDbLV7qd3tZMc", "ColorRectAssemblerFS");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19edGR+sNIDbLV7qd3tZMc", "ColorRectAssemblerGL");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5858ew9qftAuY9pmZBldzq8", "ColorRectAssemblerGS");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1139IUZR1Bp5oOZvXFkK5z", "ColorRectAssemblerHC");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "edd73xYQxFIUZg2VM5e3qAY", "ColorRectAssemblerMS");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77edGR+sNIDbLV7qd3tZMc", "ColorRectAssemblerRP");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1239IUZR1Bp5oOZvXFkK5z", "ColorRectAssemblerRS");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssemblerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1339IUZR1Bp5oOZvXFkK5z", "ColorRectAssemblerSD");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssembler_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e2b85ecOkxOuKopv0MpofAP", "ColorRectAssembler_my");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectAssembler: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0e6edGR+sNIDbLV7qd3tZMc", "ColorRectAssembler");
t.exports = {
useModel: !1,
updateRenderData: function(e) {
if (!e._renderData) {
var t = cc.IARenderData;
e._renderData = new t();
e._renderData.material = e.getMaterial();
e._renderData.ia = e._ia;
}
},
renderIA: function(e, t) {
t._flushIA(e._renderData);
}
};
cc._RF.pop();
}, {} ],
ColorRectCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6b3cck74jhLt5PgxSf72fWv", "ColorRectCB");
var n = e("./ColorRectAssemblerCB"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerCB": "ColorRectAssemblerCB"
} ],
ColorRectCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14e43FVI5Kbq0I2RKwxb8V", "ColorRectCE");
var n = e("./ColorRectAssemblerCE"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerCE": "ColorRectAssemblerCE"
} ],
ColorRectCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22cck74jhLt5PgxSf72fWv", "ColorRectCS");
var n = e("./ColorRectAssemblerCS"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerCS": "ColorRectAssemblerCS"
} ],
ColorRectFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21e43FVI5Kbq0I2RKwxb8V", "ColorRectFS");
var n = e("./ColorRectAssemblerFS"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerFS": "ColorRectAssemblerFS"
} ],
ColorRectGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19e43FVI5Kbq0I2RKwxb8V", "ColorRectGL");
var n = e("./ColorRectAssemblerGL"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerGL": "ColorRectAssemblerGL"
} ],
ColorRectGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ca8d5ld3ihGO55WHnx9GoKp", "ColorRectGS");
var n = e("./ColorRectAssemblerGS"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = i.gfx;
a = i.math;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerGS": "ColorRectAssemblerGS"
} ],
ColorRectHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11cck74jhLt5PgxSf72fWv", "ColorRectHC");
var n = e("./ColorRectAssemblerHC"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerHC": "ColorRectAssemblerHC"
} ],
ColorRectMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "266datuDg5DNKGdO80mKKer", "ColorRectMS");
var n = e("./ColorRectAssemblerMS"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerMS": "ColorRectAssemblerMS"
} ],
ColorRectRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77e43FVI5Kbq0I2RKwxb8V", "ColorRectRP");
var n = e("./ColorRectAssemblerRP"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerRP": "ColorRectAssemblerRP"
} ],
ColorRectRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12cck74jhLt5PgxSf72fWv", "ColorRectRS");
var n = e("./ColorRectAssemblerRS"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerRS": "ColorRectAssemblerRS"
} ],
ColorRectSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13cck74jhLt5PgxSf72fWv", "ColorRectSD");
var n = e("./ColorRectAssemblerSD"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssemblerSD": "ColorRectAssemblerSD"
} ],
ColorRect_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "828e5zeeN1D57k8RVvANCys", "ColorRect_my");
var n = e("./ColorRectAssembler_my"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssembler_my": "ColorRectAssembler_my"
} ],
ColorRect: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c7fe43FVI5Kbq0I2RKwxb8V", "ColorRect");
var n = e("./ColorRectAssembler"), i = void 0, c = void 0, a = void 0, s = void 0, r = void 0;
cc.game.once(cc.game.EVENT_ENGINE_INITED, function() {
i = cc.renderer.renderEngine;
c = cc.gfx;
a = cc.vmath;
s = a.mat4.create();
r = a.mat4.create();
});
var l = cc.Class({
extends: cc.RenderComponent,
properties: {
blColor: cc.Color,
brColor: cc.Color,
tlColor: cc.Color,
trColor: cc.Color
},
_updateVertexData: function(e) {
var t = this._vData, o = this._uintVData, n = this.node.width, i = this.node.height, c = n * this.node.anchorX, a = i * this.node.anchorY, s = e.m00, r = e.m01, l = e.m04, d = e.m05, u = e.m12, p = e.m13, h = void 0, f = void 0, g = 0, m = this.node.opacity;
this.blColor.a = m;
this.brColor.a = m;
this.tlColor.a = m;
this.trColor.a = m;
h = -c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.blColor._val;
h = n - c;
f = -a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.brColor._val;
h = -c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.tlColor._val;
h = n - c;
f = i - a;
t[g++] = h * s + f * l + u;
t[g++] = h * r + f * d + p;
o[g++] = this.trColor._val;
this._vb.update(0, t);
},
_createIA: function() {
var e = cc.renderer.device;
this._vertexFormat = new c.VertexFormat([ {
name: c.ATTR_POSITION,
type: c.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: c.ATTR_COLOR,
type: c.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vData = new Float32Array(12);
this._uintVData = new Uint32Array(this._vData.buffer);
this._iData = new Uint16Array([ 0, 1, 2, 1, 3, 2 ]);
this._vb = new c.VertexBuffer(e, this._vertexFormat, c.USAGE_DYNAMIC, null, 4);
this._ib = new c.IndexBuffer(e, c.INDEX_FMT_UINT16, c.USAGE_STATIC, this._iData, this._iData.length);
this.node.getWorldMatrix(r);
this._updateVertexData(r);
this._ia = new i.InputAssembler();
this._ia._vertexBuffer = this._vb;
this._ia._indexBuffer = this._ib;
this._ia._start = 0;
this._ia._count = this._iData.length;
},
onEnable: function() {
this._super();
this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
this.node._renderFlag |= cc.RenderFlow.FLAG_CUSTOM_IA_RENDER;
},
onLoad: function() {
this._material = new i.SpriteMaterial();
this._material.useTexture = !1;
this._material.useColor = !1;
this._createIA();
},
update: function() {
this.node.getWorldMatrix(r);
r.m00 === s.m00 && r.m01 === s.m01 && r.m04 === s.m04 && r.m05 === s.m05 && r.m12 === s.m12 && r.m13 === s.m13 || this._updateVertexData(r);
}
});
l._assembler = n;
t.exports = l;
cc._RF.pop();
}, {
"./ColorRectAssembler": "ColorRectAssembler"
} ],
ColorTouchEventGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b197eF0UvdEuaubLvdTkMLz", "ColorTouchEventGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.sprinkleNode = null;
t.points = null;
return t;
}
t.prototype.init = function(e) {
cc.find("Canvas/write/tipMove") && (cc.find("Canvas/write/tipMove").active = !0);
this.points = [];
this.sprinkleNode = e;
this.sprinkleNode.setScale(.4);
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
var t = e.touch.getLocation();
this.addCircle(t);
cc.find("Canvas/write/tipMove") && cc.find("Canvas/write/tipMove").destroy();
};
t.prototype.onTouchMove = function(e) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.addLine(e.getPreviousLocation(), t);
};
t.prototype.onTouchEnd = function() {};
t.prototype.onTouchCancle = function() {};
t.prototype.addCircle = function(e) {
var t = this.node.convertToNodeSpaceAR(e), o = cc.instantiate(this.sprinkleNode);
o.parent = this.node;
o.setPosition(t);
};
t.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 5) {
var i = n / o, c = t.x - e.x, a = t.y - e.y, s = new cc.Vec2(e.x + c * i, e.y + a * i), r = !0;
if (this.points.length > 0) for (var l = 0; l < this.points.length; l++) {
if (this._calculatedistance(s, this.points[l]) < .4 * this.sprinkleNode.width / 4) {
r = !1;
break;
}
r = !0;
}
if (r) {
this.addCircle(s);
this.points.push(s);
}
}
};
t.prototype._calculatedistance = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return Math.sqrt(o * o + n * n);
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
CustomMaskCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2b13d/hZglHnImK2q9KzSPG", "CustomMaskCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawCB"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawCB": "MaskDrawCB"
} ],
CustomMaskCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14228A8T1JMaxaxsJmZSPk", "CustomMaskCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawCE"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawCE": "MaskDrawCE"
} ],
CustomMaskCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b223d/hZglHnImK2q9KzSPG", "CustomMaskCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawCS": "MaskDrawCS"
} ],
CustomMaskFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21228A8T1JMaxaxsJmZSPk", "CustomMaskFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawFS": "MaskDrawFS"
} ],
CustomMaskGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19228A8T1JMaxaxsJmZSPk", "CustomMaskGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawGL": "MaskDrawGL"
} ],
CustomMaskGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f9f2d5qJqhPvowdYvuf4RXO", "CustomMaskGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawGS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawGS": "MaskDrawGS"
} ],
CustomMaskHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b113d/hZglHnImK2q9KzSPG", "CustomMaskHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawHC"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawHC": "MaskDrawHC"
} ],
CustomMaskMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2d5d0CTNhBNbKNXuAz8kf6", "CustomMaskMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawMS": "MaskDrawMS"
} ],
CustomMaskRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77228A8T1JMaxaxsJmZSPk", "CustomMaskRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawRP": "MaskDrawRP"
} ],
CustomMaskRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b123d/hZglHnImK2q9KzSPG", "CustomMaskRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawRS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawRS": "MaskDrawRS"
} ],
CustomMaskSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b133d/hZglHnImK2q9KzSPG", "CustomMaskSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDrawSD"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDrawSD": "MaskDrawSD"
} ],
CustomMask: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "714228A8T1JMaxaxsJmZSPk", "CustomMask");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MaskDraw"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.draw = new n.default();
t.particleNode = null;
t._enableTouch = !0;
return t;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
e.prototype.onLoad.call(this);
0;
null == this.draw.mask && (this.draw.mask = this);
this.enableTouch = this._enableTouch;
};
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
t.prototype.touchMove = function(e) {
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.node.getBoundingBoxToWorld().contains(t) && this.draw.addLine(e.getPreviousLocation(), t);
}
};
t.prototype.touchEnd = function(e) {
this.enabledInHierarchy && this._enableTouch;
};
t.prototype._hitTest = function(e) {
return !0;
};
t.prototype._updateGraphics = function() {
0;
};
__decorate([ a(n.default) ], t.prototype, "draw", void 0);
__decorate([ a(cc.Node) ], t.prototype, "particleNode", void 0);
__decorate([ a({
visible: !1
}) ], t.prototype, "_enableTouch", void 0);
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(cc.Mask);
o.default = s;
cc._RF.pop();
}, {
"./MaskDraw": "MaskDraw"
} ],
DataConfigCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a7117A9KdZLDp2JsyFNCsGq", "DataConfigCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.color = null;
this.texture = null;
this.foam = null;
this.index = null;
this.coinName = "coinhat";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.addCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
var t = Number(e);
t += 1;
cc.sys.localStorage.setItem(this.coinName, t);
};
e.prototype.getCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
return e;
};
e.prototype.setColors = function(e) {
this.color = e;
};
e.prototype.getColors = function() {
return this.color;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setFoam = function(e) {
this.foam = e;
};
e.prototype.getFoam = function() {
return this.foam;
};
e.prototype.setIndex = function(e) {
this.index = e;
};
e.prototype.getIndex = function() {
return this.index;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14a4ivNIVGNLObiQa81hYn", "DataConfigCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.colors = null;
this.texture = null;
this.candys = null;
this.color = null;
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.setColors = function(e) {
this.colors = e;
};
e.prototype.getColors = function() {
return this.colors;
};
e.prototype.setColor = function(e) {
this.color = e;
};
e.prototype.getColor = function() {
return this.color;
};
e.prototype.setCandys = function(e) {
this.candys = e;
};
e.prototype.getCandys = function() {
return this.candys;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setNoFirst = function() {
cc.sys.localStorage.setItem("noFirst", "1");
};
e.prototype.getNoFirst = function() {
return !!cc.sys.localStorage.getItem("noFirst");
};
e.prototype.setNoFirst1 = function() {
cc.sys.localStorage.setItem("noFirst1", "1");
};
e.prototype.getNoFirst1 = function() {
return !!cc.sys.localStorage.getItem("noFirst1");
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2217A9KdZLDp2JsyFNCsGq", "DataConfigCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.color = null;
this.texture = null;
this.foam = null;
this.coinName = "coinhat";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.addCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
var t = Number(e);
t += 1;
cc.sys.localStorage.setItem(this.coinName, t);
};
e.prototype.getCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
return e;
};
e.prototype.setColors = function(e) {
this.color = e;
};
e.prototype.getColors = function() {
return this.color;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setFoam = function(e) {
this.foam = e;
};
e.prototype.getFoam = function() {
return this.foam;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2117A9KdZLDp2JsyFNCsGq", "DataConfigFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.color = null;
this.texture = null;
this.foam = null;
this.coinName = "coinhat";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.addCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
var t = Number(e);
t += 1;
cc.sys.localStorage.setItem(this.coinName, t);
};
e.prototype.getCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
return e;
};
e.prototype.setColors = function(e) {
this.color = e;
};
e.prototype.getColors = function() {
return this.color;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setFoam = function(e) {
this.foam = e;
};
e.prototype.getFoam = function() {
return this.foam;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b199b9p9bVDu6sQPOrQMYcS", "DataConfigGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.currentFood = null;
this.texture = null;
this.index = null;
this.isFirstPlay = !0;
this.isFirstDrag = !0;
this.isFirstSlap = !0;
this.isFirstClick = !0;
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setPlay = function(e) {
this.isFirstPlay = e;
};
e.prototype.getPlay = function() {
return this.isFirstPlay;
};
e.prototype.setDrag = function(e) {
this.isFirstDrag = e;
};
e.prototype.getDrag = function() {
return this.isFirstDrag;
};
e.prototype.setSlap = function(e) {
this.isFirstSlap = e;
};
e.prototype.getSlap = function() {
return this.isFirstSlap;
};
e.prototype.setClick = function(e) {
this.isFirstClick = e;
};
e.prototype.getClick = function() {
return this.isFirstClick;
};
e.prototype.getFoodIndex = function() {
var e = cc.sys.localStorage.getItem("index");
e || (e = 0);
return e;
};
e.prototype.setFoodData = function(e) {
cc.sys.localStorage.setItem("foodData", JSON.stringify(e));
};
e.prototype.getFoodData = function() {
var e = JSON.parse(cc.sys.localStorage.getItem("foodData"));
if (!e) {
e = [];
cc.sys.localStorage.setItem("foodData", JSON.stringify(e));
}
return e;
};
e.prototype.addFood = function(e) {
var t = JSON.parse(cc.sys.localStorage.getItem("foodData"));
t || (t = []);
t.push(e);
cc.sys.localStorage.setItem("foodData", JSON.stringify(t));
var o = cc.sys.localStorage.getItem("index");
o || (o = 0);
var n = Number(o);
n += 1;
cc.sys.localStorage.setItem("index", n);
};
e.prototype.changeFoodByIndex = function(e, t) {
var o = JSON.parse(cc.sys.localStorage.getItem("foodData"));
o.splice(e, 1);
o.splice(e, 0, t);
cc.sys.localStorage.setItem("foodData", JSON.stringify(o));
};
e.prototype.resetFoodData = function() {
cc.sys.localStorage.setItem("foodData", JSON.stringify([]));
};
e.prototype.setCurrentFood = function(e) {
this.currentFood = e;
};
e.prototype.getCurrentFood = function() {
if (!this.currentFood) {
this.currentFood = "noodle";
this.setCurrentFood(this.currentFood);
}
return this.currentFood;
};
e.prototype.setChangeIndex = function(e) {
this.index = e;
console.log("index" + this.index);
};
e.prototype.getChangeIndex = function() {
return this.index;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7c853nitO9AQK9IQJ8hQNy6", "DataConfigGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.tag = 0;
this.name = "bowl_blue_stir";
this.bodyName = "blue";
this.tagName = "blue_";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.getTag = function() {
return this.tag;
};
e.prototype.setTag = function(e) {
this.tag = e;
};
e.prototype.setName = function(e) {
this.name = e;
};
e.prototype.getName = function() {
return this.name;
};
e.prototype.setBodyName = function(e) {
this.bodyName = e;
};
e.prototype.setTagName = function(e) {
this.tagName = e;
};
e.prototype.getBodyName = function() {
return this.bodyName;
};
e.prototype.getTagName = function() {
return this.tagName;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a519bbbNT1JR7PEreIHCd2Q", "DataConfigMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.boxTexture = null;
this.isHome = "";
this.pageTexture = null;
this.selectLight = null;
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.setIsHome = function(e) {
this.isHome = e;
};
e.prototype.playMusic = function() {
cc.audioEngine.stopMusic();
cc.loader.loadRes("makeupms/bg", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !1);
cc.audioEngine.playMusic(t, !0);
});
};
e.prototype.playMusic2 = function() {
cc.audioEngine.stopMusic();
cc.loader.loadRes("makeupms/ba", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !1);
cc.audioEngine.playMusic(t, !0);
});
};
e.prototype.getIsHome = function() {
return this.isHome;
};
e.prototype.setTexture = function(e) {
this.boxTexture = e;
};
e.prototype.getTexture = function() {
return this.boxTexture;
};
e.prototype.setPageTexture = function(e) {
this.pageTexture = e;
};
e.prototype.getPageTexture = function() {
return this.pageTexture;
};
e.prototype.setSelectLight = function(e) {
this.selectLight = e;
};
e.prototype.getSelectLight = function() {
return this.selectLight;
};
e.prototype.showPhotoPup = function() {
cc.loader.loadRes("makeupms/photo_board", function(e, t) {
if (cc.sys.isMobile && e) cc.log("Prefab error11:" + e); else {
cc.loader.setAutoReleaseRecursively(t, !0);
var o = cc.instantiate(t);
console.log(o);
cc.Canvas.instance.node.addChild(o);
o.name = "newMyPrefab";
o.setPosition(0, 0);
console.log("3333");
o.zIndex = 1e3;
}
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b779b9p9bVDu6sQPOrQMYcS", "DataConfigRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.currentFood = null;
this.texture = null;
this.index = null;
this.isFirstPlay = !0;
this.isFirstDrag = !0;
this.isFirstSlap = !0;
this.isFirstClick = !0;
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setPlay = function(e) {
this.isFirstPlay = e;
};
e.prototype.getPlay = function() {
return this.isFirstPlay;
};
e.prototype.setDrag = function(e) {
this.isFirstDrag = e;
};
e.prototype.getDrag = function() {
return this.isFirstDrag;
};
e.prototype.setSlap = function(e) {
this.isFirstSlap = e;
};
e.prototype.getSlap = function() {
return this.isFirstSlap;
};
e.prototype.setClick = function(e) {
this.isFirstClick = e;
};
e.prototype.getClick = function() {
return this.isFirstClick;
};
e.prototype.getFoodIndex = function() {
var e = cc.sys.localStorage.getItem("index");
e || (e = 0);
return e;
};
e.prototype.setFoodData = function(e) {
cc.sys.localStorage.setItem("foodData", JSON.stringify(e));
};
e.prototype.getFoodData = function() {
var e = JSON.parse(cc.sys.localStorage.getItem("foodData"));
if (!e) {
e = [];
cc.sys.localStorage.setItem("foodData", JSON.stringify(e));
}
return e;
};
e.prototype.addFood = function(e) {
var t = JSON.parse(cc.sys.localStorage.getItem("foodData"));
t || (t = []);
t.push(e);
cc.sys.localStorage.setItem("foodData", JSON.stringify(t));
var o = cc.sys.localStorage.getItem("index");
o || (o = 0);
var n = Number(o);
n += 1;
cc.sys.localStorage.setItem("index", n);
};
e.prototype.changeFoodByIndex = function(e, t) {
var o = JSON.parse(cc.sys.localStorage.getItem("foodData"));
o.splice(e, 1);
o.splice(e, 0, t);
cc.sys.localStorage.setItem("foodData", JSON.stringify(o));
};
e.prototype.resetFoodData = function() {
cc.sys.localStorage.setItem("foodData", JSON.stringify([]));
};
e.prototype.setCurrentFood = function(e) {
this.currentFood = e;
};
e.prototype.getCurrentFood = function() {
if (!this.currentFood) {
this.currentFood = "noodle";
this.setCurrentFood(this.currentFood);
}
return this.currentFood;
};
e.prototype.setChangeIndex = function(e) {
this.index = e;
console.log("index" + this.index);
};
e.prototype.getChangeIndex = function() {
return this.index;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1217A9KdZLDp2JsyFNCsGq", "DataConfigRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.color = null;
this.texture = null;
this.foam = null;
this.coinName = "coinhat";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.addCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
var t = Number(e);
t += 1;
cc.sys.localStorage.setItem(this.coinName, t);
};
e.prototype.getCoinNum = function() {
var e = cc.sys.localStorage.getItem(this.coinName);
e || (e = 0);
return e;
};
e.prototype.setColors = function(e) {
this.color = e;
};
e.prototype.getColors = function() {
return this.color;
};
e.prototype.setTexture = function(e) {
this.texture = e;
};
e.prototype.getTexture = function() {
return this.texture;
};
e.prototype.setFoam = function(e) {
this.foam = e;
};
e.prototype.getFoam = function() {
return this.foam;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DataConfigSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1317A9KdZLDp2JsyFNCsGq", "DataConfigSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.isStart = !0;
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.setColor = function(e) {
cc.sys.localStorage.setItem("color", e);
};
e.prototype.getColor = function() {
var e = cc.sys.localStorage.getItem("color");
if (!e) {
e = "green";
cc.sys.localStorage.setItem("color", e);
}
return e;
};
e.prototype.setCount = function(e) {
cc.sys.localStorage.setItem("count", e);
};
e.prototype.addCount = function() {
var e = this.getCount(), t = Number(e) + 1;
this.setCount(t);
};
e.prototype.getCount = function() {
var e = cc.sys.localStorage.getItem("count");
if (!e) {
e = 0;
cc.sys.localStorage.setItem("count", e);
}
return e;
};
e.prototype.setIsStart = function(e) {
this.isStart = e;
};
e.prototype.getIsStart = function() {
return this.isStart;
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
DecorateControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b115dVjFVNCW4qIOp8eMHAn", "DecorateControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperHC"), i = e("../common/Script/RewardManagerHC"), c = e("../common/Script/IconItemHC"), a = e("../common/Script/codebase/SpriteDrag/SpriteDragHC"), s = e("../common/Script/MoveInHC"), r = e("../common/Script/codebase/TransitionSceneHC"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.insta = null;
t.conteneNode = null;
t.text = "hello";
t.iconsPool = null;
t.stepNum = 0;
t.cupIndex = null;
return t;
}
t.prototype.start = function() {
i.default.getInstance().loadConfig();
if (null == this.iconsPool) {
this.iconsPool = new cc.NodePool();
for (var e = 0; e < 15; e++) this.iconsPool.put(cc.instantiate(this.insta));
}
};
t.prototype.onLoad = function() {
cc.game.addPersistRootNode(cc.find("cupCopy"));
this.showIconBg("cup");
cc.find("cup/dish", this.node).getComponent(s.default).actionCallBack = function() {
cc.find("cup/dish/pull", this.node).getComponent(a.default).enabled = !0;
}.bind(this);
cc.find("cup/bowl", this.node).getComponent(s.default).actionCallBack = function() {
cc.find("cup/bowl", this.node).getComponent(a.default).enabled = !0;
}.bind(this);
cc.find("decScrollView", this.node).getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("btn_next").getComponent(cc.Button).interactable = !0;
}.bind(this);
};
t.prototype.showButtons = function() {
for (var e = this.node.getChildByName("buttons").childrenCount, t = function(t) {
o.node.getChildByName("buttons").runAction(cc.sequence(cc.delayTime(.2 * (e - 1 - t)), cc.callFunc(function() {
this.node.getChildByName("buttons").getComponent(cc.AudioSource).play();
this.node.getChildByName("buttons").children[t].active = !0;
var e = this.node.getChildByName("buttons").children[t].scale;
this.node.getChildByName("buttons").children[t].runAction(cc.sequence(cc.scaleBy(.1, 1.1, .9), cc.scaleBy(.1, .9, 1.1), cc.scaleTo(.1, e)));
}.bind(o))));
}, o = this, n = e - 1; n >= 0; n--) t(n);
};
t.prototype.singleToggle = function(e, t) {
this.showIconBg(t);
};
t.prototype.showIconBg = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView");
t.active = !0;
var o = [];
o.push("chocolateslime/image/dec/reset");
if ("cup" == e) for (var i = 0; i < 14; i++) o.push("chocolateslime/image/dec/icon/" + e + "/" + i); else for (i = 0; i < 15; i++) o.push("chocolateslime/image/dec/icon/" + e + "/" + i);
for (var a = 0, s = this.conteneNode.children.slice(); a < s.length; a++) {
var r = s[a];
this.iconsPool.put(r);
}
var l = this;
cc.loader.loadResArray(o, cc.SpriteFrame, function(o, n) {
for (var i = 0; i < n.length; i++) {
var a = null;
(a = l.iconsPool.size() > 0 ? l.iconsPool.get() : cc.instantiate(l.insta)).getChildByName("0").getComponent(cc.Sprite).spriteFrame = n[i];
a.parent = l.conteneNode;
var s = a.getComponent(c.default);
s.index = i;
s.isRewardLock = i % 2 == 0;
s.key = s.moduleName = e;
0 == i && (s.key = "lock");
s.init();
var r = new cc.Component.EventHandler();
r.component = "DecorateControllerHC";
r.handler = "touch";
r.target = l.node;
s.getComponent(cc.Toggle).isChecked = !1;
s.getComponent(cc.Toggle).checkEvents = [ r ];
}
t.getComponent(cc.ScrollView).scrollToTop();
});
};
t.prototype.touch = function(e) {
if (e.isChecked) {
this.node.getComponent(cc.AudioSource).play();
var t = e.node, o = t.getComponent(c.default), i = o.index, s = (e.node.convertToWorldSpaceAR(cc.v2(0, 0)), 
o.moduleName);
console.log(s);
console.log(i);
0 == i ? "cup" == s ? cc.loader.loadRes("chocolateslime/image/dec/" + s + "/0", cc.SpriteFrame, function(e, t) {
cc.find("Canvas/cup/" + s).getComponent(cc.Sprite).spriteFrame = t;
}.bind(this)) : "eye" == s || "mouth" == s || "mustache" == s ? cc.find("Canvas/cup/" + s).active = !1 : "sticker" == s && cc.find("Canvas/cup/sticker").children.forEach(function(e) {
"item" != e.name && e.destroy();
}) : "cup" == s || "eye" == s || "mouth" == s || "mustache" == s ? cc.loader.loadRes("chocolateslime/image/dec/" + s + "/" + (i - 1), cc.SpriteFrame, function(e, o) {
if ("cup" == s) {
this.cupIndex = i - 1;
var c = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
c.active = !0;
c.runAction(cc.sequence(cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}
var a = cc.find("Canvas/cup/" + s), r = cc.instantiate(a);
r.getComponent(cc.Sprite).spriteFrame = o;
r.parent = a.parent;
r.setScale(0);
var l = a.parent.convertToNodeSpaceAR(t.convertToWorldSpace(cc.v2(0, 0)));
r.setPosition(l);
r.active = !0;
var d = cc.spawn(cc.sequence(cc.moveTo(.8, cc.v2(-100, 300)), cc.moveTo(.5, cc.v2(a.getPosition()))), cc.scaleTo(1.3, a.scale));
r.runAction(cc.sequence(d, cc.callFunc(function() {
cc.find("Canvas/cup/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/cup/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/cup/decorate").setPosition(a.getPosition());
"cup" == s ? cc.find("Canvas/cup/decorate").setPosition(cc.v2(a.getPosition().x, a.getPosition().y + 200)) : cc.find("Canvas/cup/decorate").setPosition(a.getPosition());
r.destroy();
a.getComponent(cc.Sprite).spriteFrame = o;
a.active || (a.active = !0);
}.bind(this))));
}.bind(this)) : "sticker" == s && cc.loader.loadRes("chocolateslime/image/dec/sticker/" + (i - 1), cc.SpriteFrame, function(e, o) {
var n = cc.find("Canvas/cup/sticker/item"), c = cc.instantiate(n);
c.getComponent(cc.Sprite).spriteFrame = o;
c.parent = n.parent;
c.name = "item" + i;
c.setScale(0);
var s = n.parent.convertToNodeSpaceAR(t.convertToWorldSpace(cc.v2(0, 0)));
c.setPosition(s);
c.active = !0;
var r = cc.spawn(cc.sequence(cc.moveTo(.5, cc.v2(-100, 300)), cc.moveTo(.3, cc.v2(n.getPosition()))), cc.scaleTo(.5, n.scale));
c.runAction(cc.sequence(r, cc.callFunc(function() {
cc.find("Canvas/cup/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/cup/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/cup/decorate").setPosition(cc.find("Canvas/cup/sticker").getPosition());
c.getComponent(a.default).enabled = !0;
}.bind(this))));
}.bind(this));
}
};
t.prototype.nextButton = function() {
this.node.getChildByName("btn_next").getComponent(cc.Button).interactable = !1;
if (0 == this.stepNum) {
this.node.getChildByName("decScrollView").runAction(cc.sequence(cc.moveBy(.5, cc.v2(-500, 0)), cc.callFunc(function() {
this.node.getChildByName("decScrollView").opacity = 0;
this.node.getChildByName("decScrollView").setPosition(cc.v2(-268, 0));
this.node.getChildByName("decScrollView").getComponent(s.default).doShowAction();
this.showButtons();
this.showIconBg("eye");
}.bind(this))));
this.stepNum = this.stepNum + 1;
} else {
this.node.getChildByName("btn_next").active = !1;
this.node.getChildByName("btn_reset").active = !1;
cc.find("Canvas/cup/sticker").children.forEach(function(e) {
e.getComponent(a.default).enabled = !1;
});
for (var e = this.node.getChildByName("buttons").childrenCount, t = function(e) {
o.node.getChildByName("buttons").runAction(cc.sequence(cc.delayTime(.2 * e), cc.callFunc(function() {
this.node.getChildByName("buttons").children[e].active = !1;
}.bind(o))));
}, o = this, n = 0; n < e; n++) t(n);
this.node.getChildByName("decScrollView").runAction(cc.sequence(cc.moveBy(.5, cc.v2(-500, 0)), cc.callFunc(function() {
cc.find("cup/dish", this.node).getComponent(s.default).doShowAction();
}.bind(this))));
}
};
t.prototype.reset = function() {
cc.director.loadScene("decorateCupHC");
};
t.prototype.pullTouchEnd = function() {
cc.loader.loadRes("chocolateslime/image/dec/cup/" + this.cupIndex + "_0", cc.SpriteFrame, function(e, t) {
cc.find("cup/cupMask", this.node).active = !0;
cc.find("cup/cupMask1", this.node).active = !0;
cc.find("cup/cupMask", this.node).getComponent(cc.Sprite).spriteFrame = t;
cc.find("cup/cupMask1", this.node).getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("chocolateslime/image/dec/cup/" + this.cupIndex, cc.SpriteFrame, function(e, t) {
cc.find("cup/mask", this.node).getComponent(cc.Mask).spriteFrame = t;
}.bind(this));
cc.find("cup/dish/pull", this.node).getComponent(a.default).enabled = !1;
cc.find("cup/dish/pull", this.node).setPosition(cc.v2(520, 875));
cc.find("cup/dish/pull", this.node).setScale(1);
cc.find("cup/dish/pull", this.node).getComponent(cc.Animation).play("pourPull");
this.node.runAction(cc.repeat(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
cc.find("cup/dish/pull", this.node).getComponent(cc.AudioSource).play();
}.bind(this))), 3));
cc.find("cup/mask/slime0", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("cup/mask/slime0", this.node).opacity = 255;
cc.find("cup/dish", this.node).active = !1;
cc.find("cup/bowl", this.node).getComponent(s.default).doShowAction();
cc.find("cup/cupMask1", this.node).active = !1;
}.bind(this)), cc.scaleTo(.2, 1.05, .95), cc.scaleTo(.2, .95, 1.05), cc.scaleTo(.2, 1.05, .95), cc.scaleTo(.2, .95, 1.05), cc.scaleTo(.1, 1)));
};
t.prototype.bowlTouchEnd = function() {
cc.find("cup/cupMask1", this.node).active = !0;
cc.find("cup/bowl", this.node).getComponent(a.default).enabled = !1;
cc.find("cup/bowl", this.node).setPosition(cc.v2(-140, 515));
cc.find("cup/bowl", this.node).runAction(cc.sequence(cc.rotateTo(.5, 60), cc.callFunc(function() {
cc.find("cup/bowl", this.node).getComponent(cc.AudioSource).play();
cc.find("cup/bowl/sculpey", this.node).runAction(cc.scaleTo(1, 0));
cc.find("cup/bowl/pourSculpey", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("cup/mask/slime1", this.node).runAction(cc.sequence(cc.fadeTo(1, 255), cc.callFunc(function() {
cc.find("cup/bowl/pourSculpey", this.node).active = !1;
cc.find("cup/dish", this.node).active = !1;
cc.find("cup/decorateParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("cup/decorateParticle", this.node).getComponent(cc.AudioSource).play();
}.bind(this))));
}.bind(this)), cc.delayTime(1), cc.moveBy(.5, cc.v2(-600, 0)), cc.callFunc(function() {
cc.find("cup/bowl", this.node).active = !1;
this.node.getChildByName("cup").runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, -225)), cc.scaleTo(.5, .9)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
var e = cc.instantiate(this.node.getChildByName("cup"));
e.setScale(1);
e.parent = cc.find("cupCopy");
e.getComponent(s.default).enabled = !1;
r.default.changeScene("chooseHC");
}.bind(this))));
}.bind(this))));
};
__decorate([ u(cc.Label) ], t.prototype, "label", void 0);
__decorate([ u(cc.Prefab) ], t.prototype, "insta", void 0);
__decorate([ u(cc.Node) ], t.prototype, "conteneNode", void 0);
__decorate([ u ], t.prototype, "text", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../common/Script/IconItemHC": "IconItemHC",
"../common/Script/MoveInHC": "MoveInHC",
"../common/Script/RewardManagerHC": "RewardManagerHC",
"../common/Script/codebase/SpriteDrag/SpriteDragHC": "SpriteDragHC",
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC",
"../common/Script/codebase/utils/CocosHelperHC": "CocosHelperHC"
} ],
DecorateSlimeGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1973CmFzJHV5sA2jqxO90k", "DecorateSlimeGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/ads/IconItemGL"), i = e("./ColorTouchEventGL"), c = e("../common/Script/codebase/utils/CocosHelperGL"), a = e("../common/Script/compoent/MoveInGL"), s = e("./DataConfigGL"), r = e("./PopupComponetGL"), l = e("../common/Script/codebase/TransitionSceneGL"), d = cc._decorator, u = d.ccclass, p = d.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.insta = null;
t.conteneNode = null;
t.iconsPool = null;
t.foodName = null;
t.photoNode = null;
t.filePath = null;
t.food = {
name: "snowCone",
index: 1
};
return t;
}
t.prototype.onLoad = function() {
if (null == this.iconsPool) {
this.iconsPool = new cc.NodePool();
for (var e = 0; e < 15; e++) this.iconsPool.put(cc.instantiate(this.insta));
}
this.foodName = "galaxySlime";
cc.find("Canvas/" + this.foodName).getComponent(a.default).actionCallBack = function() {
cc.find("Canvas/" + this.foodName + "/write").getComponent(a.default).doShowAction();
}.bind(this);
cc.find("Canvas/" + this.foodName + "/write").getComponent(a.default).actionCallBack = function() {
cc.find("Canvas/" + this.foodName + "/write").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/tipClick").active = !0;
}.bind(this);
};
t.prototype.writeBtn = function(e) {
cc.find("Canvas/tipClick").active = !1;
e.target.getComponent(cc.Button).interactable = !1;
cc.find("Canvas/write/mask").removeAllChildren();
this.node.getChildByName("mask").active = !0;
this.node.getChildByName("write").active = !0;
this.node.getChildByName("write").getComponent(cc.AudioSource).play();
this.node.getChildByName("write").runAction(cc.sequence(cc.scaleTo(.5, 1), cc.callFunc(function() {
this.showIconBg("color");
}.bind(this))));
};
t.prototype.writeClose = function() {
c.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView").active = !1;
this.node.getChildByName("write").getComponent(cc.AudioSource).play();
this.node.getChildByName("write").runAction(cc.sequence(cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.getChildByName("write").active = !1;
this.node.getChildByName("mask").active = !1;
cc.find("Canvas/" + this.foodName + "/write").getComponent(cc.Button).interactable = !0;
}.bind(this))));
};
t.prototype.writeOk = function() {
var e = this;
this.node.getChildByName("write").getComponent(cc.AudioSource).play();
c.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView").active = !1;
cc.find("Canvas/" + this.foodName + "/write").removeAllChildren();
c.CocosHelper.captureNode(cc.find("Canvas/write/mask")).then(function(t) {
var o = new cc.Node();
cc.log(t);
o.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(t);
cc.find("Canvas/" + e.foodName + "/write").addChild(o);
o.getComponent(cc.Sprite).srcBlendFactor = cc.macro.BlendFactor.ONE;
o.setScale(1.35);
e.node.getChildByName("write").runAction(cc.sequence(cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.getChildByName("write").active = !1;
this.node.getChildByName("mask").active = !1;
cc.find("Canvas/decorate").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/decorate").getComponent(cc.AudioSource).play();
cc.find("Canvas/" + this.foodName + "/write").getComponent(cc.Button).interactable = !0;
var e = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}.bind(e))));
});
};
t.prototype.showIconBg = function(e) {
var t = new Map();
t.set("color", 15);
t.set("galaxySlime", 15);
var o = c.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView");
o.active = !0;
o.opacity = 0;
o.getComponent(a.default).doShowAction();
var i = [];
i.push("galaxyslime/image/icon/reset");
for (var s = 0; s < t.get(e); s++) i.push("galaxyslime/image/icon/" + e + "/" + s);
for (var r = 0, l = this.conteneNode.children.slice(); r < l.length; r++) {
var d = l[r];
this.iconsPool.put(d);
}
var u = this;
cc.loader.loadResArray(i, cc.SpriteFrame, function(t, i) {
cc.log(t);
for (var c = 0; c < i.length; c++) {
var a = null;
(a = u.iconsPool.size() > 0 ? u.iconsPool.get() : cc.instantiate(u.insta)).getChildByName("0").getComponent(cc.Sprite).spriteFrame = i[c];
cc.loader.setAutoReleaseRecursively(i[c], !0);
a.parent = u.conteneNode;
a.name = e;
var s = a.getComponent(n.default);
s.index = c;
s.isRewardLock = c % 2 == 0;
s.key = s.moduleName = e;
0 == c && (s.key = "lock");
s.init();
var r = new cc.Component.EventHandler();
r.component = "DecorateSlimeGL";
r.handler = "touch";
r.target = u.node;
s.getComponent(cc.Toggle).isChecked = !1;
s.getComponent(cc.Toggle).checkEvents = [ r ];
}
o.getComponent(cc.ScrollView).scrollToLeft();
});
};
t.prototype.touch = function(e) {
cc.log(e);
cc.find("Canvas/write/mask").getComponent(i.default).destroyTouchEvent();
if (e.isChecked) {
this.node.getComponent(cc.AudioSource).play();
var t = e.node, o = t.getComponent(n.default).index, c = (e.node.convertToWorldSpaceAR(cc.v2(0, 0)), 
e.node.name);
console.log(c);
console.log(o);
if (0 == o) if ("color" == c) cc.find("Canvas/write/mask").removeAllChildren(); else {
this.node.getChildByName("btn_next1").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/" + c).children.forEach(function(e) {
"stickerCopy" == e.name && e.destroy();
});
} else if ("color" == c) cc.loader.loadRes("galaxyslime/image/" + c + "/" + (o - 1), cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.log(e);
var o = new cc.Node();
o.addComponent(cc.Sprite).spriteFrame = t;
o.getComponent(cc.Sprite).srcBlendFactor = cc.macro.BlendFactor.ONE;
cc.find("Canvas/write/mask").getComponent(i.default).init(o);
}.bind(this)); else {
this.node.getChildByName("btn_next1").active = !0;
this.node.getChildByName("btn_next1").getComponent(cc.Button).interactable = !1;
cc.loader.loadRes("galaxyslime/image/" + c + "/" + (o - 1), cc.SpriteFrame, function(e, o) {
cc.loader.setAutoReleaseRecursively(o, !0);
cc.log(e);
var n = cc.find("Canvas/" + c + "/sticker"), i = cc.instantiate(n);
i.active = !0;
i.getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoReleaseRecursively(o, !0);
i.parent = n.parent;
i.name = "stickerCopy";
i.setScale(0);
var a = n.parent.convertToNodeSpaceAR(t.convertToWorldSpace(cc.v2(0, 0)));
i.setPosition(a);
var s = cc.spawn(cc.sequence(cc.moveTo(.8, cc.v2(-100, 300)), cc.moveTo(.5, cc.v2(n.getPosition()))), cc.scaleTo(1.3, n.scale));
i.runAction(cc.sequence(s, cc.callFunc(function() {
this.node.getChildByName("btn_next1").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.find("Canvas/decorateParticle").setPosition(e);
cc.find("Canvas/finger1") && (cc.find("Canvas/finger1").active = !0);
}.bind(this))));
}.bind(this));
}
}
};
t.prototype.showSticker = function() {
this.node.getChildByName("btn_next").active = !1;
cc.find("Canvas/" + this.foodName + "/write").getComponent(cc.Button).interactable = !1;
this.showIconBg(this.foodName);
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
c.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
e.photoNode.scale = 1.1 * e.photoNode.scale;
e.photoNode.setPosition(cc.v2(0, -50));
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(r.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(r.default).hidePopup();
}.bind(this))));
e ? t.getComponent(r.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(r.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.enterDisplayScence = function() {
var e = this;
c.CocosHelper.captureNodeSize(cc.find("Canvas/" + this.foodName), cc.view.getVisibleSize().width, cc.view.getVisibleSize().height).then(function(t) {
s.default.getInstance().setTexture(t);
console.log(s.default.getInstance().getChangeIndex());
if (null != s.default.getInstance().getChangeIndex()) {
var o = s.default.getInstance().getChangeIndex();
c.CocosHelper.saveImageByTexture(t, "" + e.foodName + o, function() {
this.food.name = "" + this.foodName + o;
this.food.index = o;
s.default.getInstance().changeFoodByIndex(o, this.food);
console.log("dsferf" + o);
l.default.changeScene("displaySlimeGL", 12);
}.bind(e));
} else {
var n = s.default.getInstance().getFoodIndex();
c.CocosHelper.saveImageByTexture(t, "" + e.foodName + n, function() {
this.food.name = "" + this.foodName + n;
this.food.index = n;
s.default.getInstance().addFood(this.food);
console.log("retret" + n);
l.default.changeScene("displaySlimeGL", 12);
}.bind(e));
}
});
};
t.prototype.stickerTouchMOve = function() {
cc.find("Canvas/finger1") && cc.find("Canvas/finger1").destroy();
};
__decorate([ p(cc.Prefab) ], t.prototype, "insta", void 0);
__decorate([ p(cc.Node) ], t.prototype, "conteneNode", void 0);
return t = __decorate([ u ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../common/Script/ads/IconItemGL": "IconItemGL",
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./ColorTouchEventGL": "ColorTouchEventGL",
"./DataConfigGL": "DataConfigGL",
"./PopupComponetGL": "PopupComponetGL"
} ],
DecorateSlimeRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7773CmFzJHV5sA2jqxO90k", "DecorateSlimeRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/ads/IconItemRP"), i = e("../common/Script/codebase/utils/CocosHelperRP"), c = e("../common/Script/compoent/MoveInRP"), a = e("./SprinkleTouchEventRP"), s = e("./MyMoveInRP"), r = e("./DataConfigRP"), l = e("../common/Script/codebase/TransitionSceneRP"), d = cc._decorator, u = d.ccclass, p = d.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.insta = null;
t.conteneNode = null;
t.iconsPool = null;
return t;
}
t.prototype.onLoad = function() {
if (null == this.iconsPool) {
this.iconsPool = new cc.NodePool();
for (var e = 0; e < 20; e++) this.iconsPool.put(cc.instantiate(this.insta));
}
cc.find("Canvas/poop").getComponent(s.default).actionCallBack = function() {
i.CocosHelper.findNode(cc.Canvas.instance.node, "btnScrollView").active = !0;
i.CocosHelper.findNode(cc.Canvas.instance.node, "btnScrollView").getComponent(cc.ScrollView).scrollToBottom();
i.CocosHelper.findNode(cc.Canvas.instance.node, "btnScrollView").getComponent(cc.ScrollView).scrollToTop(1);
}.bind(this);
i.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView").getComponent(c.default).actionCallBack = function() {
this.activateToggle();
i.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView").getComponent(cc.ScrollView).scrollToTop(1);
}.bind(this);
};
t.prototype.singleToggle = function(e, t) {
i.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView").opacity = 0;
var o = e.node;
this.node.stopAllActions;
o.stopAllActions();
o.setScale(1);
o.runAction(cc.sequence(cc.scaleTo(.2, 1.1, .9), cc.scaleTo(.2, .9, 1.1), cc.scaleTo(.2, 1.05, .95), cc.scaleTo(.2, .95, 1.05), cc.scaleTo(.1, 1, 1)));
if (e.isChecked) {
this.showIconBg(t);
this.sleepToggle();
}
};
t.prototype.showIconBg = function(e) {
var t = new Map();
t.set("sprinkle", 15);
t.set("horn", 15);
t.set("eye", 15);
t.set("mouth", 15);
t.set("hair", 15);
var o = i.CocosHelper.findNode(cc.Canvas.instance.node, "decScrollView");
o.active = !0;
o.opacity = 0;
o.getComponent(s.default).doShowAction();
o.getComponent(cc.ScrollView).scrollToBottom();
var c = [];
c.push("rainbowpoop/image/icon/reset");
for (var a = 0; a < t.get(e); a++) c.push("rainbowpoop/image/icon/" + e + "/" + a);
for (var r = 0, l = this.conteneNode.children.slice(); r < l.length; r++) {
var d = l[r];
this.iconsPool.put(d);
}
var u = this;
cc.loader.loadResArray(c, cc.SpriteFrame, function(t, o) {
cc.log(t);
for (var i = 0; i < o.length; i++) {
var c = null;
(c = u.iconsPool.size() > 0 ? u.iconsPool.get() : cc.instantiate(u.insta)).getChildByName("0").getComponent(cc.Sprite).spriteFrame = o[i];
cc.loader.setAutoReleaseRecursively(o[i], !0);
cc.loader.setAutoReleaseRecursively(o[i], !0);
c.parent = u.conteneNode;
c.name = e;
var a = c.getComponent(n.default);
a.index = i;
a.isRewardLock = i % 2 == 0;
a.key = a.moduleName = e + "15";
0 == i && (a.key = "lock");
a.init();
var s = new cc.Component.EventHandler();
s.component = "DecorateSlimeRP";
s.handler = "touch";
s.target = u.node;
a.getComponent(cc.Toggle).isChecked = !1;
a.getComponent(cc.Toggle).checkEvents = [ s ];
}
});
};
t.prototype.touch = function(e) {
cc.log(e);
cc.find("Canvas/poop/decorate/sprinkleMask").getComponent(a.default).destroyTouchEvent();
if (e.isChecked) {
this.node.getComponent(cc.AudioSource).play();
var t = e.node, o = t.getComponent(n.default).index, i = (e.node.convertToWorldSpaceAR(cc.v2(0, 0)), 
e.node.name);
console.log(i);
console.log(o);
if (0 == o) if ("sprinkle" == i) {
cc.find("Canvas/poop/decorate/sprinkleMask").removeAllChildren();
cc.find("Canvas/poop/decorate/glitter").active = !1;
} else cc.find("Canvas/poop/decorate/" + i).active = !1; else if ("sprinkle" == i) cc.loader.loadRes("rainbowpoop/prefab/" + i + (o - 1), cc.Prefab, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.log(e);
var o = cc.instantiate(t);
cc.find("Canvas/poop/decorate/sprinkleMask").getComponent(a.default).init(o);
cc.find("Canvas/tipClick").active = !0;
}.bind(this)); else {
this.node.getChildByName("btn_next").getComponent(cc.Button).interactable = !1;
cc.loader.loadRes("rainbowpoop/image/" + i + "/" + (o - 1), cc.SpriteFrame, function(e, o) {
cc.loader.setAutoReleaseRecursively(o, !0);
cc.log(e);
var n = cc.find("Canvas/poop/decorate/" + i), c = cc.instantiate(n);
c.active = !0;
c.zIndex = 1;
c.getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoReleaseRecursively(o, !0);
c.parent = n.parent;
c.setScale(0);
var a = n.parent.convertToNodeSpaceAR(t.convertToWorldSpace(cc.v2(0, 0)));
c.setPosition(a);
var s = cc.spawn(cc.sequence(cc.moveTo(.3, cc.v2(-100, 300)), cc.moveTo(.5, cc.v2(n.getPosition()))), cc.scaleTo(.8, n.scale));
c.runAction(cc.sequence(s, cc.callFunc(function() {
n.active = !0;
n.getComponent(cc.Sprite).spriteFrame = o;
this.node.getChildByName("btn_next").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/decorateParticle").getComponent(cc.AudioSource).play();
var e = this.node.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.find("Canvas/decorateParticle").setPosition(e);
c.destroy();
}.bind(this))));
}.bind(this));
}
}
};
t.prototype.activateToggle = function() {
cc.find("Canvas/btnScrollView/view/content").children.forEach(function(e) {
e.getComponent(cc.Toggle).interactable = !0;
});
};
t.prototype.sleepToggle = function() {
cc.find("Canvas/btnScrollView/view/content").children.forEach(function(e) {
e.getComponent(cc.Toggle).interactable = !1;
});
};
t.prototype.enterNextScene = function() {
i.CocosHelper.captureNodeSize(cc.find("Canvas/poop/decorate"), cc.view.getVisibleSize().width, cc.view.getVisibleSize().height).then(function(e) {
r.default.getInstance().setTexture(e);
l.default.changeScene("playSlimeRP", 7);
});
};
t.prototype.reset = function() {
cc.find("Canvas/btn_reset").getComponent(cc.AudioSource).play();
cc.director.loadScene("decorateSlimeRP");
};
__decorate([ p(cc.Prefab) ], t.prototype, "insta", void 0);
__decorate([ p(cc.Node) ], t.prototype, "conteneNode", void 0);
return t = __decorate([ u ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../common/Script/ads/IconItemRP": "IconItemRP",
"../common/Script/codebase/TransitionSceneRP": "TransitionSceneRP",
"../common/Script/codebase/utils/CocosHelperRP": "CocosHelperRP",
"../common/Script/compoent/MoveInRP": "MoveInRP",
"./DataConfigRP": "DataConfigRP",
"./MyMoveInRP": "MyMoveInRP",
"./SprinkleTouchEventRP": "SprinkleTouchEventRP"
} ],
DisplayControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b191fmzBZJDQoy61012fNzV", "DisplayControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperGL"), i = e("./DataConfigGL"), c = e("../common/Script/ads/showLaodingGL"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.n = 0;
t.pos = null;
t.texture = null;
return t;
}
t.prototype.onLoad = function() {
var e = i.default.getInstance().getFoodData(), t = e.length, o = t - 1;
if (null != i.default.getInstance().getChangeIndex()) {
o = i.default.getInstance().getChangeIndex();
console.log("mmmm" + o);
}
for (var c = function(t) {
n.CocosHelper.getImage(e[t].name).then(function(n) {
if (n) {
var i = t % 9;
cc.find("Canvas/guizi/slimes/" + i + "/food").active = t != o;
cc.find("Canvas/guizi/slimes/" + i + "/plus").active = !1;
cc.find("Canvas/guizi/slimes/" + i + "/food").getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(n);
cc.find("Canvas/guizi/slimes/" + i + "/food/btn").getComponent(cc.Button).clickEvents[0].customEventData = e[t].index;
}
});
}, a = 0; a < t; a++) c(a);
var s = i.default.getInstance().getTexture();
if (s) {
cc.find("Canvas/food").active = !0;
cc.find("Canvas/bg").getComponent(cc.AudioSource).play();
var r = new cc.Node();
r.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(s);
cc.find("Canvas/food").addChild(r);
r.setScale(0);
var l = i.default.getInstance().getFoodData().length, d = i.default.getInstance().getChangeIndex();
this.n = null != d ? d % 9 : (l - 1) % 9;
this.pos = cc.find("Canvas/food").convertToNodeSpaceAR(cc.find("Canvas/guizi/slimes/" + this.n).convertToWorldSpaceAR(cc.v2(0, 0)));
cc.find("Canvas/food").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
r.runAction(cc.scaleTo(1, 1));
i.default.getInstance().setChangeIndex(null);
console.log("aaaaaaa    " + this.n);
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
cc.find("Canvas/food/light").active = !1;
}.bind(this)), cc.spawn(cc.moveTo(1, this.pos), cc.scaleTo(1, 0)), cc.callFunc(function() {
cc.find("Canvas/guizi/slimes/" + this.n + "/food").active = !0;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}.bind(this))));
}
};
t.prototype.showFoods = function() {};
t.prototype.enterNextScence = function() {
cc.find("Canvas").getComponent(cc.AudioSource).play();
cc.director.loadScene("makeSlimeGL");
};
t.prototype.enterHomeScence = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !1;
c.default.getInstance().loadingDoneCallback = function() {
c.default.getInstance().loadingDoneCallback = null;
for (var e = i.default.getInstance().getFoodData().length, t = 0; t < 9 - e; t++) {
cc.find("Canvas/guizi/slimes/" + (e + t) + "/plus").active = !0;
cc.find("Canvas/guizi/slimes/" + (e + t) + "/plus/plus").runAction(cc.sequence(cc.delayTime(1 + 1.8 * t), cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1), cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}
}.bind(this);
c.default.getInstance().showAds(!1);
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/ads/showLaodingGL": "showLaodingGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"./DataConfigGL": "DataConfigGL"
} ],
DollTouchEventCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14ffAk7BhLooXIYtAmJM+t", "DollTouchEventCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.audioNode = null;
t.isScale = !0;
t.isXi = !0;
t.isha1 = !0;
t.count = 0;
return t;
}
t.prototype.init = function() {
this.registerTouchEvent();
var e = this.node.getChildByName("slime0").scaleX;
cc.find("Canvas/slime").stopAllActions();
this.node.stopAllActions();
this.count = this.count + 1;
if (this.isXi) {
this.node.runAction(cc.scaleTo(2, 1));
cc.find("Canvas/slime").runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
this.node.getChildByName("slime0").active = !0;
this.node.getChildByName("slime0").scaleY = 0;
this.node.getChildByName("slime0").runAction(cc.scaleTo(.2, e, 1));
cc.find("Canvas").getComponent(cc.AudioSource).play();
}.bind(this)), cc.scaleTo(2, .2), cc.callFunc(function() {
cc.find("Canvas/slime").opacity = 0;
this.node.getChildByName("slime0").active = !1;
this.node.getChildByName("down1").active = !1;
this.node.getChildByName("up1").active = !1;
this.node.getChildByName("down2").active = !0;
this.node.getChildByName("up2").active = !0;
cc.find("Canvas").getComponent(cc.AudioSource).stop();
cc.find("Canvas/flowerStar").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/flowerStar").getComponent(cc.AudioSource).play();
cc.find("Canvas/ha1").getComponent(cc.AudioSource).play();
this.destroyTouchEvent();
this.node.getComponent(cc.Button).interactable = !0;
this.isXi = !1;
}.bind(this))));
} else {
this.node.runAction(cc.scaleTo(2, .8));
cc.find("Canvas/slime").runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
this.node.getChildByName("slime0").scaleY = 1;
this.node.getChildByName("slime0").scaleX = e;
this.node.getChildByName("slime0").active = !0;
cc.find("Canvas/slime").opacity = 255;
}.bind(this)), cc.scaleTo(2, .6), cc.callFunc(function() {
this.node.getChildByName("slime0").active = !1;
this.node.getChildByName("down1").active = !0;
this.node.getChildByName("up1").active = !0;
this.node.getChildByName("down2").active = !1;
this.node.getChildByName("up2").active = !1;
cc.find("Canvas/bg").getComponent(cc.AudioSource).stop();
cc.find("Canvas/flowerStar").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/flowerStar").getComponent(cc.AudioSource).play();
cc.find("Canvas/ha2").getComponent(cc.AudioSource).play();
this.node.getComponent(cc.Button).interactable = !0;
this.destroyTouchEvent();
this.isXi = !0;
}.bind(this))));
}
cc.director.getActionManager().pauseTargets([ cc.find("Canvas/slime"), this.node ]);
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.find("Canvas/finger") && cc.find("Canvas/finger").destroy();
this.node.getChildByName("slime0").active = !0;
cc.find("Canvas/heartFullColor").getComponent(cc.ParticleSystem).resetSystem();
cc.director.getActionManager().resumeTargets([ cc.find("Canvas/slime"), this.node ]);
if (this.isXi) {
this.node.getComponent(cc.AudioSource).play();
this.node.getChildByName("slime0").scaleY = 0;
var e = this.node.getChildByName("slime0").scaleX;
this.node.getChildByName("slime0").runAction(cc.scaleTo(.2, e, 1));
} else {
cc.find("Canvas/bg").getComponent(cc.AudioSource).play();
cc.log(cc.find("Canvas/slime"));
}
};
t.prototype.onClick = function() {
this.node.getComponent(cc.Button).interactable = !1;
cc.find("Canvas").getComponent(cc.AudioSource).play();
this.isXi ? this.node.runAction(cc.sequence(cc.repeat(cc.sequence(cc.scaleBy(.2, 1.05), cc.scaleTo(.2, .8)), 2), cc.callFunc(function() {
this.init();
}.bind(this)))) : this.node.runAction(cc.sequence(cc.repeat(cc.sequence(cc.moveBy(.2, cc.v2(0, 10)), cc.moveBy(.2, cc.v2(0, -10))), 2), cc.callFunc(function() {
this.init();
}.bind(this))));
};
t.prototype.onTouchMove = function(e) {};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getChildByName("slime0").active = !1;
cc.director.getActionManager().pauseTargets([ cc.find("Canvas/slime"), this.node ]);
this.node.getComponent(cc.AudioSource).stop();
cc.find("Canvas/bg").getComponent(cc.AudioSource).stop();
cc.find("Canvas/heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
DownSubGameMG: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0efc6xjkQZNIKbsR/4QguoY", "DownSubGameMG");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.datalist = [];
return t;
}
o = t;
t.getInstance = function() {
null == o._instance && (o._instance = new o());
return o._instance;
};
t.prototype.start = function() {};
t.prototype.downZip = function(e) {
var t = "https://unnicornfallcn.oss-cn-chengdu.aliyuncs.com/" + e + ".zip", o = cc.path.join(jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/", "UnicornFoodHall", e, "/"), n = cc.path.join(o, "game.zip");
jsb.fileUtils.isDirectoryExist(o) && jsb.fileUtils.removeDirectory(o);
jsb.fileUtils.createDirectory(o);
console.log("测试下载----zip");
console.log("url----\x3e" + t);
var i = new jsb.Downloader();
i.setOnTaskError(function(e, t, o, n) {
console.log("errorStr = " + (n || "") + "\n");
});
i.setOnTaskProgress(function(e, t, o, n) {
var i = "下载大小 = " + t + ",总大小 = " + o + ",预期总大小 = " + n + ",进度 = " + Math.floor(o / n * 1e4) / 100 + "%\n";
console.log(i);
});
i.setOnFileTaskSuccess(function(e) {
console.log("------------------download success\n");
});
i.createDownloadFileTask(t, n, "download_test");
};
var o;
return t = o = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
DragController1GL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19a344AGFEEKrxKw5yC/Lh", "DragController1GL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInGL"), i = e("../common/Script/codebase/TransitionSceneGL"), c = e("../common/Script/codebase/utils/CocosHelperGL"), a = e("./DataConfigGL"), s = e("./TipManagerGL"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNode = null;
t.pull0 = null;
t.pull1 = null;
t.batter = null;
t.touchNum = 0;
t.isTouchIn = !1;
t.isTouchLocalPos = cc.v2();
t.isMovePull0 = !1;
t.isMovePull1 = !1;
t.currentNode = null;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("btns").children.forEach(function(e) {
"drag" == e.name ? e.getChildByName("yes").active = !0 : e.getChildByName("yes").active = !1;
});
this.touchNode.getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("arrow_top").active = !0;
}.bind(this);
this.registerTouchEvent();
a.default.getInstance().setDrag(!1);
if (!(a.default.getInstance().getDrag() || a.default.getInstance().getClick() || a.default.getInstance().getPlay() || a.default.getInstance().getSlap())) {
c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
}
};
t.prototype.registerTouchEvent = function() {
this.touchNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.touchNode.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
var t = this.node.getChildByName("slime").getComponent(cc.PolygonCollider), o = this.node.getChildByName("slime").convertToNodeSpaceAR(e.getLocation());
if (cc.Intersection.pointInPolygon(o, t.points)) {
this.pull0.getComponent(cc.AudioSource).play();
console.log("isIn");
this.isTouchIn = !0;
this.isTouchLocalPos = e.getLocation();
}
};
t.prototype.onTouchMove = function(e) {
this.node.getChildByName("arrow_top").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.convertToNodeSpaceAR(t[0].getLocation());
if (this.isTouchIn) {
if (!this.isMovePull1) {
this.isMovePull1 = !0;
this.currentNode = this.pull1;
this.currentNode.position = this.currentNode.parent.convertToNodeSpaceAR(this.isTouchLocalPos);
this.currentNode.stopAllActions();
this.currentNode.scaleY = 0;
}
if (!this.isMovePull0) {
this.isMovePull0 = !0;
this.currentNode = this.pull0;
this.currentNode.position = this.currentNode.parent.convertToNodeSpaceAR(this.isTouchLocalPos);
this.currentNode.stopAllActions();
this.currentNode.scaleY = 0;
}
var i = n.sub(o), c = this.currentNode.scaleY + i.y / 10 / 500;
c > 1 && (c = 1);
c < 0 && (c = 0);
this.currentNode.scaleY = c;
}
};
t.prototype.onTouchEnd = function(e) {
this._touchEnd(e);
};
t.prototype.onTouchCancle = function(e) {
this._touchEnd(e);
};
t.prototype._touchEnd = function(e) {
this.currentNode.runAction(cc.scaleTo(.5, 1, 0));
this.currentNode = null;
this.isTouchIn = !1;
this.isMovePull1 && (this.isMovePull1 = !1);
this.isMovePull0 && (this.isMovePull0 = !1);
var t = e.getTouches(), o = t[0].getStartLocation(), n = t[0].getLocation().sub(o);
cc.log(n.y);
this.touchNode.setScale(1);
this.touchNode.stopAllActions();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.touchNode.getComponent(cc.AudioSource).play();
this.touchNode.runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
if (n.y > 50) {
this.touchNum = this.touchNum + 1;
this.touchNum % 3 == 0 && s.default.getInstance().jumpTips();
cc.find("slime0", this.node).active = !0;
var e = 50 + 430 * Math.random(), t = 320 * Math.random();
cc.find("slime0", this.node).position = this.node.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(e, t)));
cc.find("slime0", this.node).stopAllActions();
cc.find("slime0", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("slime0", this.node).active = !1;
}.bind(this))));
cc.find("slime1", this.node).active = !0;
var o = 240 - 480 * Math.random(), i = 320 * -Math.random();
cc.find("slime1", this.node).position = this.node.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(o, i)));
cc.find("slime1", this.node).stopAllActions();
cc.find("slime1", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("slime1", this.node).active = !1;
}.bind(this))));
var c = -50 - 430 * Math.random(), a = 320 * Math.random();
cc.find("slime2", this.node).position = this.node.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(c, a)));
cc.find("slime2", this.node).stopAllActions();
cc.find("slime2", this.node).active = !0;
cc.find("slime2", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("slime2", this.node).active = !1;
}.bind(this))));
}
}.bind(this))));
};
t.prototype.enterNextScence = function() {
a.default.getInstance().setClick(!0);
a.default.getInstance().setDrag(!0);
a.default.getInstance().setSlap(!0);
a.default.getInstance().setPlay(!0);
i.default.changeScene("packSlimeGL");
};
__decorate([ d(cc.Node) ], t.prototype, "touchNode", void 0);
__decorate([ d(cc.Node) ], t.prototype, "pull0", void 0);
__decorate([ d(cc.Node) ], t.prototype, "pull1", void 0);
__decorate([ d(cc.AudioClip) ], t.prototype, "batter", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./DataConfigGL": "DataConfigGL",
"./TipManagerGL": "TipManagerGL"
} ],
DragController1MS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c4ba344AGFEEKrxKw5yC/Lh", "DragController1MS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/compoent/MoveInMS"), i = e("./TipManagerMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNode = null;
t.pull0 = null;
t.pull1 = null;
t.batter = null;
t.isTouchIn = !1;
t.isTouchLocalPos = cc.v2();
t.isMovePull0 = !1;
t.isMovePull1 = !1;
t.currentNode = null;
return t;
}
t.prototype.init = function() {
this.destroyTouchEvent();
this.node.getChildByName("arrow_top").active = !1;
cc.find("slime/pull0", this.node).setScale(cc.v2(1, 0));
cc.find("slime/pull1", this.node).setScale(cc.v2(1, 0));
cc.find("slime0", this.node).active = !1;
cc.find("slime1", this.node).active = !1;
cc.find("slime2", this.node).active = !1;
this.touchNode.stopAllActions();
this.touchNode.setScale(1);
this.touchNode.setPosition(cc.v2(0, 0));
this.touchNode.opacity = 0;
this.touchNode.getComponent(n.default).doShowAction();
this.touchNode.getComponent(n.default).actionCallBack = function() {
this.registerTouchEvent();
this.node.getChildByName("arrow_top").active = !0;
}.bind(this);
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.touchNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.touchNode.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
this.pull0.getComponent(cc.AudioSource).play();
var t = this.node.getChildByName("slime").getComponent(cc.PolygonCollider), o = this.node.getChildByName("slime").convertToNodeSpaceAR(e.getLocation());
if (cc.Intersection.pointInPolygon(o, t.points)) {
console.log("isIn");
this.isTouchIn = !0;
this.isTouchLocalPos = e.getLocation();
}
};
t.prototype.onTouchMove = function(e) {
this.node.getChildByName("arrow_top").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.convertToNodeSpaceAR(t[0].getLocation());
if (this.isTouchIn) {
if (!this.isMovePull1) {
this.isMovePull1 = !0;
this.currentNode = this.pull1;
this.currentNode.position = this.currentNode.parent.convertToNodeSpaceAR(this.isTouchLocalPos);
this.currentNode.stopAllActions();
this.currentNode.scaleY = 0;
}
if (!this.isMovePull0) {
this.isMovePull0 = !0;
this.currentNode = this.pull0;
this.currentNode.position = this.currentNode.parent.convertToNodeSpaceAR(this.isTouchLocalPos);
this.currentNode.stopAllActions();
this.currentNode.scaleY = 0;
}
var i = n.sub(o), c = this.currentNode.scaleY + i.y / 10 / 500;
c > 1 && (c = 1);
c < 0 && (c = 0);
this.currentNode.scaleY = c;
}
};
t.prototype.onTouchEnd = function(e) {
this._touchEnd(e);
};
t.prototype.onTouchCancle = function(e) {
this._touchEnd(e);
};
t.prototype._touchEnd = function(e) {
var t = this.currentNode;
t && t.runAction(cc.scaleTo(.5, 1, 0));
this.currentNode = null;
this.isTouchIn = !1;
this.isMovePull1 && (this.isMovePull1 = !1);
this.isMovePull0 && (this.isMovePull0 = !1);
var o = e.getTouches(), n = o[0].getStartLocation(), c = o[0].getLocation().sub(n);
cc.log(c.y);
this.touchNode.setScale(1);
this.touchNode.stopAllActions();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.touchNode.getComponent(cc.AudioSource).play();
this.touchNode.runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
if (c.y > 50) {
i.default.getInstance().jumpTips();
cc.find("slime0", this.node).active = !0;
var e = 50 + 430 * Math.random(), t = 320 * Math.random();
cc.find("slime0", this.node).position = this.node.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(e, t)));
cc.find("slime0", this.node).stopAllActions();
cc.find("slime0", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("slime0", this.node).active = !1;
}.bind(this))));
cc.find("slime1", this.node).active = !0;
var o = 240 - 480 * Math.random(), n = 320 * -Math.random();
cc.find("slime1", this.node).position = this.node.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(o, n)));
cc.find("slime1", this.node).stopAllActions();
cc.find("slime1", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("slime1", this.node).active = !1;
}.bind(this))));
var a = -50 - 430 * Math.random(), s = 320 * Math.random();
cc.find("slime2", this.node).position = this.node.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(a, s)));
cc.find("slime2", this.node).stopAllActions();
cc.find("slime2", this.node).active = !0;
cc.find("slime2", this.node).runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("slime2", this.node).active = !1;
}.bind(this))));
}
}.bind(this))));
};
__decorate([ s(cc.Node) ], t.prototype, "touchNode", void 0);
__decorate([ s(cc.Node) ], t.prototype, "pull0", void 0);
__decorate([ s(cc.Node) ], t.prototype, "pull1", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "batter", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./TipManagerMS": "TipManagerMS"
} ],
DragEventListenerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "36a04UcQGBC77SKBne4IvSb", "DragEventListenerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerCB");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerCB": "EventListenerCB"
} ],
DragEventListenerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14dfvAIcZKEL/2s995aXMA", "DragEventListenerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerCE");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerCE": "EventListenerCE"
} ],
DragEventListenerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2204UcQGBC77SKBne4IvSb", "DragEventListenerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerCS");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerCS": "EventListenerCS"
} ],
DragEventListenerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21dfvAIcZKEL/2s995aXMA", "DragEventListenerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerFS");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerFS": "EventListenerFS"
} ],
DragEventListenerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19dfvAIcZKEL/2s995aXMA", "DragEventListenerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerGL");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerGL": "EventListenerGL"
} ],
DragEventListenerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5226ezoQqZEApkBMxRUXTIB", "DragEventListenerGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerGS");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerGS": "EventListenerGS"
} ],
DragEventListenerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1104UcQGBC77SKBne4IvSb", "DragEventListenerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerHC");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerHC": "EventListenerHC"
} ],
DragEventListenerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d62aeFkEKFF2rg2FiAUp7ul", "DragEventListenerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerMS");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerMS": "EventListenerMS"
} ],
DragEventListenerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77dfvAIcZKEL/2s995aXMA", "DragEventListenerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerRP");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerRP": "EventListenerRP"
} ],
DragEventListenerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1204UcQGBC77SKBne4IvSb", "DragEventListenerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerRS");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerRS": "EventListenerRS"
} ],
DragEventListenerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1304UcQGBC77SKBne4IvSb", "DragEventListenerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListenerSD");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListenerSD": "EventListenerSD"
} ],
DragEventListener: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a47dfvAIcZKEL/2s995aXMA", "DragEventListener");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../EventListener");
(function(e) {
e[e.TouchDown = 0] = "TouchDown";
e[e.DragBegin = 1] = "DragBegin";
e[e.Draging = 2] = "Draging";
e[e.TouchEnd = 3] = "TouchEnd";
e[e.TouchCancle = 4] = "TouchCancle";
})(n = o.DragEventType || (o.DragEventType = {}));
var c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t(t, o, i) {
void 0 === t && (t = null);
void 0 === o && (o = null);
void 0 === i && (i = null);
var c = e.call(this, t, o) || this;
c.eventName = "TouchEnd";
c._dragType = n.TouchEnd;
null != i && (c.dragType = i);
return c;
}
Object.defineProperty(t.prototype, "dragType", {
get: function() {
return this._dragType;
},
set: function(e) {
this._dragType = e;
this.eventName = Object.keys(n)[e];
},
enumerable: !0,
configurable: !0
});
t.prototype.emit = function(t) {
for (var o, i = [], c = 1; c < arguments.length; c++) i[c - 1] = arguments[c];
o = "string" == typeof t ? t : Object.keys(n)[t];
return e.prototype.emit.apply(this, [ o ].concat(i));
};
__decorate([ s({
override: !0,
visible: !1
}) ], t.prototype, "eventName", void 0);
__decorate([ s({
type: cc.Enum(n),
visible: !1
}) ], t.prototype, "_dragType", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "dragType", null);
return t = __decorate([ a("DragEventListener") ], t);
}(i.default);
o.default = r;
cc._RF.pop();
}, {
"../EventListener": "EventListener"
} ],
DragFallCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "70212kiH+pNSpLL6PFBpYrn", "DragFallCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformCB"), i = e("./SpriteDragCB"), c = e("./DragEventListenerCB"), a = e("../EventListenerCB"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerCB": "EventListenerCB",
"../utils/NodeTransformCB": "NodeTransformCB",
"./DragEventListenerCB": "DragEventListenerCB",
"./SpriteDragCB": "SpriteDragCB"
} ],
DragFallCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1458U+MqpFPJQ8h38xoVSj", "DragFallCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformCE"), i = e("./SpriteDragCE"), c = e("./DragEventListenerCE"), a = e("../EventListenerCE"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerCE": "EventListenerCE",
"../utils/NodeTransformCE": "NodeTransformCE",
"./DragEventListenerCE": "DragEventListenerCE",
"./SpriteDragCE": "SpriteDragCE"
} ],
DragFallCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2212kiH+pNSpLL6PFBpYrn", "DragFallCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformCS"), i = e("./SpriteDragCS"), c = e("./DragEventListenerCS"), a = e("../EventListenerCS"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerCS": "EventListenerCS",
"../utils/NodeTransformCS": "NodeTransformCS",
"./DragEventListenerCS": "DragEventListenerCS",
"./SpriteDragCS": "SpriteDragCS"
} ],
DragFallFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2158U+MqpFPJQ8h38xoVSj", "DragFallFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformFS"), i = e("./SpriteDragFS"), c = e("./DragEventListenerFS"), a = e("../EventListenerFS"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerFS": "EventListenerFS",
"../utils/NodeTransformFS": "NodeTransformFS",
"./DragEventListenerFS": "DragEventListenerFS",
"./SpriteDragFS": "SpriteDragFS"
} ],
DragFallGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1958U+MqpFPJQ8h38xoVSj", "DragFallGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformGL"), i = e("./SpriteDragGL"), c = e("./DragEventListenerGL"), a = e("../EventListenerGL"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerGL": "EventListenerGL",
"../utils/NodeTransformGL": "NodeTransformGL",
"./DragEventListenerGL": "DragEventListenerGL",
"./SpriteDragGL": "SpriteDragGL"
} ],
DragFallGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "658cbv77KdDNJpGXEIUfeea", "DragFallGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformGS"), i = e("./SpriteDragGS"), c = e("./DragEventListenerGS"), a = e("../EventListenerGS"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerGS": "EventListenerGS",
"../utils/NodeTransformGS": "NodeTransformGS",
"./DragEventListenerGS": "DragEventListenerGS",
"./SpriteDragGS": "SpriteDragGS"
} ],
DragFallHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1112kiH+pNSpLL6PFBpYrn", "DragFallHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformHC"), i = e("./SpriteDragHC"), c = e("./DragEventListenerHC"), a = e("../EventListenerHC"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerHC": "EventListenerHC",
"../utils/NodeTransformHC": "NodeTransformHC",
"./DragEventListenerHC": "DragEventListenerHC",
"./SpriteDragHC": "SpriteDragHC"
} ],
DragFallMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "374c8vBoJpAhK3/WBu4M6Nn", "DragFallMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformMS"), i = e("./SpriteDragMS"), c = e("./DragEventListenerMS"), a = e("../EventListenerMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerMS": "EventListenerMS",
"../utils/NodeTransformMS": "NodeTransformMS",
"./DragEventListenerMS": "DragEventListenerMS",
"./SpriteDragMS": "SpriteDragMS"
} ],
DragFallRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7758U+MqpFPJQ8h38xoVSj", "DragFallRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformRP"), i = e("./SpriteDragRP"), c = e("./DragEventListenerRP"), a = e("../EventListenerRP"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerRP": "EventListenerRP",
"../utils/NodeTransformRP": "NodeTransformRP",
"./DragEventListenerRP": "DragEventListenerRP",
"./SpriteDragRP": "SpriteDragRP"
} ],
DragFallRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1212kiH+pNSpLL6PFBpYrn", "DragFallRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformRS"), i = e("./SpriteDragRS"), c = e("./DragEventListenerRS"), a = e("../EventListenerRS"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerRS": "EventListenerRS",
"../utils/NodeTransformRS": "NodeTransformRS",
"./DragEventListenerRS": "DragEventListenerRS",
"./SpriteDragRS": "SpriteDragRS"
} ],
DragFallSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1312kiH+pNSpLL6PFBpYrn", "DragFallSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransformSD"), i = e("./SpriteDragSD"), c = e("./DragEventListenerSD"), a = e("../EventListenerSD"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListenerSD": "EventListenerSD",
"../utils/NodeTransformSD": "NodeTransformSD",
"./DragEventListenerSD": "DragEventListenerSD",
"./SpriteDragSD": "SpriteDragSD"
} ],
DragFall: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "25b58U+MqpFPJQ8h38xoVSj", "DragFall");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../utils/NodeTransform"), i = e("./SpriteDrag"), c = e("./DragEventListener"), a = e("../EventListener"), s = cc._decorator, r = s.ccclass, l = s.property, d = s.requireComponent, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fallPos = new n.default();
t.fallParticle = null;
t.inBowl = null;
t.fallLis = [];
t.pourFrame = null;
t.pourTime = 2;
t.fallSprite = null;
t.fallAnimation = [];
t.moveToFallTime = .4;
t.drag = null;
t.fallAAction = null;
return t;
}
o = t;
t.prototype.start = function() {
this.initData();
};
t.prototype.initData = function() {
if (null == this.drag) {
this.drag = this.getComponent(i.default);
this.drag.eventTouchs.push(new c.default(this, "dragToBowl", c.DragEventType.TouchEnd));
for (var e = 0, t = [ "startFall", "stopFall" ]; e < t.length; e++) {
var o = t[e];
this.fallLis.push(new a.default(this, o, o));
}
}
null == this.fallSprite && (this.fallSprite = this.node.getChildByName("fallSprite"));
if (null == this.fallParticle) {
var n = this.node.getChildByName("particle");
null != n && (this.fallParticle = n.getComponent(cc.ParticleSystem));
}
};
t.prototype.dragToBowl = function(e, t) {
var n = this;
t.enabled = !1;
new cc.Tween().target(t.moveNode).to(this.moveToFallTime, {
position: this.fallPos.pos,
scaleX: this.fallPos.scale.x,
scaleY: this.fallPos.scale.y,
rotation: this.fallPos.rotate
}, null).call(function() {
for (var e = 0, t = n.fallLis; e < t.length; e++) {
t[e].emit(o.fallStart, n);
}
}).start();
};
t.prototype.startFall = function() {
var e = function() {
if (null == t.fallSprite) return "break";
t.fallSprite.active = !0;
if (null != t.fallAAction) return "break";
if (t.fallAnimation.length <= 0) return "break";
for (var e = t.fallSprite.getComponent(cc.Sprite), o = [], n = function(t) {
o.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
o.push(cc.delayTime(.15));
}, i = 0, c = t.fallAnimation; i < c.length; i++) {
n(c[i]);
}
t.fallAAction = cc.repeatForever(cc.sequence(o));
t.fallSprite.runAction(t.fallAAction);
}, t = this;
do {
if ("break" === e()) break;
} while (0);
null != this.fallParticle && this.fallParticle.resetSystem();
if (null != this.pourFrame) {
var o = this.node, n = this.node.getChildByName("moving");
if (null != n) o = n; else {
var i = this.node.getChildByName("noshade");
null != i && (o = i);
}
var c = o.getComponent(cc.Sprite);
c && (c.spriteFrame = this.pourFrame);
}
};
t.prototype.stopFall = function() {
do {
if (null == this.fallSprite) break;
this.fallSprite.active = !1;
if (null == this.fallAAction) break;
this.fallSprite.stopAction(this.fallAAction);
this.fallAAction = null;
} while (0);
if (null != this.fallParticle) {
var e = this.fallParticle.node.parent.convertToWorldSpaceAR(this.fallParticle.node.position);
this.fallParticle.node.parent = this.node.parent;
this.fallParticle.node.setSiblingIndex(this.node.getSiblingIndex());
this.fallParticle.node.position = this.fallParticle.node.parent.convertToNodeSpaceAR(e);
this.fallParticle.node.rotation = this.fallParticle.node.rotation + this.node.rotation;
this.fallParticle.stopSystem();
}
};
var o;
t.fallStart = "startFall";
t.fallEnd = "stopFall";
__decorate([ l({
type: n.default
}) ], t.prototype, "fallPos", void 0);
__decorate([ l({
type: cc.ParticleSystem
}) ], t.prototype, "fallParticle", void 0);
__decorate([ l({
type: cc.Node
}) ], t.prototype, "inBowl", void 0);
__decorate([ l({
type: [ a.default ]
}) ], t.prototype, "fallLis", void 0);
__decorate([ l({
type: cc.SpriteFrame
}) ], t.prototype, "pourFrame", void 0);
__decorate([ l() ], t.prototype, "pourTime", void 0);
__decorate([ l(cc.Node) ], t.prototype, "fallSprite", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ],
visible: function() {
return null != this.fallSprite;
}
}) ], t.prototype, "fallAnimation", void 0);
return t = o = __decorate([ r, d(i.default) ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../EventListener": "EventListener",
"../utils/NodeTransform": "NodeTransform",
"./DragEventListener": "DragEventListener",
"./SpriteDrag": "SpriteDrag"
} ],
DragHideShadeCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "75bd9qdmYxKS4sjdV9No9ws", "DragHideShadeCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragCB"), i = e("./DragEventListenerCB"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerCB": "DragEventListenerCB",
"./SpriteDragCB": "SpriteDragCB"
} ],
DragHideShadeCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14d9U1xxBBf5e+WPdSQORc", "DragHideShadeCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragCE"), i = e("./DragEventListenerCE"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerCE": "DragEventListenerCE",
"./SpriteDragCE": "SpriteDragCE"
} ],
DragHideShadeCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22d9qdmYxKS4sjdV9No9ws", "DragHideShadeCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragCS"), i = e("./DragEventListenerCS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerCS": "DragEventListenerCS",
"./SpriteDragCS": "SpriteDragCS"
} ],
DragHideShadeFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21d9U1xxBBf5e+WPdSQORc", "DragHideShadeFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragFS"), i = e("./DragEventListenerFS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerFS": "DragEventListenerFS",
"./SpriteDragFS": "SpriteDragFS"
} ],
DragHideShadeGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19d9U1xxBBf5e+WPdSQORc", "DragHideShadeGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragGL"), i = e("./DragEventListenerGL"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerGL": "DragEventListenerGL",
"./SpriteDragGL": "SpriteDragGL"
} ],
DragHideShadeGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "144b4XH4MdEwqUwNl+x4lnP", "DragHideShadeGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragGS"), i = e("./DragEventListenerGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerGS": "DragEventListenerGS",
"./SpriteDragGS": "SpriteDragGS"
} ],
DragHideShadeHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11d9qdmYxKS4sjdV9No9ws", "DragHideShadeHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragHC"), i = e("./DragEventListenerHC"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerHC": "DragEventListenerHC",
"./SpriteDragHC": "SpriteDragHC"
} ],
DragHideShadeMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "489cb+BeFtDHY06mKY7l9go", "DragHideShadeMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragMS"), i = e("./DragEventListenerMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerMS": "DragEventListenerMS",
"./SpriteDragMS": "SpriteDragMS"
} ],
DragHideShadeRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77d9U1xxBBf5e+WPdSQORc", "DragHideShadeRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragRP"), i = e("./DragEventListenerRP"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerRP": "DragEventListenerRP",
"./SpriteDragRP": "SpriteDragRP"
} ],
DragHideShadeRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12d9qdmYxKS4sjdV9No9ws", "DragHideShadeRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragRS"), i = e("./DragEventListenerRS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerRS": "DragEventListenerRS",
"./SpriteDragRS": "SpriteDragRS"
} ],
DragHideShadeSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13d9qdmYxKS4sjdV9No9ws", "DragHideShadeSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDragSD"), i = e("./DragEventListenerSD"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListenerSD": "DragEventListenerSD",
"./SpriteDragSD": "SpriteDragSD"
} ],
DragHideShade: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2a0d9U1xxBBf5e+WPdSQORc", "DragHideShade");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SpriteDrag"), i = e("./DragEventListener"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.movingFrame = null;
t.noshade = null;
t.movingNode = null;
t.m_orignalFrame = null;
t.thisNodeAction = null;
t.changeSprite = null;
t.drag = null;
return t;
}
t.prototype.start = function() {
this.noshade = this.node.getChildByName("noshade");
this.movingNode = this.node.getChildByName("moving");
null != this.movingNode && (this.movingNode.active = !0);
if (null != this.noshade) {
if (null != (e = this.noshade.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
} else {
var e;
if (null != (e = this.getComponent(cc.Sprite))) {
this.changeSprite = e;
this.m_orignalFrame = e.spriteFrame;
}
}
if (null == this.drag) {
this.drag = this.getComponent(n.default);
if (null != this.drag) {
var t = new i.default();
t.dragType = i.DragEventType.TouchCancle;
t.eventHander.handler = "moveBack";
t.eventHander.component = "DragHideShade";
t.eventHander.target = this.node;
this.drag.eventTouchs.push(t);
var o = new i.default();
o.dragType = i.DragEventType.DragBegin;
o.eventHander.handler = "startMove";
o.eventHander.component = "DragHideShade";
o.eventHander.target = this.node;
this.drag.eventTouchs.push(o);
}
}
};
t.prototype.startMove = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !1);
}
if (null != this.movingNode) {
this.movingNode.active = !0;
null != this.noshade && (this.noshade.active = !1);
}
null != this.movingFrame && null != this.changeSprite && (this.changeSprite.spriteFrame = this.movingFrame);
};
t.prototype.moveBack = function() {
if (null != this.movingNode || null != this.noshade) {
var e = this.getComponent(cc.Sprite);
e && (e.enabled = !0);
}
if (null != this.movingNode) {
this.movingNode.active = !1;
null != this.noshade && (this.noshade.active = !0);
}
null != this.movingFrame && null != this.changeSprite && null != this.m_orignalFrame && (this.changeSprite.spriteFrame = this.m_orignalFrame);
};
__decorate([ s(cc.SpriteFrame) ], t.prototype, "movingFrame", void 0);
return t = __decorate([ a, r(n.default) ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"./DragEventListener": "DragEventListener",
"./SpriteDrag": "SpriteDrag"
} ],
DragUtilCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "62c0fQm94NC84OAFLbiSRnJ", "DragUtilCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
console.log(t);
console.log(c);
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14572SZ1ZEFpX3NeLuS8va", "DragUtilCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b220fQm94NC84OAFLbiSRnJ", "DragUtilCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21572SZ1ZEFpX3NeLuS8va", "DragUtilFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19572SZ1ZEFpX3NeLuS8va", "DragUtilGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "24a98FkaT5IiYzmIRCyFyVl", "DragUtilGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b110fQm94NC84OAFLbiSRnJ", "DragUtilHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8e9e2mrbGZEzoCf/MS9m5sr", "DragUtilMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77572SZ1ZEFpX3NeLuS8va", "DragUtilRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b120fQm94NC84OAFLbiSRnJ", "DragUtilRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtilSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b130fQm94NC84OAFLbiSRnJ", "DragUtilSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragUtil: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "499572SZ1ZEFpX3NeLuS8va", "DragUtil");
Object.defineProperty(o, "__esModule", {
value: !0
});
(function(e) {
e[e.linear = 0] = "linear";
e[e.fade = 1] = "fade";
e[e.quadIn = 2] = "quadIn";
e[e.quadOut = 3] = "quadOut";
e[e.quadInOut = 4] = "quadInOut";
e[e.quadOutIn = 5] = "quadOutIn";
e[e.cubicIn = 6] = "cubicIn";
e[e.cubicOut = 7] = "cubicOut";
e[e.cubicInOut = 8] = "cubicInOut";
e[e.cubicOutIn = 9] = "cubicOutIn";
e[e.quartIn = 10] = "quartIn";
e[e.quartOut = 11] = "quartOut";
e[e.quartInOut = 12] = "quartInOut";
e[e.quartOutIn = 13] = "quartOutIn";
e[e.quintIn = 14] = "quintIn";
e[e.quintOut = 15] = "quintOut";
e[e.quintInOut = 16] = "quintInOut";
e[e.quintOutIn = 17] = "quintOutIn";
e[e.sineIn = 18] = "sineIn";
e[e.sineOut = 19] = "sineOut";
e[e.sineInOut = 20] = "sineInOut";
e[e.sineOutIn = 21] = "sineOutIn";
e[e.expoIn = 22] = "expoIn";
e[e.expoOut = 23] = "expoOut";
e[e.expoInOut = 24] = "expoInOut";
e[e.expoOutIn = 25] = "expoOutIn";
e[e.circIn = 26] = "circIn";
e[e.circOut = 27] = "circOut";
e[e.circInOut = 28] = "circInOut";
e[e.circOutIn = 29] = "circOutIn";
e[e.elasticIn = 30] = "elasticIn";
e[e.elasticOut = 31] = "elasticOut";
e[e.elasticInOut = 32] = "elasticInOut";
e[e.elasticOutIn = 33] = "elasticOutIn";
e[e.backIn = 34] = "backIn";
e[e.backOut = 35] = "backOut";
e[e.backInOut = 36] = "backInOut";
e[e.backOutIn = 37] = "backOutIn";
e[e.bounceIn = 38] = "bounceIn";
e[e.bounceOut = 39] = "bounceOut";
e[e.bounceInOut = 40] = "bounceInOut";
e[e.bounceOutIn = 41] = "bounceOutIn";
})(o.TweenType || (o.TweenType = {}));
var n = function() {
function e() {}
e.pointInCollide = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == o) return !1;
var c = o.world;
if (e.isBoxOrPolygo(o)) {
var a = c.points;
if (!i.equals(cc.Vec2.ZERO)) for (var s = c.points.slice(), r = 0; r < s.length; r++) s[r] = s[r].add(i);
return cc.Intersection.pointInPolygon(t.add(n), a);
}
if (o instanceof cc.CircleCollider) {
var l = c.position, d = c.radius;
return t.add(n).sub(l.add(i)).magSqr() < d * d;
}
return !0;
};
e.collideOnCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
return e.isBoxOrPolygo(t) && e.isBoxOrPolygo(o) ? cc.Intersection.polygonPolygon(c.points, a.points) : t instanceof cc.CircleCollider && o instanceof cc.CircleCollider ? cc.Intersection.circleCircle({
position: c.position,
radius: c.radius
}, {
position: a.position,
radius: a.radius
}) : t instanceof cc.CircleCollider && e.isBoxOrPolygo(o) ? cc.Intersection.polygonCircle(a.points, {
position: c.position,
radius: c.radius
}) : !!(o instanceof cc.CircleCollider && e.isBoxOrPolygo(t)) && cc.Intersection.polygonCircle(c.points, {
position: a.position,
radius: a.radius
});
};
e.collideInCollie = function(t, o, n, i) {
void 0 === n && (n = cc.Vec2.ZERO);
void 0 === i && (i = cc.Vec2.ZERO);
if (null == t || null == o) return !1;
var c = t.world, a = o.world;
if (e.isBoxOrPolygo(t)) {
for (var s = !0, r = 0, l = c.points; r < l.length; r++) {
var d = l[r];
if (!e.pointInCollide(d, o, n, i)) {
s = !1;
break;
}
}
return s;
}
if (t instanceof cc.CircleCollider && o instanceof cc.CircleCollider) {
var u = c.position, p = a.position, h = c.radius, f = a.radius;
return !(h > f) && p.add(i).sub(u.add(n)).magSqr() < (f - h) * (f - h);
}
if (t instanceof cc.CircleCollider && e.isBoxOrPolygo(o)) {
u = c.position, h = c.radius;
if (!e.pointInCollide(u, o, n, i)) return !1;
for (var g = a.points, m = (s = !0, 0); m < g.length; m++) {
var v = g[m].add(i), C = g[(m + 1) % g.length].add(i);
if (cc.Intersection.pointLineDistance(u.add(n), v, C, !0) < h) {
s = !1;
break;
}
}
return s;
}
return !1;
};
e.isBoxOrPolygo = function(e) {
return e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider;
};
return e;
}();
o.DragUtil = n;
cc._RF.pop();
}, {} ],
DragonBoneActionsCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3d883t8DAlCS6f7wfzFNL39", "DragonBoneActionsCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2283t8DAlCS6f7wfzFNL39", "DragonBoneActionsCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2183t8DAlCS6f7wfzFNL39", "DragonBoneActionsFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19d6l+HQhAVJhR/RB1vo4m", "DragonBoneActionsGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b5087zjRAFEMIWX1d6PVNot", "DragonBoneActionsGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1183t8DAlCS6f7wfzFNL39", "DragonBoneActionsHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a7cc5A6GY5KBZ8PasJXRxrS", "DragonBoneActionsMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77d6l+HQhAVJhR/RB1vo4m", "DragonBoneActionsRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1283t8DAlCS6f7wfzFNL39", "DragonBoneActionsRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonBoneActionsSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1383t8DAlCS6f7wfzFNL39", "DragonBoneActionsSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this) || this;
i._scaleDelta = cc.v2(0, 0);
i._startScale = cc.v2(0, 0);
i._previousScale = cc.v2(0, 0);
i._scaleBone = null;
i.initWithDuration(t, o, n);
return i;
}
t.prototype.setScaleBone = function(e) {
this._scaleBone = e;
};
t.prototype.getBone = function() {
return this._scaleBone;
};
t.prototype.initWithDuration = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, this)) {
this._scaleDelta = cc.v2(o, n);
return !0;
}
return !1;
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, this, t);
if (null != this._scaleBone) {
this._startScale.x = this._scaleBone.offset.x;
this._startScale.y = this._scaleBone.offset.y;
this._previousScale = this._startScale;
}
};
t.prototype.update = function(e) {
if (null != this._scaleBone) {
var t, o = cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY).sub(this._previousScale);
this._startScale = this._startScale.add(o);
t = this._startScale.add(cc.v2(this._scaleDelta.x * e, this._scaleDelta.y * e));
this._previousScale = t;
this._scaleBone.offset.scaleX = t.x;
this._scaleBone.offset.scaleY = t.y;
this._scaleBone.invalidUpdate();
}
};
return t = __decorate([ i ], t);
}(cc.ActionInterval));
o.default = c;
var a = function(e) {
__extends(t, e);
function t(t, o, n) {
var i = e.call(this, t, o, n) || this;
i.initWithDurations(t, o, n);
return i;
}
t.prototype.initWithDurations = function(t, o, n) {
if (e.prototype.initWithDuration.call(this, t, o, n)) {
this._endScale = cc.v2(o, n);
return !0;
}
};
t.prototype.startWithTarget = function(t) {
e.prototype.startWithTarget.call(this, t);
this._scaleBone && (this._scaleDelta = this._endScale.sub(cc.v2(this._scaleBone.offset.scaleX, this._scaleBone.offset.scaleY)));
};
return t;
}(c);
o.DragonBoneScaleTo = a;
o.dragonBoneScaleBy = function(e, t, o) {
return new c(e, t, o);
};
o.dragonBoneScaleTo = function(e, t, o) {
return new a(e, t, o);
};
cc._RF.pop();
}, {} ],
DragonCompoentCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "490ac+UEmFO1LhUXX12MUKe", "DragonCompoentCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsCB"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsCB": "DragonBoneActionsCB"
} ],
DragonCompoentCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22ac+UEmFO1LhUXX12MUKe", "DragonCompoentCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.offset;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_START);
this.node.off(cc.Node.EventType.TOUCH_CANCEL);
this.node.off(cc.Node.EventType.TOUCH_END);
this.node.off(cc.Node.EventType.TOUCH_MOVE);
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsCS": "DragonBoneActionsCS"
} ],
DragonCompoentFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21ac+UEmFO1LhUXX12MUKe", "DragonCompoentFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.offset;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_START);
this.node.off(cc.Node.EventType.TOUCH_CANCEL);
this.node.off(cc.Node.EventType.TOUCH_END);
this.node.off(cc.Node.EventType.TOUCH_MOVE);
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsFS": "DragonBoneActionsFS"
} ],
DragonCompoentGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19ac+UEmFO1LhUXX12MUKe", "DragonCompoentGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.offset;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_START);
this.node.off(cc.Node.EventType.TOUCH_CANCEL);
this.node.off(cc.Node.EventType.TOUCH_END);
this.node.off(cc.Node.EventType.TOUCH_MOVE);
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsGL": "DragonBoneActionsGL"
} ],
DragonCompoentGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6ee082AVVVH2aPU3gQMjJik", "DragonCompoentGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsGS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsGS": "DragonBoneActionsGS"
} ],
DragonCompoentHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11ac+UEmFO1LhUXX12MUKe", "DragonCompoentHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsHC"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsHC": "DragonBoneActionsHC"
} ],
DragonCompoentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "40797BW9IFHOYSu8+YyrUYJ", "DragonCompoentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsMS": "DragonBoneActionsMS"
} ],
DragonCompoentRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77ac+UEmFO1LhUXX12MUKe", "DragonCompoentRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.offset;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_START);
this.node.off(cc.Node.EventType.TOUCH_CANCEL);
this.node.off(cc.Node.EventType.TOUCH_END);
this.node.off(cc.Node.EventType.TOUCH_MOVE);
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsRP": "DragonBoneActionsRP"
} ],
DragonCompoentRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12ac+UEmFO1LhUXX12MUKe", "DragonCompoentRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsRS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.offset;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_START);
this.node.off(cc.Node.EventType.TOUCH_CANCEL);
this.node.off(cc.Node.EventType.TOUCH_END);
this.node.off(cc.Node.EventType.TOUCH_MOVE);
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsRS": "DragonBoneActionsRS"
} ],
DragonCompoentSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13ac+UEmFO1LhUXX12MUKe", "DragonCompoentSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonBoneActionsSD"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNodes = [];
t.Pulling = "Pulling";
t.PullEnd = "PullEnd";
t.PullStand = "PullStand";
t._startPos = cc.v2(0, 0);
t._endPos = cc.v2(0, 0);
t._moveBone = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
this.initListner();
};
t.prototype.distanceSquared = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return o * o + n * n;
};
t.prototype.initListner = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = this.node.getPosition(), o = e.getDelta();
this._isTouchMove = Math.sqrt(o.x * o.x + o.y * o.y) > 4;
this._isTouchMove;
o.y = 0;
var n = this.node.getPosition().add(o);
if (this.distanceSquared(n, this._endPos) <= this.distanceSquared(this._startPos, this._endPos)) {
var i = this.distanceSquared(n, this._startPos) >= this.distanceSquared(this._endPos, this._startPos);
if (i) {
n = this._endPos;
o = this._endPos.sub(t);
}
this.node.setPosition(n);
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + o.x;
this._moveBone.invalidUpdate();
}
for (var c = 0, a = this.moveNodes; c < a.length; c++) {
var s = a[c];
s.setPosition(s.getPosition().add(o));
}
i ? cc.find("Canvas").emit(this.PullEnd) : cc.find("Canvas").emit(this.Pulling);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
this.scaleAction();
cc.find("Canvas").emit(this.PullEnd);
}, this);
};
t.prototype.checkTouchMove = function(e) {
this._isTouchMove;
};
t.prototype.scaleAction = function() {
if (this._moveBone) {
this.node.stopActionByTag(101014);
var e = n.dragonBoneScaleTo(0, 1, 1), t = n.dragonBoneScaleTo(.13, 1, .8), o = n.dragonBoneScaleTo(.11, .8, 1), i = n.dragonBoneScaleTo(.1, 1, .86), c = n.dragonBoneScaleTo(.09, .88, 1), a = n.dragonBoneScaleTo(.08, 1, .89), s = n.dragonBoneScaleTo(.07, 1, 1);
e.setScaleBone(this._moveBone);
t.setScaleBone(this._moveBone);
o.setScaleBone(this._moveBone);
i.setScaleBone(this._moveBone);
c.setScaleBone(this._moveBone);
a.setScaleBone(this._moveBone);
s.setScaleBone(this._moveBone);
var r = cc.sequence(e, t, o, i, c, a, s);
r.setTag(101014);
this.node.runAction(r);
}
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.getMoveBone = function() {
return this._moveBone;
};
t.prototype.setStartPos = function(e) {
this._startPos = e;
};
t.prototype.setEndPos = function(e) {
this._endPos = e;
};
t.prototype.addMoveNodes = function(e) {
e && this.moveNodes.push(e);
};
t.prototype.getStartPos = function() {
return this._startPos;
};
t.prototype.getEndPos = function() {
return this._endPos;
};
t.prototype.getMoveNodes = function() {
return this.moveNodes;
};
__decorate([ a({
type: cc.Node
}) ], t.prototype, "moveNodes", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DragonBoneActionsSD": "DragonBoneActionsSD"
} ],
DragonTouchEventRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7715PEHvRNObzZUg6aq5Eo", "DragonTouchEventRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperRP"), i = e("./TipManagerRP"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._moveBone = null;
t.initPos = null;
t.count = 0;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/finger").active = !0;
var e = this.node, t = (e.getComponent(dragonBones.ArmatureDisplay), e.getComponent(dragonBones.ArmatureDisplay).armature());
this._moveBone = t.getBone("shadow");
this.initPos = this._moveBone.offset;
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.find("Canvas/finger").active = !1;
cc.find("Canvas").getComponent(cc.AudioSource).play();
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/finger").active = !1;
var t = e.getDelta();
if (this._moveBone) {
this._moveBone.offset.x = this._moveBone.offset.x + t.x;
this._moveBone.offset.y = this._moveBone.offset.y + t.y;
this._moveBone.offset.y < 0 && (this._moveBone.offset.y = 0);
this._moveBone.invalidUpdate();
}
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.destroyTouchEvent();
this.jumpTo(this._moveBone.offset.x);
cc.log(this._moveBone);
this._moveBone.offset.x = 0;
this._moveBone.offset.y = 0;
this._moveBone.invalidUpdate();
};
t.prototype.jumpTo = function(e) {
var t = this.node.x;
t + e > cc.find("Canvas").width / 2 && (e = cc.find("Canvas").width / 2 - t);
t + e < -cc.find("Canvas").width / 2 && (e = -cc.find("Canvas").width / 2 - t);
var o = this.node.getPosition().add(cc.v2(e / 2, 0)), c = this.node.getPosition().add(cc.v2(e, 0)), a = 100 * Math.random() + 150, s = cc.moveBy(.5, cc.p(0, a)).easing(cc.easeCubicActionOut()), r = cc.moveBy(.5, cc.p(0, -a)).easing(cc.easeCubicActionIn()), l = cc.spawn(cc.moveTo(1, o), cc.sequence(s, r)), d = cc.spawn(cc.moveTo(1, c), cc.sequence(s, r));
this.node.runAction(cc.sequence(l, cc.callFunc(function() {
this.node.getComponent(cc.Animation).play();
this.node.getComponent(cc.AudioSource).play();
}.bind(this)), d, cc.callFunc(function() {
this.node.getComponent(cc.Animation).play();
this.node.getComponent(cc.AudioSource).play();
this.registerTouchEvent();
this.count = this.count + 1;
if (3 == this.count) {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.count % 3 == 0 && i.default.getInstance().jumpTips();
}.bind(this))));
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperRP": "CocosHelperRP",
"./TipManagerRP": "TipManagerRP"
} ],
DyeControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b126dw8IW5L7b/y9I0oDNq0", "DyeControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInRS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragRS"), c = e("./HandTouchEventRS"), a = e("../common/Script/codebase/utils/CocosHelperRS"), s = e("./DragonCompoentRS"), r = e("./TipManagerRS"), l = e("./DragonBoneActionsRS"), d = e("../common/Script/codebase/TransitionSceneRS"), u = cc._decorator, p = u.ccclass, h = u.property, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.dradonNode = null;
t.slimeNode = null;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.onLoad = function() {
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("colorBlue").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("colorBlue").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("colorYellow").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("colorYellow").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("colorPink").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("colorPink").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
};
t.prototype.colorTouchStart = function() {
this.node.getChildByName("finger1").active = !1;
};
t.prototype.colorTouchEnd = function(e, t, o, a) {
this.node.getChildByName("color" + a).getComponent(i.default).enabled = !1;
this.node.getChildByName("color" + a).runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(-15, 165))), cc.callFunc(function() {
cc.find("Canvas/color" + a + "/coloring").active = !1;
cc.find("Canvas/color" + a + "/coloring_fall").active = !0;
cc.find("Canvas/color" + a + "/fallColor").active = !0;
cc.find("Canvas/color" + a + "/fallColor").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime" + a + "/slime0/color").runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
cc.find("Canvas/color" + a + "/fallColor").getComponent(cc.AudioSource).stop();
cc.find("Canvas/color" + a + "/fallColor").active = !1;
cc.find("Canvas/slime" + a).runAction(cc.moveTo(.5, cc.v2(0, 0)));
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
this.node.getChildByName("hand").active = !0;
this.node.getChildByName("hand").opacity = 0;
this.node.getChildByName("hand").getComponent(n.default).doShowAction();
this.node.getChildByName("hand").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("hand").getComponent(c.default).init(cc.find("Canvas/slime" + a + "/slime0"));
this.node.getChildByName("finger").active = !0;
}.bind(this);
}.bind(this))));
};
t.prototype.mixFinish = function(e, t, o) {
r.default.getInstance().playAudioEffect();
this.dradonNode = cc.find("Canvas/slime" + o + "/dragon");
this.slimeNode = cc.find("Canvas/slime" + o + "/slime1");
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(c.default).destroyTouchEvent();
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/slime" + o + "/slime0").setScale(1);
cc.find("Canvas/slime" + o + "/slime0").active = !1;
cc.find("Canvas/slime" + o + "/dragon").active = !0;
this.node.getChildByName("left_hand0").active = !0;
this.node.getChildByName("left_hand0").getComponent(s.default).initListner();
this.node.getChildByName("left_hand1").active = !0;
this.node.getChildByName("right_hand0").active = !0;
this.node.getChildByName("right_hand0").getComponent(s.default).initListner();
this.node.getChildByName("right_hand1").active = !0;
this.addHandCm();
};
t.prototype.mixFinishBlue = function() {
r.default.getInstance().playAudioEffect();
this.slimeNode.stopAllActions();
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(c.default).destroyTouchEvent();
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/slimeBlue/slime1").setScale(1);
cc.find("Canvas/slimeBlue").runAction(cc.sequence(cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.moveBy(.5, cc.v2(1600, 0)), cc.callFunc(function() {
this.node.getChildByName("slimeYellow").getComponent(n.default).doShowAction();
this.node.getChildByName("colorYellow").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.mixFinishYellow = function() {
r.default.getInstance().playAudioEffect();
this.slimeNode.stopAllActions();
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(c.default).destroyTouchEvent();
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/slimeYellow/slime1").setScale(1);
cc.find("Canvas/slimeYellow").runAction(cc.sequence(cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.moveBy(.5, cc.v2(1600, 0)), cc.callFunc(function() {
this.node.getChildByName("slimePink").getComponent(n.default).doShowAction();
this.node.getChildByName("colorPink").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.mixFinishPink = function() {
r.default.getInstance().playAudioEffect();
this.slimeNode.stopAllActions();
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(c.default).destroyTouchEvent();
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/slimePink/slime1").setScale(1);
cc.find("Canvas/slimePink").runAction(cc.sequence(cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
d.default.changeScene("fuseSlimeRS");
}.bind(this))));
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = this.dradonNode, o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), n = 0; n < e.length; n++) {
var i = e[n], c = a.CocosHelper.findNode(cc.Canvas.instance.node, i), r = c.getComponent(s.default), l = c.getPosition(), d = l.add(cc.v2());
d.x = c.getParent().convertToNodeSpaceAR("left_hand0" == i ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == i ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 2; h <= 5; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.hideParticle();
});
this.startAction();
};
t.prototype.removeHandCm = function() {
cc.find("Canvas").off("PullTouch");
cc.find("Canvas").off("Pulling");
cc.find("Canvas").off("PullEnd");
};
t.prototype.startAction = function() {
for (var e = this.dradonNode, t = e.getComponent(dragonBones.ArmatureDisplay).armature(), o = function(o) {
n.actionNode.runAction(cc.sequence(cc.delayTime(2 * (o + 1)), cc.callFunc(function() {
r.default.getInstance().playAudioEffect();
var n = a.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), i = a.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), d = a.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), u = a.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != o) {
var p = t.getSlot("motion" + o + "_slime"), h = t.getSlot("motion" + (o + 1) + "_slime");
console.log("motion2_slime" + (o + 1));
h.displayIndex = 0;
console.log("motion1_slime" + o);
p.displayIndex = -1;
} else {
this.hideParticle();
var f = t.getBone("slimel0"), g = l.dragonBoneScaleTo(.5, .4, 1);
g.setScaleBone(f);
this.node.runAction(g);
var m = t.getBone("slimer0"), v = l.dragonBoneScaleTo(.5, .4, 1);
v.setScaleBone(m);
this.node.runAction(v);
n.getComponent(s.default).destroyTouchEvent();
i.getComponent(s.default).destroyTouchEvent();
this.removeHandCm();
n.runAction(cc.moveTo(.5, -150, -270));
d.runAction(cc.moveTo(.5, -150, -270));
i.runAction(cc.moveTo(.5, 150, -270));
u.runAction(cc.moveTo(.5, 150, -270));
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
n.setPosition(cc.v2(-270, -270));
d.setPosition(cc.v2(-270, -270));
i.setPosition(cc.v2(270, -270));
u.setPosition(cc.v2(270, -270));
n.active = !1;
d.active = !1;
i.active = !1;
u.active = !1;
e.active = !1;
this.slimeNode.active = !0;
this.node.getChildByName("hand").active = !0;
this.node.getChildByName("hand").getComponent(c.default).init(this.slimeNode);
this.node.getChildByName("finger").active = !0;
}.bind(this))));
}
}.bind(n))));
}, n = this, i = 1; i < 6; i++) o(i);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
a.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.backLastScence = function() {
d.default.changeScene("splitSlimeRS");
};
__decorate([ h({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ p ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../common/Script/MoveInRS": "MoveInRS",
"../common/Script/codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"../common/Script/codebase/utils/CocosHelperRS": "CocosHelperRS",
"./DragonBoneActionsRS": "DragonBoneActionsRS",
"./DragonCompoentRS": "DragonCompoentRS",
"./HandTouchEventRS": "HandTouchEventRS",
"./TipManagerRS": "TipManagerRS"
} ],
DyeSlimeControillerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1415zyoKFKFINt4PKThdnz", "DyeSlimeControillerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInCE"), i = e("../common/Script/codebase/utils/CocosHelperCE"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragCE"), a = e("../common/Script/codebase/TransitionSceneCE"), s = e("./DataConfigCE"), r = e("./TipManagerCE"), l = e("./ObjectActionCE"), d = cc._decorator, u = d.ccclass, p = (d.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.chooseNames = null;
t.foodName = null;
t.color = null;
t.currentColorNode = null;
t.count = 0;
t.candy = null;
t.colors = null;
t.candys = null;
t.isTouch = !1;
t.callback = null;
return t;
}
t.prototype.onLoad = function() {
this.isTouch = !1;
this.count = 0;
this.colors = [];
this.candys = [];
this.chooseNames = [ "table", "refrigerator", "cabinet", "sink" ];
this.node.getChildByName("slime").getComponent(n.default).actionCallBack = function() {
if (s.default.getInstance().getNoFirst()) this.node.getChildByName("plate").getComponent(n.default).doShowAction(); else {
cc.find("Canvas/tip/tips1").active = !0;
cc.find("Canvas/tip/tips1").runAction(cc.moveTo(1, cc.v2(0, 0)));
this.node.runAction(cc.sequence(cc.delayTime(5), cc.callFunc(function() {
cc.find("Canvas/tip/tips1").active = !1;
cc.find("Canvas/tip/tips2").active = !0;
cc.find("Canvas/tip/tips2").runAction(cc.moveTo(1, cc.v2(0, 0)));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
cc.find("Canvas/tip/tips2").active = !1;
cc.find("Canvas/tip/tips3").active = !0;
cc.find("Canvas/tip/tips3").runAction(cc.moveTo(1, cc.v2(0, 0)));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
cc.find("Canvas/tip/tips3").active = !1;
this.node.getChildByName("plate").getComponent(n.default).doShowAction();
s.default.getInstance().setNoFirst();
}.bind(this))));
}
}.bind(this);
this.node.getChildByName("plate").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("slime").getComponent(cc.AudioSource).play();
this.node.getChildByName("slime").runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, -80)), cc.callFunc(function() {
cc.find("Canvas/plate/plate_slime").active = !0;
this.hidePlate();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.activateBtn();
}.bind(this))));
this.node.getChildByName("slime").active = !1;
}.bind(this))));
}.bind(this);
};
t.prototype.init = function() {
cc.find("Canvas/refrigerator/mixmachine").active = !1;
cc.find("Canvas/refrigerator/refrigerator/close").active = !0;
cc.find("Canvas/refrigerator/refrigerator/open").active = !1;
cc.find("Canvas/refrigerator/refrigerator/open/drawer").setPosition(cc.v2(-52, -100));
};
t.prototype.showChangBtns = function() {
cc.find("Canvas/btn_back").active = !0;
cc.find("Canvas/refrigerator/right").active = !0;
cc.find("Canvas/sink/right").active = !0;
cc.find("Canvas/sink/left").active = !0;
cc.find("Canvas/cabinet/left").active = !0;
};
t.prototype.hideChangeBtns = function() {
cc.find("Canvas/btn_back").active = !1;
cc.find("Canvas/refrigerator/right").active = !1;
cc.find("Canvas/sink/right").active = !1;
cc.find("Canvas/sink/left").active = !1;
cc.find("Canvas/cabinet/left").active = !1;
};
t.prototype.chooseBtn = function(e, t) {
"table" == t && (cc.find("Canvas/btn_back").active = !1);
this.node.getChildByName("plate").stopAllActions();
cc.find("Canvas/plate").scale = .4;
var o = cc.view.getVisibleSize().height / 2 - cc.find("Canvas/plate").height / 2 * .4 - 20;
this.node.getChildByName("plate").setPosition(cc.v2(0, o));
this.node.getChildByName("tipClick").active = !1;
var n = t, i = this.node.getChildByName("bg").scale;
this.node.getChildByName("bg").runAction(cc.sequence(cc.scaleBy(.5, 1.2), cc.callFunc(function() {
this.node.getChildByName("bg").setScale(i);
for (var e = 0; e < this.chooseNames.length; e++) if (n == this.chooseNames[e]) {
cc.find("Canvas/" + this.chooseNames[e]).active = !0;
this.showChangBtns();
this.init();
cc.find("Canvas/btn_back").active = !0;
if ("table" == n) {
cc.find("Canvas/btn_back").active = !1;
cc.find("Canvas/btn_next").active = !1;
}
} else cc.find("Canvas/" + this.chooseNames[e]).active = !1;
}.bind(this))));
};
t.prototype.backBtn = function() {
cc.find("Canvas/btn_back").active = !1;
for (var e = 0; e < this.chooseNames.length; e++) cc.find("Canvas/" + this.chooseNames[e]).active = !1;
cc.find("Canvas/plate").scale = .4;
var t = -cc.view.getVisibleSize().width / 2 + cc.find("Canvas/plate").width / 2 * .4 + 20, o = -cc.view.getVisibleSize().height / 2 + cc.find("Canvas/plate").height / 2 * .4 + 130;
this.node.getChildByName("plate").setPosition(cc.v2(t, o));
};
t.prototype.nextBtn = function() {
this.showPlate(cc.v2(0, 0));
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
i.CocosHelper.captureNodeSize(cc.find("Canvas/plate/color"), cc.view.getVisibleSize().width, cc.view.getVisibleSize().height).then(function(e) {
s.default.getInstance().setTexture(e);
});
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("wrapUpSlimeCE", 12);
}.bind(this))));
};
t.prototype.plateClick = function() {
cc.find("Canvas/tipClick") && (cc.find("Canvas/tipClick").active = !1);
this.callback && this.callback();
};
t.prototype.showPlate = function(e) {
var t = cc.v2(0, -150);
e && (t = e);
cc.find("Canvas/plate").runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, t)));
this.node.getChildByName("mask").active = !0;
};
t.prototype.hidePlate = function() {
var e = -cc.view.getVisibleSize().width / 2 + cc.find("Canvas/plate").width / 2 * .4 + 20, t = -cc.view.getVisibleSize().height / 2 + cc.find("Canvas/plate").height / 2 * .4 + 130;
cc.find("Canvas/plate").runAction(cc.sequence(cc.spawn(cc.scaleTo(.5, .4), cc.moveTo(.5, cc.v2(e, t))), cc.callFunc(function() {
this.node.getChildByName("mask").active = !1;
}.bind(this))));
};
t.prototype.hidePlateCenter = function() {
var e = cc.view.getVisibleSize().height / 2 - cc.find("Canvas/plate").height / 2 * .4 - 20;
cc.find("Canvas/plate").runAction(cc.sequence(cc.delayTime(1), cc.spawn(cc.scaleTo(.5, .4), cc.moveTo(.5, cc.v2(0, e))), cc.callFunc(function() {
this.node.getChildByName("mask").active = !1;
}.bind(this))));
};
t.prototype.refrigeratorClick = function(e) {
cc.find("Canvas/refrigerator/refrigerator/close").getComponent(cc.AudioSource).play();
cc.find("Canvas/refrigerator/refrigerator/close").active = !1;
cc.find("Canvas/refrigerator/refrigerator/open").active = !0;
cc.find("Canvas/refrigerator/refrigerator/open").getComponent(cc.AudioSource).play();
cc.find("Canvas/refrigerator/refrigerator/close/tipClick") && cc.find("Canvas/refrigerator/refrigerator/close/tipClick").destroy();
};
t.prototype.activateBtn = function() {
this.chooseNames.forEach(function(e) {
cc.find("Canvas/bg/" + e).getComponent(cc.Button).interactable = !0;
});
};
t.prototype.sleepBtn = function() {
this.chooseNames.forEach(function(e) {
cc.find("Canvas/bg/" + e).getComponent(cc.Button).interactable = !1;
});
};
t.prototype.candyClick = function(e, t) {
this.node.getComponent(cc.AudioSource).play();
cc.find("Canvas/table/tipClick") && cc.find("Canvas/table/tipClick").destroy();
this.sleepTableBtns();
this.candy = t;
var o = e.target;
o.parent = this.node;
this.showPlate(cc.v2(0, -150));
o.runAction(cc.sequence(cc.scaleTo(.3, 1.2), cc.scaleTo(.2, 1), cc.callFunc(function() {
cc.find("Canvas/plate").getComponent(cc.Button).interactable = !0;
if (cc.find("Canvas/tipClick")) {
cc.find("Canvas/tipClick").active = !0;
cc.find("Canvas/tipClick").setPosition(cc.v2(0, -150));
}
this.callback = function() {
o.runAction(cc.sequence(cc.callFunc(function() {
this.candys.push(this.candy);
s.default.getInstance().setCandys(this.candys);
cc.loader.loadRes("crazyemoji/prefab/color/" + this.candy, cc.Prefab, function(e, t) {
var n = cc.instantiate(t);
n.getComponent(cc.AudioSource) && n.getComponent(cc.AudioSource).play();
cc.find("Canvas/plate/color").addChild(n);
for (var c = n.childrenCount, a = 0; a < c; a++) {
var s = n.children[a].getPosition(), r = 50 + 20 * Math.random();
n.children[a].setPosition(cc.v2(s.x, s.y + r));
n.children[a].runAction(cc.moveTo(.5, s));
}
cc.find("Canvas/plate/decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/plate/decorateParticle").getComponent(cc.AudioSource).play();
this.hidePlateCenter();
o.opacity = 0;
var l = i.CocosHelper.findNode(cc.Canvas.instance.node, "next_btn");
if (!l.active) {
l.active = !0;
l.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(this));
}.bind(this)), cc.delayTime(2.5), cc.callFunc(function() {
this.activateTableBtns();
o.destroy();
}.bind(this))));
}.bind(this);
}.bind(this))));
};
t.prototype.activateTableBtns = function() {
cc.find("Canvas/table").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !0);
});
};
t.prototype.sleepTableBtns = function() {
cc.find("Canvas/table").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !1);
});
};
t.prototype.foodClick = function(e, t) {
this.node.getComponent(cc.AudioSource).play();
cc.find("Canvas/refrigerator/refrigerator/open/tipClick") && cc.find("Canvas/refrigerator/refrigerator/open/tipClick").destroy();
this.hideChangeBtns();
this.color = t;
this.sleepFoodBtns();
var o = e.target;
this.foodName = o.name;
o.stopAllActions();
o.getPosition();
o.parent.children.forEach(function(e) {
e.zIndex = 0;
});
o.zIndex = 1;
o.getComponent(cc.Button).interactable = !1;
o.active = !1;
cc.find("Canvas/refrigerator/mixmachine").active = !0;
var i = cc.find("Canvas/refrigerator/mixmachine").convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = cc.find("Canvas/refrigerator/mixmachine/fruit").getPosition();
cc.find("Canvas/refrigerator/mixmachine/fruit").setPosition(i);
cc.find("Canvas/refrigerator/mixmachine/fruit").active = !0;
cc.find("Canvas/refrigerator/mixmachine/fruit").setScale(1);
cc.find("Canvas/refrigerator/mixmachine/fruit").getComponent(cc.Sprite).spriteFrame = o.getComponent(cc.Sprite).spriteFrame;
cc.find("Canvas/refrigerator/mixmachine/fruit").runAction(cc.spawn(cc.moveTo(.5, a), cc.scaleTo(.5, 1.3)));
cc.find("Canvas/refrigerator/mixmachine/machine").stopAllActions();
cc.find("Canvas/refrigerator/mixmachine/machine").setPosition(cc.v2(132, -6));
cc.find("Canvas/refrigerator/mixmachine/machine").opacity = 0;
cc.find("Canvas/refrigerator/mixmachine/mask").active = !1;
cc.find("Canvas/refrigerator/mixmachine/jiaoban_bg").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/mix1").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/mix2").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/mix3").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/btn/on").active = !0;
cc.find("Canvas/refrigerator/mixmachine/machine/btn").getComponent(cc.Button).interactable = !1;
cc.find("Canvas/refrigerator/mixmachine/machine").getComponent(cc.Button).interactable = !1;
cc.find("Canvas/refrigerator/mixmachine/machine").active = !0;
cc.find("Canvas/refrigerator/mixmachine/machine").getComponent(n.default).doShowAction();
cc.find("Canvas/refrigerator/mixmachine/machine").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/refrigerator/mixmachine/fruit").getComponent(c.default).enabled = !0;
cc.find("Canvas/refrigerator/mixmachine/mask").active = !0;
cc.find("Canvas/refrigerator/mixmachine/jiaoban_bg").active = !0;
o.active = !0;
cc.find("Canvas/refrigerator/mixmachine/finger") && (cc.find("Canvas/refrigerator/mixmachine/finger").active = !0);
"vegetables" != o.name && "cucumber" != o.name && "potato" != o.name && "tomato" != o.name || this.closeDrawer();
this.activateFoodBtns();
}.bind(this);
};
t.prototype.foodTouchStart = function() {
cc.loader.loadRes("crazyemoji/image/food/mixmachine_" + this.foodName + "1", cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.find("Canvas/refrigerator/mixmachine/machine/mix1").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.loadRes("crazyemoji/image/food/mixmachine_" + this.foodName + "2", cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.find("Canvas/refrigerator/mixmachine/machine/mix2").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.loadRes("crazyemoji/image/food/mixmachine_" + this.color, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/refrigerator/mixmachine/machine/mix3").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.loadRes("crazyemoji/image/food/" + this.color, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/refrigerator/mixmachine/machine/pourJuice").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
}.bind(this));
}.bind(this));
}.bind(this));
};
t.prototype.foodTouchEnd = function(e) {
cc.find("Canvas/refrigerator/mixmachine/finger") && cc.find("Canvas/refrigerator/mixmachine/finger").destroy();
var t = e.target;
t.getComponent(c.default).enabled = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/lip").runAction(cc.moveBy(.3, cc.v2(-1e3, 0)));
t.runAction(cc.sequence(cc.moveTo(.5, cc.v2(124, 280)), cc.spawn(cc.moveBy(.3, cc.v2(0, -80)), cc.scaleTo(.3, .5)), cc.callFunc(function() {
cc.find("Canvas/refrigerator/mixmachine/machine/mix1").active = !0;
t.setPosition(cc.v2(-108, -15));
t.setScale(1.3);
t.active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/lip").runAction(cc.sequence(cc.moveBy(.3, cc.v2(1e3, 0)), cc.callFunc(function() {
cc.find("Canvas/refrigerator/mixmachine/machine/btn").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/refrigerator/mixmachine/machine/btn/tipClick") && (cc.find("Canvas/refrigerator/mixmachine/machine/btn/tipClick").active = !0);
}.bind(this))));
}.bind(this))));
};
t.prototype.seasoningClick = function(e, t) {
this.node.getComponent(cc.AudioSource).play();
cc.find("Canvas/cabinet/tipClick") && cc.find("Canvas/cabinet/tipClick").destroy();
this.hideChangeBtns();
this.sleepSeaSoningBtns();
this.color = t;
var o = cc.instantiate(e.target);
o.getComponent(l.default) && o.removeComponent(l.default);
o.getComponent(l.default);
o.parent = this.node;
e.target.active = !1;
o.zIndex = 1;
this.showPlate();
o.runAction(cc.sequence(cc.spawn(cc.moveTo(1, cc.v2(100, 0)), cc.scaleTo(1, 1.3)), cc.callFunc(function() {
cc.find("Canvas/tipClick").active = !0;
cc.find("Canvas/tipClick").zIndex = 2;
cc.find("Canvas/tipClick").setPosition(cc.v2(100, 0));
o.getComponent(c.default).enabled = !0;
}.bind(this))));
};
t.prototype.seasoningTouchStart = function(e) {
cc.find("Canvas/tipClick").active = !1;
var t = e.target;
t.getComponent(c.default).enabled = !1;
var o = 250 - 200 * Math.random(), n = 130 - 60 * Math.random();
if ("salasaauce" == t.name) {
n = 30 - 60 * Math.random();
o = 170 - 200 * Math.random();
} else if ("oil" == t.name) {
n = 180 - 60 * Math.random();
o = 170 - 200 * Math.random();
} else "chilisauce" == t.name ? n = 60 - 60 * Math.random() : "chocolatesauce" == t.name && (n = 100 - 60 * Math.random());
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(o, n))), cc.callFunc(function() {
t.getChildByName("pour").active = !0;
cc.find("Canvas/cabinet").getComponent(cc.AudioSource).play();
if ("oil" == t.name) {
t.getChildByName("oil0").active = !1;
t.getChildByName("oil1").active = !0;
t.getChildByName("oil1").runAction(cc.fadeTo(3.5, 0));
} else "salasaauce" == t.name && t.getChildByName("salasaauce").runAction(cc.fadeTo(3.5, 0));
var e = cc.find("Canvas/plate/color").convertToNodeSpaceAR(t.getChildByName("pour").convertToWorldSpaceAR(cc.v2(0, 0)));
this.creatColor(e, 3);
}.bind(this)), cc.delayTime(3.5), cc.callFunc(function() {
cc.find("Canvas/cabinet").getComponent(cc.AudioSource).stop();
t.getChildByName("pour").active = !1;
this.hidePlateCenter();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1e3, 0))), cc.delayTime(2), cc.callFunc(function() {
cc.log(t.name);
cc.find("Canvas/cabinet/" + t.name).active = !0;
t.destroy();
this.activateSeasoningBtns();
this.showChangBtns();
}.bind(this))));
};
t.prototype.washClick = function(e, t) {
this.node.getComponent(cc.AudioSource).play();
this.hideChangeBtns();
this.sleepWashBtns();
e.target.parent.getChildByName("tipClick").active = !1;
this.color = t;
var o = cc.instantiate(e.target);
o.getComponent(l.default) && o.removeComponent(l.default);
o.parent = this.node;
e.target.active = !1;
o.zIndex = 1;
this.showPlate();
var n = 240 - 220 * Math.random(), i = 35 - 60 * Math.random();
o.runAction(cc.sequence(cc.spawn(cc.moveTo(1, cc.v2(n, i)), cc.scaleTo(1, 1.3), cc.rotateTo(1, -20)), cc.callFunc(function() {
var e = cc.find("Canvas/plate/color").convertToNodeSpaceAR(o.getChildByName("pour").convertToWorldSpaceAR(cc.v2(0, 0)));
this.creatColor(e, 6, function() {
this.pourFinish(o);
}.bind(this));
}.bind(this)), cc.delayTime(.2), cc.callFunc(function() {
if (cc.find("Canvas/finger")) {
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/finger").setPosition(cc.v2(n, i));
cc.find("Canvas/finger").zIndex = 2;
}
this.registerTouchEvent(o);
}.bind(this))));
};
t.prototype.registerTouchEvent = function(e) {
e.on(cc.Node.EventType.TOUCH_START, this.washTouchStart, this);
e.on(cc.Node.EventType.TOUCH_END, this.washTouchEnd, this);
e.on(cc.Node.EventType.TOUCH_CANCEL, this.washTouchCancle, this);
};
t.prototype.destoryTouchEvent = function(e) {
e.off(cc.Node.EventType.TOUCH_START, this.washTouchStart, this);
e.off(cc.Node.EventType.TOUCH_END, this.washTouchEnd, this);
e.off(cc.Node.EventType.TOUCH_CANCEL, this.washTouchCancle, this);
};
t.prototype.washTouchStart = function(e) {
this.isTouch = !0;
cc.find("Canvas/finger") && cc.find("Canvas/finger").destroy();
e.target.getChildByName("pour").active = !0;
cc.find("Canvas/sink").getComponent(cc.AudioSource).play();
cc.director.getActionManager().resumeTarget(this.currentColorNode);
};
t.prototype.washTouchEnd = function(e) {
if (this.isTouch) {
this.isTouch = !1;
this.pourFinish(e.target);
}
};
t.prototype.washTouchCancle = function(e) {
if (this.isTouch) {
this.isTouch = !1;
this.pourFinish(e.target);
}
};
t.prototype.pourFinish = function(e) {
cc.find("Canvas/plate/decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/plate/decorateParticle").getComponent(cc.AudioSource).play();
cc.director.getActionManager().pauseTarget(this.currentColorNode);
e.getChildByName("pour").active = !1;
cc.find("Canvas/sink").getComponent(cc.AudioSource).stop();
var t = cc.find("Canvas/sink/" + e.name).getPosition();
this.destoryTouchEvent(e);
this.hidePlateCenter();
e.runAction(cc.sequence(cc.spawn(cc.scaleTo(.5, 1), cc.moveTo(.5, t), cc.rotateTo(.5, 0)), cc.callFunc(function() {
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
this.activateWashBtns();
this.showChangBtns();
}.bind(this))));
e.destroy();
cc.find("Canvas/sink/" + e.name).active = !0;
}.bind(this))));
};
t.prototype.activateFoodBtns = function() {
cc.find("Canvas/refrigerator/refrigerator/open").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !0);
});
cc.find("Canvas/refrigerator/refrigerator/open/drawer").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !0);
});
cc.find("Canvas/refrigerator/refrigerator/open/partition").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !0);
});
};
t.prototype.sleepFoodBtns = function() {
cc.find("Canvas/refrigerator/refrigerator/open").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !1);
});
cc.find("Canvas/refrigerator/refrigerator/open/drawer").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !1);
});
cc.find("Canvas/refrigerator/refrigerator/open/partition").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !1);
});
};
t.prototype.activateSeasoningBtns = function() {
cc.find("Canvas/cabinet").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !0);
});
};
t.prototype.sleepSeaSoningBtns = function() {
cc.find("Canvas/cabinet").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !1);
});
};
t.prototype.activateWashBtns = function() {
cc.find("Canvas/sink").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !0);
});
};
t.prototype.sleepWashBtns = function() {
cc.find("Canvas/sink").children.forEach(function(e) {
e.getComponent(cc.Button) && (e.getComponent(cc.Button).interactable = !1);
});
};
t.prototype.machineBtnClick = function() {
cc.find("Canvas/refrigerator/mixmachine/machine/btn/tipClick") && cc.find("Canvas/refrigerator/mixmachine/machine/btn/tipClick").destroy();
cc.find("Canvas/refrigerator/mixmachine/machine/btn").getComponent(cc.Button).interactable = !1;
cc.find("Canvas/refrigerator/mixmachine/machine").getComponent(cc.AudioSource).play();
cc.find("Canvas/refrigerator/mixmachine/machine/btn/on").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/refrigerator/mixmachine/machine/mix1").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/mix2").active = !0;
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/refrigerator/mixmachine/machine/mix2").active = !1;
cc.find("Canvas/refrigerator/mixmachine/machine/mix3").active = !0;
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/refrigerator/mixmachine/machine").getComponent(cc.AudioSource).stop();
cc.find("Canvas/refrigerator/mixmachine/jiaoban_bg").active = !1;
this.showPlate();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
cc.find("Canvas/tipClick") && (cc.find("Canvas/tipClick").active = !0);
cc.find("Canvas/refrigerator/mixmachine/machine").getComponent(cc.Button).interactable = !0;
var e = cc.instantiate(cc.find("Canvas/refrigerator/mixmachine/machine"));
e.getChildByName("btn").removeComponent(cc.Button);
this.node.addChild(e);
var t = this.node.convertToNodeSpaceAR(cc.find("Canvas/refrigerator/mixmachine/machine").convertToWorldSpaceAR(cc.v2(0, 0)));
e.setPosition(t);
cc.find("Canvas/tipClick").setPosition(t);
cc.find("Canvas/tipClick").zIndex = 1;
cc.find("Canvas/refrigerator/mixmachine/machine").active = !1;
}.bind(this))));
};
t.prototype.machineClick = function(e) {
cc.find("Canvas/tipClick") && (cc.find("Canvas/tipClick").active = !1);
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
var o = 300 - 230 * Math.random(), n = 180 - 60 * Math.random();
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(o, n))), cc.callFunc(function() {
t.getChildByName("lip").active = !1;
t.getChildByName("pourJuice").active = !0;
t.getChildByName("pourJuice").getComponent(cc.AudioSource).play();
t.getChildByName("mix3").runAction(cc.fadeTo(4, 0));
var e = cc.find("Canvas/plate/color").convertToNodeSpaceAR(t.getChildByName("pourJuice").convertToWorldSpaceAR(cc.v2(0, 0)));
this.creatColor(e, 3);
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
t.getChildByName("pourJuice").getComponent(cc.AudioSource).stop();
t.getChildByName("pourJuice").active = !1;
cc.find("Canvas/refrigerator/mixmachine/mask").active = !1;
this.hidePlateCenter();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1e3, 0))), cc.delayTime(2), cc.callFunc(function() {
this.showChangBtns();
t.destroy();
}.bind(this))));
};
t.prototype.creatColor = function(e, t, o) {
cc.loader.loadRes("crazyemoji/prefab/color/" + this.color, cc.Prefab, function(n, c) {
cc.loader.setAutoReleaseRecursively(c, !0);
var a = cc.instantiate(c);
cc.find("Canvas/plate/color").addChild(a);
a.setPosition(e);
a.setScale(0);
this.currentColorNode = a;
this.count = this.count + 1;
if (2 == this.count) {
r.default.getInstance().jumpTips();
var l = i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
l.active = !0;
l.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.colors.push(this.color);
s.default.getInstance().setColors(this.colors);
this.currentColorNode.runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
a.setScale(.1);
}.bind(this)), cc.scaleTo(t, .4), cc.callFunc(function() {
cc.find("Canvas/plate/decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/plate/decorateParticle").getComponent(cc.AudioSource).play();
o && o();
}.bind(this))));
o && cc.director.getActionManager().pauseTarget(this.currentColorNode);
}.bind(this));
};
t.prototype.openDrawer = function() {
cc.find("Canvas/refrigerator/refrigerator/open/drawer/drawer0").getComponent(cc.Button).enabled = !1;
cc.find("Canvas/refrigerator/refrigerator/open/drawer").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-52, -170)), cc.callFunc(function() {
cc.log(cc.find("Canvas/refrigerator/refrigerator/open/drawer/drawer0").getComponent(cc.BlockInputEvents));
cc.log(cc.find("Canvas/refrigerator/refrigerator/open/drawer/potato").getComponent(cc.Button).interactable);
}.bind(this))));
};
t.prototype.closeDrawer = function() {
cc.find("Canvas/refrigerator/refrigerator/open/drawer").children.forEach(function(e) {
"drawer0" == e.name ? e.zIndex = 1 : e.zIndex = 0;
});
cc.find("Canvas/refrigerator/refrigerator/open/drawer").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-52, -100)), cc.callFunc(function() {
cc.find("Canvas/refrigerator/refrigerator/open/drawer/drawer0").getComponent(cc.Button).enabled = !0;
}.bind(this))));
};
return t = __decorate([ u ], t);
}(cc.Component));
o.default = p;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragCE": "SpriteDragCE",
"../common/Script/codebase/TransitionSceneCE": "TransitionSceneCE",
"../common/Script/codebase/utils/CocosHelperCE": "CocosHelperCE",
"../common/Script/compoent/MoveInCE": "MoveInCE",
"./DataConfigCE": "DataConfigCE",
"./ObjectActionCE": "ObjectActionCE",
"./TipManagerCE": "TipManagerCE"
} ],
EatMaskCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c9997jz65ZATqlr6/QQWZcs", "EatMaskCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskCB"), i = e("./MaskDrawCB"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskCB": "CustomMaskCB",
"./MaskDrawCB": "MaskDrawCB"
} ],
EatMaskCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1415rRtiJIHZHo6DTL9BrL", "EatMaskCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskCE"), i = e("./MaskDrawCE"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskCE": "CustomMaskCE",
"./MaskDrawCE": "MaskDrawCE"
} ],
EatMaskCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2297jz65ZATqlr6/QQWZcs", "EatMaskCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskCS"), i = e("./MaskDrawCS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskCS": "CustomMaskCS",
"./MaskDrawCS": "MaskDrawCS"
} ],
EatMaskFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2115rRtiJIHZHo6DTL9BrL", "EatMaskFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskFS"), i = e("./MaskDrawFS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskFS": "CustomMaskFS",
"./MaskDrawFS": "MaskDrawFS"
} ],
EatMaskGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1915rRtiJIHZHo6DTL9BrL", "EatMaskGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskGL"), i = e("./MaskDrawGL"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskGL": "CustomMaskGL",
"./MaskDrawGL": "MaskDrawGL"
} ],
EatMaskGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "18fb6MtfsJAQJWdzQLw5BXN", "EatMaskGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskGS"), i = e("./MaskDrawGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskGS": "CustomMaskGS",
"./MaskDrawGS": "MaskDrawGS"
} ],
EatMaskHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1197jz65ZATqlr6/QQWZcs", "EatMaskHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskHC"), i = e("./MaskDrawHC"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskHC": "CustomMaskHC",
"./MaskDrawHC": "MaskDrawHC"
} ],
EatMaskMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a91f82yli9GFLPxWawfaGcS", "EatMaskMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskMS"), i = e("./MaskDrawMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskMS": "CustomMaskMS",
"./MaskDrawMS": "MaskDrawMS"
} ],
EatMaskRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7715rRtiJIHZHo6DTL9BrL", "EatMaskRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskRP"), i = e("./MaskDrawRP"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskRP": "CustomMaskRP",
"./MaskDrawRP": "MaskDrawRP"
} ],
EatMaskRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1297jz65ZATqlr6/QQWZcs", "EatMaskRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskRS"), i = e("./MaskDrawRS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskRS": "CustomMaskRS",
"./MaskDrawRS": "MaskDrawRS"
} ],
EatMaskSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1397jz65ZATqlr6/QQWZcs", "EatMaskSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskSD"), i = e("./MaskDrawSD"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMaskSD": "CustomMaskSD",
"./MaskDrawSD": "MaskDrawSD"
} ],
EatMask: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1e815rRtiJIHZHo6DTL9BrL", "EatMask");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMask"), i = e("./MaskDraw"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.backdraw = new i.default();
return t;
}
t.prototype.start = function() {};
t.prototype.touchBegin = function(e) {};
t.prototype.touchMove = function(e) {};
t.prototype.touchEnd = function(e) {
if (this.enabledInHierarchy) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
this.backdraw.addCircle(t);
var o = this.getComponent(cc.AudioSource);
o && o.play();
if (this.particleNode) {
this.particleNode.setPosition(this.node.convertToNodeSpaceAR(t));
this.particleNode.getComponent(cc.ParticleSystem).resetSystem();
}
}
};
t.prototype.empty = function() {
this.draw.empty();
};
__decorate([ s(i.default) ], t.prototype, "backdraw", void 0);
return t = __decorate([ a ], t);
}(n.default);
o.default = r;
cc._RF.pop();
}, {
"./CustomMask": "CustomMask",
"./MaskDraw": "MaskDraw"
} ],
EnterGame: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "03586tkjahIq4ccxFcmBMyO", "EnterGame");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/CocosHelper_my"), i = e("../common/uitls/TransitionScene_my"), c = (e("./HttpUtils"), 
cc._decorator), a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.canEnter = !1;
t.numberGet = 0;
t.successAddWeb = !1;
t.playMusicAudio = null;
return t;
}
t.prototype._hideNativeSplash = function() {
if (cc.sys.os == cc.sys.OS_ANDROID) {
cc.log("=====static hide ");
jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "hideSplash", "()V");
}
};
t.prototype.start = function() {
var e = this;
if (cc.sys.platform == cc.sys.ANDROID) {
(t = n.CocosHelper.findNode(cc.Canvas.instance.node, "android")).active = !0;
if (o = t.getChildByName("logo")) {
(r = o.getComponent("MoveIn_my")) && (r.actionCallBack = function() {
setTimeout(function() {}, 2e3);
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "loading");
e.active = !0;
var t = 0;
e.runAction(cc.repeatForever(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
t += 1;
for (var o = 1; o < 5; o++) {
var n = e.getChildByName("dian" + o);
n.active = o <= t % 4 + 1;
}
}))));
});
}
} else {
var t;
(t = n.CocosHelper.findNode(cc.Canvas.instance.node, "ios")).active = !0;
var o = t.getChildByName("logo"), c = t.getChildByName("kids0"), a = t.getChildByName("kids1"), s = t.getChildByName("kids2");
if (o) {
var r = o.getComponent("MoveIn_my");
setTimeout(function() {
s.active = !1;
a.active = !0;
c.active = !1;
}, 1e3);
setTimeout(function() {
s.active = !0;
a.active = !1;
c.active = !1;
}, 2e3);
r && (r.actionCallBack = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "loading");
e.active = !0;
var t = 0;
e.runAction(cc.repeatForever(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
t += 1;
for (var o = 1; o < 5; o++) {
var n = e.getChildByName("dian" + o);
n.active = o <= t % 4 + 1;
}
}))));
});
}
}
var l = "fromHall", d = "home";
if (10 == cc.sys.localStorage.getItem(l)) {
console.log("大厅 显示全屏");
console.log(cc.sys.localStorage.getItem(l));
cc.sys.localStorage.setItem(l, 11);
setTimeout(function() {
cc.sys.isMobile && jsToCPP.getInstance().showInterstitial();
}, 3500);
d = "chooseNew";
}
this.scheduleOnce(function() {
console.log("_hideNativeSplash");
e._hideNativeSplash();
}, 1);
console.log("Loading onLoad");
cc.audioEngine.stopMusic();
cc.audioEngine.stopAllEffects();
cc.loader.loadRes("bg", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
});
cc.sys.isMobile && jsToCPP.getInstance().setEmailContentAndTitle("Rainbow Glitter Slime", "Have crazy slime fun with Galaxy Slime & Rainbow Slime & Rainbow Poop Slime");
this.scheduleOnce(function() {
i.default.changeScene(d, "temp");
}, 5);
};
t.prototype.onLoad = function() {};
t.isFirst = !1;
__decorate([ s(cc.AudioClip) ], t.prototype, "playMusicAudio", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"../common/uitls/TransitionScene_my": "TransitionScene_my",
"./HttpUtils": "HttpUtils"
} ],
EventListenerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9725alZLWVDCrRzPZDugHAa", "EventListenerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b140eBcM4BLZ5uUULN2wJ2d", "EventListenerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b225alZLWVDCrRzPZDugHAa", "EventListenerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b210eBcM4BLZ5uUULN2wJ2d", "EventListenerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b190eBcM4BLZ5uUULN2wJ2d", "EventListenerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4871bFZ4BlPRJ3CkJ6O9vW1", "EventListenerGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b115alZLWVDCrRzPZDugHAa", "EventListenerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2a205KRl2xN7puSFrFnCtS7", "EventListenerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b770eBcM4BLZ5uUULN2wJ2d", "EventListenerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b125alZLWVDCrRzPZDugHAa", "EventListenerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListenerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b135alZLWVDCrRzPZDugHAa", "EventListenerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
EventListener: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4720eBcM4BLZ5uUULN2wJ2d", "EventListener");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e(e, t, o) {
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === o && (o = null);
this.eventName = "";
this.eventHander = new cc.Component.EventHandler();
this.isEnable = !0;
this.isSwallow = !1;
if (null != e && null != t) {
this.eventHander.target = e.node;
var n = cc.js.getClassName(e), i = n.lastIndexOf(".");
i >= 0 && (n = n.slice(i + 1));
this.eventHander.component = n;
this.eventHander.handler = t;
}
null != o && (this.eventName = o);
}
e.emitEvents = function(e, t) {
for (var o = [], n = 2; n < arguments.length; n++) o[n - 2] = arguments[n];
for (var i = 0, c = t; i < c.length; i++) {
var a = c[i];
if (a.emit.apply(a, [ e ].concat(o))) break;
}
};
e.prototype.emit = function(e) {
for (var t = [], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
if ("" != e) {
if (e != this.eventName) return !1;
if (!this.isEnable) return !1;
if (null == this.eventHander) return !1;
var n = t.slice();
n.push(this);
this.eventHander.emit(n);
return this.isSwallow;
}
};
__decorate([ c({
override: !0,
tooltip: "事件名称"
}) ], e.prototype, "eventName", void 0);
__decorate([ c(cc.Component.EventHandler) ], e.prototype, "eventHander", void 0);
__decorate([ c() ], e.prototype, "isEnable", void 0);
__decorate([ c({
tooltip: "是否中断其它监听"
}) ], e.prototype, "isSwallow", void 0);
return e = __decorate([ i("EventListener") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
FuseControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1964wZWjNFQq+DHhx0VxPI", "FuseControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./HandMoveEventGL"), i = e("./HandTouchEventGL"), c = e("../common/Script/codebase/utils/CocosHelperGL"), a = e("./DragonCompoentGL"), s = e("../common/Script/codebase/TransitionSceneGL"), r = e("./TipManagerGL"), l = e("../common/Script/compoent/MoveInGL"), d = e("../common/Script/ads/showLaodingGL"), u = cc._decorator, p = u.ccclass, h = u.property, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.dradonNode = null;
t.slimeNode = null;
t.isPulling = !0;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("slime_blue").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("handLeft").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-300, 0)), cc.callFunc(function() {
this.node.getChildByName("handLeft").getComponent(n.default).init();
this.node.getChildByName("arrow_left").active = !0;
}.bind(this))));
this.node.getChildByName("handRight").runAction(cc.sequence(cc.moveTo(.5, cc.v2(300, 0)), cc.callFunc(function() {
this.node.getChildByName("handRight").getComponent(n.default).init();
this.node.getChildByName("arrow_right").active = !0;
}.bind(this))));
}.bind(this);
};
t.prototype.moveFinish = function(e, t) {
if (e && t) {
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/slime_pink").active = !1;
cc.find("Canvas/slime_blue").active = !1;
cc.find("Canvas/slime_yellow").active = !1;
cc.find("Canvas/handLeft").active = !1;
cc.find("Canvas/handRight").active = !1;
cc.find("Canvas/slime").active = !0;
this.node.getChildByName("hand").active = !0;
this.node.getChildByName("hand").getComponent(i.default).init(cc.find("Canvas/slime/slime0"));
}
};
t.prototype.mixFinish = function() {
r.default.getInstance().playAudioEffect();
this.dradonNode = cc.find("Canvas/slime/dragon");
this.slimeNode = cc.find("Canvas/slime/slime1");
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(i.default).destroyTouchEvent();
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/slime/slime0").setScale(1);
cc.find("Canvas/slime/slime0").active = !1;
cc.find("Canvas/slime/dragon").active = !0;
this.node.getChildByName("left_hand0").active = !0;
this.node.getChildByName("left_hand1").active = !0;
this.node.getChildByName("right_hand0").active = !0;
this.node.getChildByName("right_hand1").active = !0;
this.node.getChildByName("arrow_left1").active = !0;
this.node.getChildByName("arrow_right1").active = !0;
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = this.dradonNode, o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), n = 0; n < e.length; n++) {
var i = e[n], s = c.CocosHelper.findNode(cc.Canvas.instance.node, i), r = s.getComponent(a.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == i ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == i ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 2; h <= 6; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
this.node.getChildByName("arrow_left1").active = !1;
this.node.getChildByName("arrow_right1").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
}.bind(this));
cc.find("Canvas").on("Pulling", function(e, t, o) {
g.isPulling = !0;
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
}.bind(this));
cc.find("Canvas").on("PullEnd", function(e, t, o) {
g.isPulling = !1;
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.log(g.isPulling);
g.isPulling || g.hideParticle();
})));
}.bind(this));
this.startAction();
};
t.prototype.removeHandCm = function() {
cc.find("Canvas").off("PullTouch");
cc.find("Canvas").off("Pulling");
cc.find("Canvas").off("PullEnd");
};
t.prototype.startAction = function() {
for (var e = this.dradonNode.getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(3 * t), cc.callFunc(function() {
r.default.getInstance().jumpTips();
cc.find("Canvas/left_hand0"), cc.find("Canvas/right_hand0"), cc.find("Canvas/left_hand1"), 
cc.find("Canvas/right_hand1");
if (6 != t) {
var o = e.getSlot("motion" + t + "_slime"), n = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
n.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
this.hideParticle();
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var i = c.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
i.active = !0;
i.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, n = 1; n < 7; n++) t(n);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = c.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
c.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.enterNextScence = function() {
d.default.getInstance().loadingDoneCallback = function() {
d.default.getInstance().loadingDoneCallback = null;
s.default.changeScene("slapSlimeGL", 12);
}.bind(this);
d.default.getInstance().showAds(!1);
};
__decorate([ h({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ p ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../common/Script/ads/showLaodingGL": "showLaodingGL",
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./DragonCompoentGL": "DragonCompoentGL",
"./HandMoveEventGL": "HandMoveEventGL",
"./HandTouchEventGL": "HandTouchEventGL",
"./TipManagerGL": "TipManagerGL"
} ],
FuseControllerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7764wZWjNFQq+DHhx0VxPI", "FuseControllerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./HandTouchEventRP"), i = e("../common/Script/codebase/utils/CocosHelperRP"), c = e("./DragonCompoentRP"), a = e("../common/Script/codebase/TransitionSceneRP"), s = e("./TipManagerRP"), r = e("../common/Script/codebase/SpriteDrag/SpriteDragRP"), l = e("./MyMoveInRP"), d = cc._decorator, u = d.ccclass, p = d.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.dradonNode = null;
t.slimeNode = null;
t.isPulling = !0;
t.color = null;
t.mixCount = 0;
t.nameList = null;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/blue").getComponent(l.default).actionCallBack = function() {
this.activateSpriteDrag();
cc.find("Canvas/tipMove").active = !0;
}.bind(this);
this.nameList = [ "blue", "pink", "green", "yellow" ];
};
t.prototype.slimeTouchStart = function(e) {
var t = e.target;
this.sleepSpriteDrag(t.name);
};
t.prototype.slimeTouchEnd = function(e) {
cc.find("Canvas/tipMove").active = !1;
var t = e.target;
t.setScale(1);
this.sleepSpriteDrag();
t.runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, -100)), cc.scaleTo(.5, 1)), cc.callFunc(function() {
cc.find("Canvas/slime_" + t.name).active = !0;
this.color = t.name;
t.active = !1;
cc.find("Canvas/hand").active = !0;
cc.find("Canvas/hand").setPosition(cc.v2(0, -500));
cc.find("Canvas/hand").runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(0, -300)), cc.scaleTo(.5, .8)), cc.callFunc(function() {
cc.find("Canvas/hand").getComponent(n.default).init(cc.find("Canvas/slime_" + t.name));
cc.find("Canvas/finger").active = !0;
}.bind(this))));
}.bind(this))));
};
t.prototype.sleepSpriteDrag = function(e) {
this.nameList.forEach(function(t) {
cc.find("Canvas/" + t).getComponent(r.default).enabled = !!e && t == e;
});
};
t.prototype.activateSpriteDrag = function() {
this.nameList.forEach(function(e) {
cc.find("Canvas/" + e).getComponent(r.default).enabled = !0;
});
};
t.prototype.mixFinish = function(e) {
s.default.getInstance().jumpTips();
var t = e.node;
cc.find("Canvas/hand").getComponent(n.default).destroyTouchEvent();
cc.find("Canvas/hand").getComponent(cc.Animation).setCurrentTime(0);
cc.find("Canvas/hand").getComponent(cc.Animation).stop();
cc.find("Canvas/hand").active = !1;
var o = t.parent.convertToNodeSpaceAR(cc.find("Canvas/fuseSlime/" + this.color).convertToWorldSpaceAR(cc.v2(0, 0)));
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, o)), cc.callFunc(function() {
cc.find("Canvas/fuseSlime/" + this.color).active = !0;
this.activateSpriteDrag();
t.active = !1;
this.mixCount = this.mixCount + 1;
4 == this.mixCount && cc.find("Canvas/fuseSlime").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 90), cc.moveTo(.5, cc.v2(0, 0))), cc.callFunc(function() {
cc.find("Canvas/dragon").active = !0;
this.dradonNode = cc.find("Canvas/dragon");
cc.find("Canvas/left_hand0").active = !0;
cc.find("Canvas/left_hand1").active = !0;
cc.find("Canvas/right_hand0").active = !0;
cc.find("Canvas/right_hand1").active = !0;
this.node.getChildByName("arrow_left").active = !0;
this.node.getChildByName("arrow_right").active = !0;
this.addHandCm();
cc.find("Canvas/fuseSlime").active = !1;
}.bind(this))));
}.bind(this))));
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = this.dradonNode, o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), n = 0; n < e.length; n++) {
var a = e[n], s = i.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(c.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
o.getSlot("motion0_slime").displayIndex = 0;
for (var h = 1; h <= 6; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
this.node.getChildByName("arrow_left").active = !1;
this.node.getChildByName("arrow_right").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
}.bind(this));
cc.find("Canvas").on("Pulling", function(e, t, o) {
g.isPulling = !0;
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
}.bind(this));
cc.find("Canvas").on("PullEnd", function(e, t, o) {
g.isPulling = !1;
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.log(g.isPulling);
g.isPulling || g.hideParticle();
})));
}.bind(this));
this.startAction();
};
t.prototype.removeHandCm = function() {
cc.find("Canvas").off("PullTouch");
cc.find("Canvas").off("Pulling");
cc.find("Canvas").off("PullEnd");
};
t.prototype.startAction = function() {
for (var e = this.dradonNode.getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(3 * t), cc.callFunc(function() {
s.default.getInstance().jumpTips();
cc.find("Canvas/left_hand0"), cc.find("Canvas/right_hand0"), cc.find("Canvas/left_hand1"), 
cc.find("Canvas/right_hand1");
if (6 != t) {
var o = e.getSlot("motion" + t + "_slime"), n = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
n.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
this.hideParticle();
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var c = i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
c.active = !0;
c.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, n = 0; n < 7; n++) t(n);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
i.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.enterNextScence = function() {
a.default.changeScene("coilSlimeRP", 7);
};
__decorate([ p({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ u ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragRP": "SpriteDragRP",
"../common/Script/codebase/TransitionSceneRP": "TransitionSceneRP",
"../common/Script/codebase/utils/CocosHelperRP": "CocosHelperRP",
"./DragonCompoentRP": "DragonCompoentRP",
"./HandTouchEventRP": "HandTouchEventRP",
"./MyMoveInRP": "MyMoveInRP",
"./TipManagerRP": "TipManagerRP"
} ],
FuseControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1264wZWjNFQq+DHhx0VxPI", "FuseControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInRS"), i = e("./HandMoveEventRS"), c = e("./HandTouchEventRS"), a = e("../common/Script/codebase/utils/CocosHelperRS"), s = e("./DragonCompoentRS"), r = e("./DragonBoneActionsRS"), l = e("./SlimeTouchEventRS"), d = e("../common/Script/codebase/TransitionSceneRS"), u = e("./TipManagerRS"), p = cc._decorator, h = p.ccclass, f = p.property, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.dradonNode = null;
t.slimeNode = null;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.onLoad = function() {
a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 100;
a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_moregame").zIndex = 100;
a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_back").zIndex = 100;
this.node.getChildByName("slime_blue").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("handLeft").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-300, 0)), cc.callFunc(function() {
this.node.getChildByName("handLeft").getComponent(i.default).init();
this.node.getChildByName("arrow_left").active = !0;
}.bind(this))));
this.node.getChildByName("handRight").runAction(cc.sequence(cc.moveTo(.5, cc.v2(300, 0)), cc.callFunc(function() {
this.node.getChildByName("handRight").getComponent(i.default).init();
this.node.getChildByName("arrow_right").active = !0;
}.bind(this))));
}.bind(this);
};
t.prototype.moveFinish = function(e, t) {
if (e && t) {
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/slime_pink").active = !1;
cc.find("Canvas/slime_blue").active = !1;
cc.find("Canvas/slime_yellow").active = !1;
cc.find("Canvas/handLeft").active = !1;
cc.find("Canvas/handRight").active = !1;
cc.find("Canvas/slime").active = !0;
this.node.getChildByName("hand").active = !0;
this.node.getChildByName("hand").getComponent(c.default).init(cc.find("Canvas/slime/slime0"));
}
};
t.prototype.mixFinish = function() {
u.default.getInstance().playAudioEffect();
this.dradonNode = cc.find("Canvas/slime/dragon");
this.slimeNode = cc.find("Canvas/slime/slime1");
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(c.default).destroyTouchEvent();
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/slime/slime0").setScale(1);
cc.find("Canvas/slime/slime0").active = !1;
cc.find("Canvas/slime/dragon").active = !0;
this.node.getChildByName("left_hand0").active = !0;
this.node.getChildByName("left_hand1").active = !0;
this.node.getChildByName("right_hand0").active = !0;
this.node.getChildByName("right_hand1").active = !0;
this.node.getChildByName("arrow_left1").active = !0;
this.node.getChildByName("arrow_right1").active = !0;
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = this.dradonNode, o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), n = 0; n < e.length; n++) {
var i = e[n], c = a.CocosHelper.findNode(cc.Canvas.instance.node, i), r = c.getComponent(s.default), l = c.getPosition(), d = l.add(cc.v2());
d.x = c.getParent().convertToNodeSpaceAR("left_hand0" == i ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == i ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 2; h <= 3; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
this.node.getChildByName("arrow_left1").active = !1;
this.node.getChildByName("arrow_right1").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
}.bind(this));
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
}.bind(this));
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.hideParticle();
}.bind(this));
this.startAction();
};
t.prototype.removeHandCm = function() {
cc.find("Canvas").off("PullTouch");
cc.find("Canvas").off("Pulling");
cc.find("Canvas").off("PullEnd");
};
t.prototype.startAction = function() {
for (var e = this.dradonNode, t = e.getComponent(dragonBones.ArmatureDisplay).armature(), o = function(o) {
n.actionNode.runAction(cc.sequence(cc.delayTime(3 * o), cc.callFunc(function() {
u.default.getInstance().jumpTips();
var n = cc.find("Canvas/left_hand0"), i = cc.find("Canvas/right_hand0"), c = cc.find("Canvas/left_hand1"), a = cc.find("Canvas/right_hand1");
if (3 != o) {
var d = t.getSlot("motion" + o + "_slime"), p = t.getSlot("motion" + (o + 1) + "_slime");
console.log("motion2_slime" + (o + 1));
p.displayIndex = 0;
console.log("motion1_slime" + o);
d.displayIndex = -1;
} else {
this.hideParticle();
var h = t.getBone("slimel0"), f = r.dragonBoneScaleTo(.5, .4, 1);
f.setScaleBone(h);
this.node.runAction(f);
var g = t.getBone("slimer0"), m = r.dragonBoneScaleTo(.5, .4, 1);
m.setScaleBone(g);
this.node.runAction(m);
n.getComponent(s.default).destroyTouchEvent();
i.getComponent(s.default).destroyTouchEvent();
this.removeHandCm();
n.runAction(cc.moveTo(.5, -150, -270));
c.runAction(cc.moveTo(.5, -150, -270));
i.runAction(cc.moveTo(.5, 150, -270));
a.runAction(cc.moveTo(.5, 150, -270));
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
n.active = !1;
c.active = !1;
i.active = !1;
a.active = !1;
e.active = !1;
this.slimeNode.active = !0;
this.slimeNode.getChildByName("handRight").runAction(cc.moveTo(.5, cc.v2(170, -130)));
this.slimeNode.getChildByName("handLeft").runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, -700)), cc.callFunc(function() {
this.slimeNode.getComponent(l.default).registerTouchEvent();
this.node.getChildByName("hint").active = !0;
}.bind(this))));
}.bind(this))));
}
}.bind(n))));
}, n = this, i = 1; i < 4; i++) o(i);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
a.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.backLastScence = function() {
d.default.changeScene("dyeSlimeRS");
};
__decorate([ f({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ h ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../common/Script/MoveInRS": "MoveInRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"../common/Script/codebase/utils/CocosHelperRS": "CocosHelperRS",
"./DragonBoneActionsRS": "DragonBoneActionsRS",
"./DragonCompoentRS": "DragonCompoentRS",
"./HandMoveEventRS": "HandMoveEventRS",
"./HandTouchEventRS": "HandTouchEventRS",
"./SlimeTouchEventRS": "SlimeTouchEventRS",
"./TipManagerRS": "TipManagerRS"
} ],
GameData: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bdb6c4xXc1OqK2XqBXvIgPY", "GameData");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, e("./SubgameManager")), a = function() {
function e() {
this.mapGameDataItems = new Map();
this.selectGameName = "";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.initData = function(e) {
var t = e.GameName, o = "new" == e.isNew, n = Number(e.Index), i = e.UpdateDate, c = "yes" == e.isUpStore, a = new s(t, o, n, i, c);
console.log(t + "--" + o + "--" + n + "---" + i + c);
this.mapGameDataItems.set(t, a);
};
e.prototype.clearData = function() {
this.mapGameDataItems.clear();
};
e.prototype.getIndexFromName = function(e) {
var t = this.mapGameDataItems.get(e), o = 0;
t && (o = t.Index);
return o;
};
e.prototype.getIsUpStoreByName = function(e) {
var t = this.mapGameDataItems.get(e), o = !1;
t && (o = t.isUpStore);
return o;
};
e.prototype.getIsNewFromName = function(e) {
console.log("getIsNewFromName" + e);
var t = this.mapGameDataItems.get(e);
console.log("getIsNewFromName" + t);
var o = !1;
t && (o = t.isNew);
console.log("getIsNewFromName" + o);
c.isSubgameDownLoad(e) && (o = !1);
return o;
};
e.prototype.getDateFromName = function(e) {
var t = this.mapGameDataItems.get(e), o = "";
t && (o = t.UpdateDate);
return o;
};
e.prototype.getGameNameFormIndex = function(e) {
var t = this, o = "";
this.mapGameDataItems.forEach(function(n) {
console.log(n.Index + "---" + e);
if (n.Index == e) {
o = n.GameName;
console.log(o + "element.Index--\x3e" + e);
console.log(t.mapGameDataItems.get(o));
}
});
return o;
};
e.prototype.checkIsUpTo = function(e) {
return 0;
};
e.prototype.showPop = function(e) {
cc.loader.loadRes("pop_bg", cc.Prefab, function(t, o) {
if (t) console.log(t + ""); else {
var n = cc.instantiate(o);
n.parent = cc.Canvas.instance.node;
n.position = cc.v2(0, 0);
n.getChildByName("label").getComponent(cc.Label).string = e;
}
});
};
e.prototype.setSelectGameName = function(e) {
this.selectGameName = e;
};
e.prototype.getSelectGameName = function() {
return this.selectGameName;
};
var t;
return e = t = __decorate([ i ], e);
}();
o.default = a;
var s = function() {
return function(e, t, o, n, i) {
this.GameName = e;
this.isNew = t;
this.UpdateDate = n;
this.Index = o;
this.isUpStore = i;
};
}();
cc._RF.pop();
}, {
"./SubgameManager": "SubgameManager"
} ],
GirlDrogonCompoentCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d12b7phkxlJiK2RjARFQvQy", "GirlDrogonCompoentCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DragonCompoentCB"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./DragonCompoentCB": "DragonCompoentCB"
} ],
HallController: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "eb570CsVZVCwIuwdnaH5Skq", "HallController");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/CocosHelper_my"), i = e("./VersionMG"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.touchA = null;
t.nodeNameIndex = -1;
t.nodeName = [ "chocolate_slime", "glitter_slime", "batter_slime", "rainbow_slime", "dark_slime", "makeup_slime", "flower_slime", "crazy_slime", "rainbowpoop_slime", "galaxy_slime", "newVersion", "mermaid_slime", "succlunt_slime", "craxy_emoji_slime", "unicorn_slime", "floam_slime", "colar_glow_slime" ];
t.stPos = cc.v2();
t.order = 1e3;
t.touchArrowBool = !1;
t._pageIndex = 0;
return t;
}
t.prototype.start = function() {
i.default.getInstance().calIsToPopVerDialog();
console.log("Loading onLoad");
cc.audioEngine.stopMusic();
cc.loader.loadRes("bg", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
});
n.CocosHelper.findNode(cc.Canvas.instance.node, "arrows1").runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "arrows0").runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(0, -10)), cc.moveBy(.5, cc.v2(0, 10)))));
jsToCPP.getInstance().showBanner();
var e = cc.sys.localStorage.getItem("pageViewLocal");
e || (e = 3);
console.log("pageViewLocal" + e);
};
t.prototype.touchUrl = function() {
cc.sys.platform == cc.sys.ANDROID ? jsToCPP.getInstance().openUrl("https://www.kidskitchenfunmedia.com/privacys/") : jsToCPP.getInstance().openUrl("https://www.crazykidsgamesmedia.com/privacys/");
cc.PageViewIndicator;
};
t.prototype.pageViewClick = function(e, t) {
var o = e.node;
this._pageIndex = o.getComponent(cc.PageView).getCurrentPageIndex();
cc.log("page index" + this._pageIndex);
this.touchA && cc.audioEngine.playEffect(this.touchA, !1);
};
t.prototype.touchArrow = function(e, t) {
console.log(t);
var o = "down" == t ? 1 : -1;
console.log(o);
console.log(this._pageIndex);
var i = this._pageIndex + o;
if (!(i < 0 || i > 16)) {
console.log(i);
n.CocosHelper.findNode(cc.Canvas.instance.node, "book_bg").getChildByName("pageview").getComponent(cc.PageView).scrollToPage(i, .3);
this.touchA && cc.audioEngine.playEffect(this.touchA, !1);
}
};
__decorate([ s(cc.Label) ], t.prototype, "label", void 0);
__decorate([ s ], t.prototype, "text", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "touchA", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"./VersionMG": "VersionMG"
} ],
HandClickCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b146bPm6FlLBKNrODYZMwl+", "HandClickCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./HandTouchEventCE"), i = e("./TipManagerCE"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNode = null;
t.isLeft = !0;
t.showNode = null;
t.nextNode = null;
return t;
}
t.prototype.handClick = function(e, t) {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
cc.find("Canvas/tipClick") && cc.find("Canvas/tipClick").destroy();
var o = -30;
this.isLeft && (o = 30);
this.moveNode.runAction(cc.moveBy(.2, cc.v2(o, 0)));
this.node.runAction(cc.sequence(cc.moveBy(.2, cc.v2(o, 0)), cc.callFunc(function() {
cc.find("Canvas/slime/slime0/slime0").active = !0;
this.showNode.parent.children.forEach(function(e) {
e.active = !1;
});
this.showNode.active = !0;
this.node.parent.active = !1;
this.showNextHand();
}.bind(this))));
};
t.prototype.showNextHand = function() {
if (this.nextNode) {
var e = 300;
this.isLeft && (e = -300);
this.nextNode.getChildByName("hand0").runAction(cc.moveBy(.5, cc.v2(e, 0)));
this.nextNode.getChildByName("hand1").runAction(cc.sequence(cc.moveBy(.5, cc.v2(e, 0)), cc.callFunc(function() {
cc.find("Canvas/slime/slime0/slime0").active = !1;
this.nextNode.getChildByName("slime").active = !0;
this.nextNode.getChildByName("hand1").getComponent(cc.Button).interactable = !0;
}.bind(this))));
} else {
i.default.getInstance().jumpTips();
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/hand").getComponent(n.default).init(cc.find("Canvas/slime"));
}
};
__decorate([ s(cc.Node) ], t.prototype, "moveNode", void 0);
__decorate([ s ], t.prototype, "isLeft", void 0);
__decorate([ s(cc.Node) ], t.prototype, "showNode", void 0);
__decorate([ s(cc.Node) ], t.prototype, "nextNode", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"./HandTouchEventCE": "HandTouchEventCE",
"./TipManagerCE": "TipManagerCE"
} ],
HandMoveEventGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19acEWjwVHTY44wLuSBCD/", "HandMoveEventGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./FuseControllerGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNode = null;
t.nodePos = null;
t.initPos = null;
t.isFinish = null;
return t;
}
o = t;
t.prototype.init = function() {
this.nodePos = this.node.getPosition();
this.initPos = this.node.getPosition();
this.registerTouchEvent();
this.isFinish = !1;
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {};
t.prototype.onTouchMove = function(e) {
var t = e.getTouches(), i = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), c = this.node.convertToNodeSpaceAR(t[0].getLocation()), a = null;
a = "handLeft" == this.node.name ? c.sub(i) : i.sub(c);
this.node.x = this.nodePos.x - a.x;
var s = 0, r = 0, l = this.node.getPosition();
if ("handLeft" == this.node.name) {
r = -180;
s = -300;
l.x < s && (l.x = s);
if (l.x > r) {
l.x = r;
this.isFinish = !0;
cc.find("Canvas/arrow_left").active = !1;
var d = cc.find("Canvas/handLeft").getComponent(o).getIsFinish(), u = cc.find("Canvas/handRight").getComponent(o).getIsFinish();
cc.find("Canvas").getComponent(n.default).moveFinish(d, u);
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
this.destroyTouchEvent();
}
} else {
r = 300;
s = 180;
if (l.x < s) {
l.x = s;
this.isFinish = !0;
cc.find("Canvas/arrow_right").active = !1;
d = cc.find("Canvas/handLeft").getComponent(o).getIsFinish(), u = cc.find("Canvas/handRight").getComponent(o).getIsFinish();
cc.find("Canvas").getComponent(n.default).moveFinish(d, u);
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
this.destroyTouchEvent();
}
l.x > r && (l.x = r);
}
this.node.setPosition(l);
this.moveNode.setPosition(l);
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.nodePos = this.node.getPosition();
};
t.prototype.getIsFinish = function() {
return this.isFinish;
};
var o;
__decorate([ a(cc.Node) ], t.prototype, "moveNode", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./FuseControllerGL": "FuseControllerGL"
} ],
HandMoveEventRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12acEWjwVHTY44wLuSBCD/", "HandMoveEventRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./FuseControllerRS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveNode = null;
t.nodePos = null;
t.initPos = null;
t.isFinish = null;
return t;
}
o = t;
t.prototype.init = function() {
this.nodePos = this.node.getPosition();
this.initPos = this.node.getPosition();
this.registerTouchEvent();
this.isFinish = !1;
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {};
t.prototype.onTouchMove = function(e) {
var t = e.getTouches(), i = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), c = this.node.convertToNodeSpaceAR(t[0].getLocation()), a = null;
a = "handLeft" == this.node.name ? c.sub(i) : i.sub(c);
this.node.x = this.nodePos.x - a.x;
var s = 0, r = 0, l = this.node.getPosition();
if ("handLeft" == this.node.name) {
r = -180;
s = -300;
l.x < s && (l.x = s);
if (l.x > r) {
l.x = r;
this.isFinish = !0;
cc.find("Canvas/arrow_left").active = !1;
var d = cc.find("Canvas/handLeft").getComponent(o).getIsFinish(), u = cc.find("Canvas/handRight").getComponent(o).getIsFinish();
cc.find("Canvas").getComponent(n.default).moveFinish(d, u);
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
this.destroyTouchEvent();
}
} else {
r = 300;
s = 180;
if (l.x < s) {
l.x = s;
this.isFinish = !0;
cc.find("Canvas/arrow_right").active = !1;
d = cc.find("Canvas/handLeft").getComponent(o).getIsFinish(), u = cc.find("Canvas/handRight").getComponent(o).getIsFinish();
cc.find("Canvas").getComponent(n.default).moveFinish(d, u);
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
this.destroyTouchEvent();
}
l.x > r && (l.x = r);
}
this.node.setPosition(l);
this.moveNode.setPosition(l);
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.nodePos = this.node.getPosition();
};
t.prototype.getIsFinish = function() {
return this.isFinish;
};
var o;
__decorate([ a(cc.Node) ], t.prototype, "moveNode", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./FuseControllerRS": "FuseControllerRS"
} ],
HandTouchEventCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "93c380e+5ZEEKTtfG57ebeh", "HandTouchEventCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./StickControllerCB"), i = e("./TipManagerCB"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
t.isFirst = !0;
t.foamNode = null;
return t;
}
t.prototype.init = function() {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = cc.find("Canvas/box/slime");
this.node.runAction(cc.sequence(cc.delayTime(7), cc.callFunc(function() {
i.default.getInstance().playAudioEffect();
this.isFirst = !1;
cc.find("Canvas").getComponent(n.default).showDragon();
this.stopAction();
this.destroyTouchEvent();
}.bind(this))));
cc.director.getActionManager().pauseTarget(this.node);
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/finger").active = !1;
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
};
t.prototype.playAction = function() {
cc.director.getActionManager().resumeTarget(this.node);
var e = cc.fadeTo(6, 255);
e.setTag(0);
if (this.isFirst) {
this.foamNode = cc.find("Canvas/box/slime/foam0");
this.foamNode.active = !0;
this.foamNode.getActionByTag(0) ? cc.director.getActionManager().resumeTarget(this.foamNode) : this.foamNode.runAction(e);
} else {
this.foamNode = cc.find("Canvas/box/slime/foam1");
this.foamNode.active = !0;
this.foamNode.getActionByTag(0) ? cc.director.getActionManager().resumeTarget(this.foamNode) : this.foamNode.runAction(e);
}
var t = cc.scaleTo(.5, 1.1, .9), o = cc.scaleTo(.5, .9, 1.1), n = cc.callFunc(function() {
this.node.getComponent(cc.AudioSource).play();
}.bind(this));
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(t, n, o, n)));
this.node.getComponent(cc.Animation).getAnimationState("rub").isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("rub");
};
t.prototype.stopAction = function() {
cc.director.getActionManager().pauseTarget(this.foamNode);
cc.director.getActionManager().pauseTarget(this.node);
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"./StickControllerCB": "StickControllerCB",
"./TipManagerCB": "TipManagerCB"
} ],
HandTouchEventCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1471dll5FK+6VFf4bDK9/p", "HandTouchEventCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentCE"), i = e("./TipManagerCE"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function(e) {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = e;
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(4), cc.callFunc(function() {
i.default.getInstance().jumpTips();
}.bind(this)))));
cc.director.getActionManager().pauseTarget(this.node);
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.find("Canvas/decorate").active = !0;
this.playAction();
cc.find("Canvas/finger") && cc.find("Canvas/finger").destroy();
this.mixtureNode.getComponent(n.default).startMix();
cc.director.getActionManager().resumeTarget(this.node);
};
t.prototype.onTouchMove = function(e) {
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getLocation());
this.node.getBoundingBox().contains(o) && this.node.getChildByName("tail").setPosition(o);
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
cc.director.getActionManager().pauseTarget(this.node);
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
var e = cc.scaleTo(.5, 1.05, .95), t = cc.scaleTo(.5, .95, 1.05), o = cc.scaleTo(.5, 1.25, 1.15), n = cc.scaleTo(.5, 1.15, 1.25);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/decorate").runAction(cc.repeatForever(cc.sequence(o, n)));
cc.find("Canvas/heartFullColor").getComponent(cc.ParticleSystem).resetSystem();
};
t.prototype.stopAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.mixtureNode.stopAllActions();
cc.find("Canvas/decorate").stopAllActions();
cc.find("Canvas/heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentCE": "MixComponentCE",
"./TipManagerCE": "TipManagerCE"
} ],
HandTouchEventCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22380e+5ZEEKTtfG57ebeh", "HandTouchEventCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function() {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
this.mixtureNode.getComponent(n.default).startMix();
};
t.prototype.onTouchMove = function(e) {
this.node.parent.getChildByName("finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.Animation).getAnimationState("rub").isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("rub");
var e = cc.scaleTo(.5, 1.05, .95), t = cc.scaleTo(.5, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(e, t)));
};
t.prototype.stopAction = function() {
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
__decorate([ a(cc.Node) ], t.prototype, "mixtureNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentCS": "MixComponentCS"
} ],
HandTouchEventFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21380e+5ZEEKTtfG57ebeh", "HandTouchEventFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function() {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
this.mixtureNode.getComponent(n.default).startMix();
};
t.prototype.onTouchMove = function(e) {
this.node.parent.getChildByName("finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.Animation).getAnimationState("rub").isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("rub");
var e = cc.scaleTo(.5, 1.05, .95), t = cc.scaleTo(.5, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(e, t)));
};
t.prototype.stopAction = function() {
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
__decorate([ a(cc.Node) ], t.prototype, "mixtureNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentFS": "MixComponentFS"
} ],
HandTouchEventGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19380e+5ZEEKTtfG57ebeh", "HandTouchEventGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentGL"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function(e) {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = e;
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/finger").active = !1;
this.mixtureNode.getComponent(n.default).startMix();
if ("mix0" == this.mixtureNode.name || "mix1" == this.mixtureNode.name) {
cc.find("Canvas/dish/bowl_foam0").active = !1;
cc.find("Canvas/dish/bowl_foam1").active = !1;
cc.find("Canvas/dish/bowl_foam2").active = !1;
cc.find("Canvas/dish/bowl_foam3").active = !1;
cc.find("Canvas/dish/bowl_water").setScale(0);
}
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
var e = this.node.getComponent(cc.Animation).getAnimationState("rub"), t = "rub";
if (!e) {
e = this.node.getComponent(cc.Animation).getAnimationState("rub1");
t = "rub1";
}
e.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play(t);
var o = cc.scaleTo(.5, .85, .75), n = cc.scaleTo(.5, .75, .85);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(o, n)));
"rub1" == t && this.mixtureNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentGL": "MixComponentGL"
} ],
HandTouchEventHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11380e+5ZEEKTtfG57ebeh", "HandTouchEventHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentHC"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function() {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = cc.find("Canvas/sculpey/sculpey4");
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/sculpey/finger").active = !1;
this.mixtureNode.getComponent(n.default).startMix();
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/sculpey/finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
var e = cc.scaleTo(.7, 1, .95), t = cc.scaleTo(.7, .95, 1.08), o = cc.callFunc(function() {
this.node.getComponent(cc.AudioSource).play();
}.bind(this));
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(e, o, t, o)));
this.node.getComponent(cc.Animation).getAnimationState("rub").isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("rub");
};
t.prototype.stopAction = function() {
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentHC": "MixComponentHC"
} ],
HandTouchEventMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0abcf+Gz+pIQZSZnWAZqogG", "HandTouchEventMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
};
t.prototype.onTouchMove = function(e) {
this.node.parent.getChildByName("finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
this.node.getComponent(cc.Animation).getAnimationState("grab").isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("grab");
var e = cc.scaleTo(1.4, 1.05, .95), t = cc.scaleTo(1.4, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(e, t)));
};
t.prototype.stopAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
__decorate([ c(cc.Node) ], t.prototype, "mixtureNode", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
HandTouchEventRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77380e+5ZEEKTtfG57ebeh", "HandTouchEventRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentRP"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function(e) {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = e;
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/finger").active = !1;
this.mixtureNode.getComponent(n.default).startMix();
if ("mix0" == this.mixtureNode.name || "mix1" == this.mixtureNode.name) {
cc.find("Canvas/dish/bowl_foam0").active = !1;
cc.find("Canvas/dish/bowl_foam1").active = !1;
cc.find("Canvas/dish/bowl_foam2").active = !1;
cc.find("Canvas/dish/bowl_foam3").active = !1;
cc.find("Canvas/dish/bowl_water").setScale(0);
}
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
var e = this.node.getComponent(cc.Animation).getAnimationState("rub"), t = "rub";
if (!e) {
e = this.node.getComponent(cc.Animation).getAnimationState("rub1");
t = "rub1";
}
e.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play(t);
var o = cc.scaleTo(.5, 1.05, .95), n = cc.scaleTo(.5, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(o, n)));
"rub1" == t && this.mixtureNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentRP": "MixComponentRP"
} ],
HandTouchEventRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12380e+5ZEEKTtfG57ebeh", "HandTouchEventRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentRS"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function(e) {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = e;
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/finger").active = !1;
this.mixtureNode.getComponent(n.default).startMix();
if ("mix0" == this.mixtureNode.name || "mix1" == this.mixtureNode.name) {
cc.find("Canvas/dish/bowl_foam0").active = !1;
cc.find("Canvas/dish/bowl_foam1").active = !1;
cc.find("Canvas/dish/bowl_foam2").active = !1;
cc.find("Canvas/dish/bowl_foam3").active = !1;
cc.find("Canvas/dish/bowl_water").setScale(0);
}
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
var e = this.node.getComponent(cc.Animation).getAnimationState("rub"), t = "rub";
if (!e) {
e = this.node.getComponent(cc.Animation).getAnimationState("rub1");
t = "rub1";
}
e.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play(t);
var o = cc.scaleTo(.5, 1.05, .95), n = cc.scaleTo(.5, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(o, n)));
"rub1" == t && this.mixtureNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentRS": "MixComponentRS"
} ],
HandTouchEventSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13380e+5ZEEKTtfG57ebeh", "HandTouchEventSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentSD"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixtureNode = null;
t.nodePos = null;
return t;
}
t.prototype.init = function(e) {
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
this.mixtureNode = e;
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
cc.find("Canvas/finger").active = !1;
this.mixtureNode.getComponent(n.default).startMix();
if ("mix0" == this.mixtureNode.name || "mix1" == this.mixtureNode.name) {
cc.find("Canvas/dish/bowl_foam0").active = !1;
cc.find("Canvas/dish/bowl_foam1").active = !1;
cc.find("Canvas/dish/bowl_foam2").active = !1;
cc.find("Canvas/dish/bowl_foam3").active = !1;
cc.find("Canvas/dish/bowl_water").setScale(0);
}
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.stopAction();
this.mixtureNode.getComponent(n.default).stopMix();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
var e = this.node.getComponent(cc.Animation).getAnimationState("rub"), t = "rub";
if (!e) {
e = this.node.getComponent(cc.Animation).getAnimationState("rub1");
t = "rub1";
}
e.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play(t);
var o = cc.scaleTo(.5, 1.05, .95), n = cc.scaleTo(.5, .95, 1.05);
this.mixtureNode.runAction(cc.repeatForever(cc.sequence(o, n)));
"rub1" == t && this.mixtureNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.stopAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.mixtureNode.stopAllActions();
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentSD": "MixComponentSD"
} ],
HelloWorldMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "280c3rsZJJKnZ9RqbALVwtK", "HelloWorldMS");
cc.Class({
extends: cc.Component,
properties: {
label: {
default: null,
type: cc.Label
},
text: "Hello, World!"
},
onLoad: function() {
this.label.string = this.text;
},
update: function(e) {}
});
cc._RF.pop();
}, {} ],
HomeButtonCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "81536IgpLRLZbLqOKgUtaRg", "HomeButtonCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
cc.audioEngine.stopMusic();
this.node.getComponent(cc.AudioSource).play();
cc.audioEngine.stopMusic();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeButtonCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1436IgpLRLZbLqOKgUtaRg", "HomeButtonCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./PopupComponetCE"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
this.node.getComponent(cc.AudioSource).play();
cc.loader.loadRes("crazyemoji/prefab/popup", cc.Prefab, function(e, t) {
var o = cc.instantiate(t);
cc.find("Canvas").addChild(o);
var i = o.getComponent(n.default);
i.showPopup();
i.setTip("Are you sure you want to back home?");
i.setCallback(function() {
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
});
}.bind(this));
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./PopupComponetCE": "PopupComponetCE"
} ],
HomeButtonCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2236IgpLRLZbLqOKgUtaRg", "HomeButtonCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
cc.find("cupCopy") && cc.find("cupCopy").destroy();
cc.audioEngine.stopMusic();
this.node.getComponent(cc.AudioSource).play();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeButtonFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2136IgpLRLZbLqOKgUtaRg", "HomeButtonFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
cc.find("cupCopy") && cc.find("cupCopy").destroy();
cc.audioEngine.stopMusic();
this.node.getComponent(cc.AudioSource).play();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeButtonGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1936IgpLRLZbLqOKgUtaRg", "HomeButtonGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
this.node.getComponent(cc.AudioSource).play();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeButtonHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1136IgpLRLZbLqOKgUtaRg", "HomeButtonHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
cc.find("cupCopy") && cc.find("cupCopy").destroy();
cc.audioEngine.stopMusic();
this.node.getComponent(cc.AudioSource).play();
cc.audioEngine.stopMusic();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeButtonMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c8102LhamBM/IuVam+ytcuZ", "HomeButtonMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/ads/showLaodingMS"), i = e("../common/common/Script/codebase/TransitionSceneMS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
n.default.getInstance().loadingDoneCallback = function() {
n.default.getInstance().loadingDoneCallback = null;
i.default.changeScene("homeSceneMS", 7);
};
n.default.getInstance().showAds(!1);
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/ads/showLaodingMS": "showLaodingMS",
"../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS"
} ],
HomeButtonRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7736IgpLRLZbLqOKgUtaRg", "HomeButtonRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./PopupComponetRP"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
this.node.getComponent(cc.AudioSource).play();
cc.loader.loadRes("rainbowpoop/prefab/popup", cc.Prefab, function(e, t) {
var o = cc.instantiate(t);
cc.find("Canvas").addChild(o);
var i = o.getComponent(n.default);
i.showPopup();
i.setTip("Are you sure you want to back home?");
i.setCallback(function() {
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
});
}.bind(this));
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./PopupComponetRP": "PopupComponetRP"
} ],
HomeButtonRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1236IgpLRLZbLqOKgUtaRg", "HomeButtonRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
cc.find("cupCopy") && cc.find("cupCopy").destroy();
cc.audioEngine.stopMusic();
this.node.getComponent(cc.AudioSource).play();
cc.audioEngine.stopMusic();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeButtonSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1336IgpLRLZbLqOKgUtaRg", "HomeButtonSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onClick = function() {
cc.audioEngine.stopMusic();
this.node.getComponent(cc.AudioSource).play();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
HomeControllerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1408pLz0BGW44cYxjqgp+T", "HomeControllerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInCE"), i = e("../common/Script/codebase/TransitionSceneCE"), c = e("../common/Script/ads/RewardManagerCE"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
c.default.getInstance().loadConfig();
cc.audioEngine.stopMusic();
cc.loader.loadRes("crazyemoji/sound/6", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.audioEngine.playMusic(t, !0);
cc.audioEngine.setMusicVolume(.6);
cc.loader.setAutoReleaseRecursively(t, !1);
}
});
cc.find("Canvas/slime/slime0").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/slime/slime0").runAction(cc.sequence(cc.delayTime(1), cc.moveBy(.5, cc.v2(0, -80)), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/slime0").opacity = 0;
cc.find("Canvas/slime/slime1").active = !0;
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/slime1").opacity = 0;
cc.find("Canvas/slime/slime2").active = !0;
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/slime").getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/slime2").opacity = 0;
cc.find("Canvas/slime/slime3").active = !0;
this.node.getChildByName("logo").getComponent(n.default).doShowAction();
}.bind(this))));
}.bind(this);
this.node.getChildByName("logo").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("play").getComponent(n.default).doShowAction();
this.node.getChildByName("logo").runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, -10)), cc.moveBy(1, cc.v2(0, 10)))));
}.bind(this);
this.node.getChildByName("play").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("btn_moregame").active = !0;
this.node.getChildByName("star_bg2").active = !0;
this.node.getChildByName("play").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("play").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .9), cc.scaleTo(1, 1))));
}.bind(this);
};
t.prototype.btnClick = function() {
this.node.getChildByName("play").stopAllActions();
this.node.getChildByName("play").setScale(1);
i.default.changeScene("dyeSlimeCE", 12);
};
t.prototype.touchUrl = function() {
jsToCPP.getInstance().openUrl("https://www.crazycampmedia.com/privacys/");
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/ads/RewardManagerCE": "RewardManagerCE",
"../common/Script/codebase/TransitionSceneCE": "TransitionSceneCE",
"../common/Script/compoent/MoveInCE": "MoveInCE"
} ],
HomeControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19a0X2a1dN27oWXGbKojFn", "HomeControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInGL"), i = e("../common/Script/codebase/TransitionSceneGL"), c = e("../common/Script/ads/RewardManagerGL"), a = e("../common/Script/ads/showLaodingGL"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
c.default.getInstance().loadConfig();
cc.audioEngine.stopMusic();
cc.loader.loadRes("galaxyslime/sound/6", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}
});
this.node.getChildByName("girl").setPosition(cc.v2(400, -720));
this.node.getChildByName("girl").runAction(cc.sequence(cc.moveTo(2, cc.v2(225, -70)), cc.callFunc(function() {
this.node.getChildByName("girl").runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(-10, 10)), cc.moveBy(1, cc.v2(10, -10)))));
}.bind(this))));
this.node.getChildByName("logo").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("logo").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, 1.1), cc.scaleTo(1, 1))));
}.bind(this);
this.node.getChildByName("play_btn").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("btn_moregame").active = !0;
this.node.getChildByName("play_btn").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("play_btn").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .9), cc.scaleTo(1, 1))));
}.bind(this);
};
t.prototype.btnClick = function() {
this.node.getChildByName("play_btn").stopAllActions();
this.node.getChildByName("play_btn").setScale(1);
a.default.getInstance().loadingDoneCallback = function() {
a.default.getInstance().loadingDoneCallback = null;
i.default.changeScene("makeSlimeGL", 12);
}.bind(this);
a.default.getInstance().showAds(!1);
};
t.prototype.touchUrl = function() {
jsToCPP.getInstance().openUrl("https://www.crazycampmedia.com/privacys/");
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/ads/RewardManagerGL": "RewardManagerGL",
"../common/Script/ads/showLaodingGL": "showLaodingGL",
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/compoent/MoveInGL": "MoveInGL"
} ],
HomeControllerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77a0X2a1dN27oWXGbKojFn", "HomeControllerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInRP"), i = e("../common/Script/codebase/TransitionSceneRP"), c = e("../common/Script/ads/RewardManagerRP"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
jsToCPP.getInstance().showBanner();
c.default.getInstance().loadConfig();
cc.audioEngine.stopMusic();
cc.loader.loadRes("rainbowpoop/sound/6", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}
});
this.node.getChildByName("logo").runAction(cc.sequence(cc.spawn(cc.scaleTo(1, .9), cc.rotateBy(1, 720)), cc.callFunc(function() {
this.node.getChildByName("logo").runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 30)), cc.moveBy(1, cc.v2(0, -30)))));
}.bind(this))));
this.node.getChildByName("play_btn").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("btn_moregame").active = !0;
this.node.getChildByName("play_btn").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("play_btn").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .9), cc.scaleTo(1, 1))));
}.bind(this);
};
t.prototype.btnClick = function() {
this.node.getChildByName("play_btn").stopAllActions();
this.node.getChildByName("play_btn").setScale(1);
i.default.changeScene("makeSlimeRP", 7);
};
t.prototype.touchUrl = function() {
jsToCPP.getInstance().openUrl("https://www.crazycampmedia.com/privacys/");
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/ads/RewardManagerRP": "RewardManagerRP",
"../common/Script/codebase/TransitionSceneRP": "TransitionSceneRP",
"../common/Script/compoent/MoveInRP": "MoveInRP"
} ],
HttpUtils: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d79e6k2UdNJCr8/jyu+bE0z", "HttpUtils");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./GameData"), i = cc._decorator, c = i.ccclass, a = (i.property, function() {
function e() {
this.jsonUrl = "http://youngcnfoodhall.top/SlimeMakeNew/game.json";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.httpGet = function(e, t) {
var o = cc.loader.getXMLHttpRequest();
o.onreadystatechange = function() {
console.log("xhrxhrxhrxhrxhr");
console.log(o.readyState);
console.log(o.status);
if (4 === o.readyState && o.status >= 200 && o.status < 300) {
var e = o.responseText;
t(e);
} else t(null);
};
o.open("GET", e, !0);
cc.sys.isNative && o.setRequestHeader("Accept-Encoding", "gzip,deflate");
o.timeout = 5e3;
o.send();
};
e.prototype.getJsonUrl = function() {
return this.jsonUrl;
};
e.prototype.getJsonData = function() {
var e = this.jsonUrl;
console.log("连接" + e);
t.getInstance().httpGet(e, function(e) {
if (e) {
console.log("网络json");
try {
n.default.getInstance().clearData();
for (var t = JSON.parse(e), o = 0; o < t.length; o++) n.default.getInstance().initData(t[o]);
console.log(JSON.stringify(t));
} catch (e) {}
} else ;
});
};
var t;
return e = t = __decorate([ c ], e);
}());
o.default = a;
cc._RF.pop();
}, {
"./GameData": "GameData"
} ],
IcingMaskCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b141fvnFV1DW5Wm4zXdNOJ1", "IcingMaskCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskCE"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.touchBegin = function(e) {
cc.find("Canvas/cake/tipClick").active = !1;
cc.find("Canvas/cake/finger").active = !1;
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./CustomMaskCE": "CustomMaskCE"
} ],
IcingMaskFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b211fvnFV1DW5Wm4zXdNOJ1", "IcingMaskFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.touchBegin = function(e) {
cc.find("Canvas/cake/tipClick").active = !1;
cc.find("Canvas/cake/finger").active = !1;
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./CustomMaskFS": "CustomMaskFS"
} ],
IcingMaskGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b191fvnFV1DW5Wm4zXdNOJ1", "IcingMaskGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.touchBegin = function(e) {
cc.find("Canvas/cake/tipClick").active = !1;
cc.find("Canvas/cake/finger").active = !1;
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./CustomMaskGL": "CustomMaskGL"
} ],
IcingMaskMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "104791ULulMc5r3azmFhQY1", "IcingMaskMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.touchBegin = function(e) {
cc.find("Canvas/cake/tipClick").active = !1;
cc.find("Canvas/cake/finger").active = !1;
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./CustomMaskMS": "CustomMaskMS"
} ],
IcingMaskRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b771fvnFV1DW5Wm4zXdNOJ1", "IcingMaskRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMaskRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.touchBegin = function(e) {
cc.find("Canvas/cake/tipClick").active = !1;
cc.find("Canvas/cake/finger").active = !1;
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./CustomMaskRP": "CustomMaskRP"
} ],
IcingMask: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ecc1fvnFV1DW5Wm4zXdNOJ1", "IcingMask");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./CustomMask"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "enableTouch", {
get: function() {
return this._enableTouch;
},
set: function(e) {
this._enableTouch = e;
if (this._enableTouch) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin.bind(this));
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove.bind(this));
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd.bind(this));
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchBegin);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd);
}
},
enumerable: !0,
configurable: !0
});
t.prototype.touchBegin = function(e) {
cc.find("Canvas/cake/tipClick").active = !1;
cc.find("Canvas/cake/finger").active = !1;
if (this.enabledInHierarchy && this._enableTouch) {
var t = e.touch.getLocation();
this.draw.addCircle(t);
}
};
__decorate([ a ], t.prototype, "enableTouch", null);
return t = __decorate([ c ], t);
}(n.default);
o.default = s;
cc._RF.pop();
}, {
"./CustomMask": "CustomMask"
} ],
IconItemCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "84d2aVnPDlKHqGSJuC4nMiK", "IconItemCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerCB"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().unLisenter();
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerCB": "RewardManagerCB"
} ],
IconItemCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14daX90vlMAbFE16wFkC7j", "IconItemCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerCE"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerCE": "RewardManagerCE"
} ],
IconItemCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b222aVnPDlKHqGSJuC4nMiK", "IconItemCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().unLisenter();
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerCS": "RewardManagerCS"
} ],
IconItemFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21daX90vlMAbFE16wFkC7j", "IconItemFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerFS": "RewardManagerFS"
} ],
IconItemGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19daX90vlMAbFE16wFkC7j", "IconItemGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerGL": "RewardManagerGL"
} ],
IconItemGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7120cPPZLFOKLicnxGzFAXh", "IconItemGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerGS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.getFreeNode.active = !1;
};
t.prototype.initLisenter = function() {
console.log("initLisenter");
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
console.log("IconItem init");
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
console.log(e);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerGS": "RewardManagerGS"
} ],
IconItemHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b112aVnPDlKHqGSJuC4nMiK", "IconItemHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerHC"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().unLisenter();
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerHC": "RewardManagerHC"
} ],
IconItemMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6b8d0E1UERN95naji5XH+qA", "IconItemMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerMS": "RewardManagerMS"
} ],
IconItemRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77daX90vlMAbFE16wFkC7j", "IconItemRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerRP": "RewardManagerRP"
} ],
IconItemRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b122aVnPDlKHqGSJuC4nMiK", "IconItemRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerRS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().unLisenter();
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerRS": "RewardManagerRS"
} ],
IconItemSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b132aVnPDlKHqGSJuC4nMiK", "IconItemSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManagerSD"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().unLisenter();
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManagerSD": "RewardManagerSD"
} ],
IconItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fa5daX90vlMAbFE16wFkC7j", "IconItem");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./RewardManager"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRewardLock = !0;
t.index = 0;
t.key = "";
t.moduleName = "";
t.getFreeNode = null;
t.isOnEvent = !1;
t.itemKey = "";
return t;
}
t.prototype.start = function() {
"" == this.moduleName && (this.moduleName = this.key);
if (!this.isOnEvent) {
this.isOnEvent = !0;
var e = this.node;
e.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, !0);
e.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, !0);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchStart, this, !0);
}
this.init();
};
t.prototype.initLisenter = function() {
var e = this;
n.default.getInstance().showRewardLoadingCall = function() {};
n.default.getInstance().showRewardFalseCall = function() {
e.unLisenter();
};
n.default.getInstance().removeRewardLoadingCall = function(t) {
var o = n.default.getInstance().isLocked(e.itemKey);
console.log("回调" + e.itemKey);
e.getFreeNode.active = o;
e.unLisenter();
};
};
t.prototype.unLisenter = function() {
n.default.getInstance().showRewardLoadingCall = null;
n.default.getInstance().showRewardFalseCall = null;
n.default.getInstance().removeRewardLoadingCall = null;
};
t.prototype.init = function() {
this.itemKey = n.default.getInstance().getItemKey(this.key, this.moduleName, this.index);
var e = n.default.getInstance().isLocked(this.itemKey);
this.getFreeNode.active = e;
};
t.prototype.touchEnd = function(e) {
console.log("IconItem touchEnd");
this.isStopEvent() && e.stopPropagationImmediate();
if (this.getFreeNode.active && cc.sys.isMobile) {
this.initLisenter();
console.log("aaaaaa" + this.itemKey);
n.default.getInstance().showRewardAds(this.itemKey);
}
};
t.prototype.touchStart = function(e) {
console.log("IconItem  touchStart");
};
t.prototype.isStopEvent = function() {
return !!cc.sys.isMobile && this.getFreeNode.activeInHierarchy;
};
__decorate([ a ], t.prototype, "isRewardLock", void 0);
__decorate([ a ], t.prototype, "index", void 0);
__decorate([ a ], t.prototype, "key", void 0);
__decorate([ a ], t.prototype, "moduleName", void 0);
__decorate([ a(cc.Node) ], t.prototype, "getFreeNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./RewardManager": "RewardManager"
} ],
InitDataGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "67cffzk/RtPzIPzzW0r7Yls", "InitDataGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DataConfigGS"), i = e("../common/Script/CombinedComponent/MixComponentGS"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), a = e("../common/Script/MoveInGS"), s = e("../common/Script/codebase/utils/CocosHelperGS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.picNum = 0;
t.mixCom = null;
t.initNodeColor = null;
t.myPic = [];
t.afterMoveIn = [];
t.MoveIn = null;
t.bottle = null;
t.bgAudio = null;
t.buttonAudio = null;
t.figer = null;
return t;
}
t.prototype.start = function() {
null != this.initNodeColor && this.SetInitNode();
null != this.bottle && this.SetBottleColor();
0 != this.picNum && this.setStirPic();
this.afterMoveIn && this.OpenSpriteDrag();
this.MoveIn && this.SetFinger();
};
t.prototype.SetFinger = function() {
this.MoveIn.actionCallBack = function() {
this.figer.active = !0;
this.figer.setPosition(cc.find("Canvas/node3").getPosition());
s.CocosHelper.showHand(this.figer, cc.find("Canvas/node3"), cc.find("Canvas/node2"), cc.find("Canvas/node1"));
}.bind(this);
};
t.prototype.setStirPic = function() {
for (var e = 1; e < this.picNum + 1; ++e) cc.loader.loadRes("glitterslime/" + n.default.getInstance().getName() + e, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
this.myPic.push(t);
cc.loader.setAutoRelease(t, !0);
}
}.bind(this));
this.mixCom.setMixPahth(this.myPic);
};
t.prototype.SetInitNode = function() {
cc.loader.loadRes("glitterslime/" + n.default.getInstance().getName() + 0, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
this.initNodeColor.spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}.bind(this));
};
t.prototype.OpenSpriteDrag = function() {
for (var e = function(e) {
if (e.getComponent(a.default)) {
e.getComponent(a.default).actionCallBack = function() {
e.getComponent(c.default).enabled = !0;
if ("bottle" == e.node.name || "kettle" == e.node.name && "cup" != e.node.parent.name || "spoon0" == e.node.name) {
var t = e.node.convertToWorldSpaceAR(cc.v2(-480, -320));
(o = cc.find("Canvas/finger")).active = !0;
o.setPosition(t);
s.CocosHelper.showHand(o, e.node, e.node, cc.find("Canvas/bowl"));
}
if ("kettle" == e.node.name && "cup" == e.node.parent.name) {
t = e.node.convertToWorldSpaceAR(cc.v2(-480, -320));
(o = cc.find("Canvas/finger")).active = !0;
o.setPosition(t);
s.CocosHelper.showHand(o, e.node, e.node, cc.find("Canvas/cup"));
}
if ("borax_fall" == e.node.name) {
t = e.node.convertToWorldSpaceAR(cc.v2(-480, -320));
(o = cc.find("Canvas/finger")).active = !0;
o.setPosition(t);
s.CocosHelper.showHand(o, e.node, e.node, cc.find("Canvas/scoop0"));
}
if ("cup" == e.node.name) {
var o;
t = e.node.convertToWorldSpaceAR(cc.v2(-480, -320));
(o = cc.find("Canvas/finger")).active = !0;
o.setPosition(t);
s.CocosHelper.showHand(o, e.node, e.node, cc.find("Canvas/bowl"));
}
"spoon3" == e.node.name && e.node.runAction(cc.moveBy(.2, cc.v2(0, -193)));
}.bind(t);
}
return "continue";
}, t = this, o = 0, n = this.afterMoveIn; o < n.length; o++) {
e(n[o]);
}
};
t.prototype.SetBottleColor = function() {
var e = this.bottle.getChildByName("color").getComponent(cc.Sprite), t = this.bottle.getChildByName("color_").getComponent(cc.Sprite), o = this.bottle.parent.getChildByName("mud").getComponent(cc.Sprite);
cc.loader.loadRes("glitterslime/" + n.default.getInstance().getBodyName(), cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
cc.loader.loadRes("glitterslime/" + n.default.getInstance().getBodyName() + 0, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
o.spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}.bind(this));
cc.loader.loadRes("glitterslime/" + n.default.getInstance().getBodyName() + "_", cc.SpriteFrame, function(e, o) {
if (e) console.log(e + ""); else {
t.spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
};
t.prototype.homeButtonDown = function() {
cc.audioEngine.play(this.buttonAudio, !1, .5);
};
t.prototype.moreGameButtonDown = function() {
cc.audioEngine.play(this.buttonAudio, !1, .5);
};
t.prototype.flaseParticle = function() {
this.node.getChildByName("bottle").getChildByName("boraxParticle").active = !1;
this.node.getChildByName("bottle").getChildByName("boraxParticle1").active = !1;
cc.find("Canvas/finger").stopAllActions();
cc.find("Canvas/finger").active = !1;
};
__decorate([ d({
tooltip: "图片数量"
}) ], t.prototype, "picNum", void 0);
__decorate([ d({
type: i.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Sprite,
tooltip: "初始颜色节点"
}) ], t.prototype, "initNodeColor", void 0);
__decorate([ d({
type: c.default,
tooltip: "moveIn后需要开启的节点"
}) ], t.prototype, "afterMoveIn", void 0);
__decorate([ d({
type: a.default,
tooltip: "moveIn后需要开启的节点"
}) ], t.prototype, "MoveIn", void 0);
__decorate([ d(cc.Node) ], t.prototype, "bottle", void 0);
__decorate([ d(cc.AudioClip) ], t.prototype, "bgAudio", void 0);
__decorate([ d(cc.AudioClip) ], t.prototype, "buttonAudio", void 0);
__decorate([ d(cc.Node) ], t.prototype, "figer", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentGS": "MixComponentGS",
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"../common/Script/codebase/utils/CocosHelperGS": "CocosHelperGS",
"./DataConfigGS": "DataConfigGS"
} ],
KneadControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c0800ZZzvNDqpaLR9UQPPcj", "KneadControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCB"), i = e("./DragonCompoentCB"), c = e("../common/Script/codebase/TransitionSceneCB"), a = e("./DataConfigCB"), s = e("./KneadHandTouchCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.color = null;
t.index = null;
t.foam = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
var e = a.default.getInstance().getColors(), t = a.default.getInstance().getFoam(), o = a.default.getInstance().getIndex();
e || (e = "blue");
t || (t = "foam9");
o || (o = "9");
this.color = e;
this.foam = t;
this.index = o;
this.dynamicCreate(e);
};
t.prototype.showSlime = function(e) {
var t = [ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3" ];
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(5), cc.callFunc(function() {
var e = Math.floor(3 * Math.random());
console.log(e);
cc.loader.loadRes(t[e] + "", cc.AudioClip, function(e, t) {
if (!e) {
cc.audioEngine.playEffect(t, !1);
cc.loader.setAutoReleaseRecursively(t, !0);
}
});
}.bind(this)))));
cc.director.getActionManager().pauseTarget(this.node);
cc.loader.loadRes("cakebatter/image/slime/slime0_" + this.index, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/handLeft/slime/foam").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/handRight/slime/foam").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("cakebatter/image/slime/slime_" + e, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/handLeft/slime").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/handRight/slime").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/handLeft").active = !0;
cc.find("Canvas/handLeft").setPosition(cc.v2(-220, -40));
cc.find("Canvas/handLeft").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-270, -40)), cc.callFunc(function() {
cc.find("Canvas/handLeft/finger").active = !0;
cc.find("Canvas/handLeft").getComponent(s.default).init();
}.bind(this))));
cc.find("Canvas/handRight").active = !0;
cc.find("Canvas/handRight").setPosition(cc.v2(220, -40));
cc.find("Canvas/handRight").runAction(cc.sequence(cc.moveTo(.5, cc.v2(270, -40)), cc.callFunc(function() {
cc.find("Canvas/handRight/finger").active = !0;
cc.find("Canvas/handRight").getComponent(s.default).init();
}.bind(this))));
cc.find("Canvas/dragon").active = !1;
cc.find("Canvas/left_hand0").active = !1;
cc.find("Canvas/left_hand1").active = !1;
cc.find("Canvas/right_hand0").active = !1;
cc.find("Canvas/right_hand1").active = !1;
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
}.bind(this));
};
t.prototype.dynamicCreate = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay), o = this;
cc.loader.loadRes("cakebatter/SlimePinch/" + e + "/unicornSlimeRoll_ske", dragonBones.DragonBonesAsset, function(n, i) {
n && cc.error(n);
t.dragonAsset = i;
cc.loader.setAutoReleaseRecursively(i, !0);
cc.loader.loadRes("cakebatter/SlimePinch/" + e + "/unicornSlimeRoll_tex", dragonBones.DragonBonesAtlasAsset, function(e, n) {
cc.loader.setAutoReleaseRecursively(n, !0);
e && cc.error(e);
t.dragonAtlasAsset = n;
t.armatureName = "Armature";
o.addHandCm();
});
});
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = t.getComponent(dragonBones.ArmatureDisplay), c = t.getComponent(dragonBones.ArmatureDisplay).armature(), a = 0; a < e.length; a++) {
var s = e[a], r = n.CocosHelper.findNode(cc.Canvas.instance.node, s), l = r.getComponent(i.default), d = r.getPosition(), u = d.add(cc.v2());
u.x = r.getParent().convertToNodeSpaceAR("left_hand0" == s ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
l.setStartPos(d);
l.setEndPos(u);
var p = "left_hand0" == s ? "slimel0" : "slimer0", h = c.getBone(p);
l.setMoveBone(h);
}
c.getSlot("motion1_slime").displayIndex = 0;
var f = c.getSlot("motion1_slime1");
f.displayIndex = 0;
dragonBones.CCFactory.getInstance().replaceSlotDisplay(o.getArmatureKey(), "Armature", "motion1_slime1", this.index, f);
for (var g = 2; g <= 3; g++) {
c.getSlot("motion" + g + "_slime").displayIndex = -1;
var m = c.getSlot("motion" + g + "_slime1");
m && (m.displayIndex = -1);
dragonBones.CCFactory.getInstance().replaceSlotDisplay(o.getArmatureKey(), "Armature", "motion" + g + "_slime1", this.index, m);
}
var v = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log(v._loopSound);
cc.audioEngine.stopEffect(v._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(v.actionNode);
v.showParticle();
-1 == v._loopSound && cc.loader.loadRes("sound/lachang", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
if (e) console.log(e + ""); else {
v._loopSound = cc.audioEngine.playEffect(t, !1);
setTimeout(function() {
v._loopSound = -1;
}, 1e3);
console.log("Pulling" + v._loopSound);
}
});
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(v.actionNode);
console.log(v._loopSound);
v.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(.3 * (t + 1)), cc.callFunc(function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (3 != t) {
var o = e.getSlot("motion" + t + "_slime"), i = e.getSlot("motion" + (t + 1) + "_slime");
o && (o.displayIndex = -1);
i && (i.displayIndex = 0);
var c = e.getSlot("motion" + t + "_slime1"), a = e.getSlot("motion" + (t + 1) + "_slime1");
c && (c.displayIndex = -1);
a && (a.displayIndex = 0);
} else this.showSlime(this.color);
}.bind(o))));
}, o = this, i = 1; i < 4; i++) t(i);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
c.default.changeScene("pullSlimeCB");
};
t.prototype.touchBackBtn = function() {
c.default.changeScene("stickBeadCB");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"./DataConfigCB": "DataConfigCB",
"./DragonCompoentCB": "DragonCompoentCB",
"./KneadHandTouchCB": "KneadHandTouchCB"
} ],
KneadControllerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1300ZZzvNDqpaLR9UQPPcj", "KneadControllerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./TipManagerSD"), i = e("../common/Script/codebase/TransitionSceneSD"), c = e("./DataConfigSD"), a = e("./KneadHandTouchSD"), s = e("../common/Script/MoveInSD"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.color = null;
t.index = null;
t.foam = null;
return t;
}
t.prototype.start = function() {
var e = c.default.getInstance().getColor();
this.color = e;
console.log(this.color + "this.color");
this.showSlime(e);
};
t.prototype.showSlime = function(e) {
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(5), cc.callFunc(function() {
n.default.getInstance().jumpTips();
}.bind(this)))));
cc.director.getActionManager().pauseTarget(this.node);
cc.loader.loadRes("slimedark/image/slime/hand0_" + e, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/hand/hand0").getComponent(cc.Sprite).spriteFrame = t;
});
cc.loader.loadRes("slimedark/image/slime/hand1_" + e, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/handLeft/hand1").getComponent(cc.Sprite).spriteFrame = t;
});
cc.loader.loadRes("slimedark/image/slime/hand2_" + e, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/handLeft/hand2").getComponent(cc.Sprite).spriteFrame = t;
});
cc.loader.loadRes("slimedark/image/slime/" + e + "1", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/handLeft/slime").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/hand/slime").getComponent(cc.Sprite).spriteFrame = t;
this.node.getChildByName("bgMask").runAction(cc.sequence(cc.fadeTo(2, 255), cc.callFunc(function() {
this.node.getChildByName("hand").getComponent(s.default).doShowAction();
}.bind(this))));
this.node.getChildByName("hand").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("hand").runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
this.node.getChildByName("hand").active = !1;
cc.find("Canvas/handLeft").active = !0;
cc.find("Canvas/handLeft/finger").active = !0;
cc.find("Canvas/handLeft").getComponent(a.default).init();
}.bind(this))));
}.bind(this);
}.bind(this));
};
t.prototype.touchNextBtn = function() {
i.default.changeScene("clickSlimeSD");
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("stickBead");
};
__decorate([ d({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/MoveInSD": "MoveInSD",
"../common/Script/codebase/TransitionSceneSD": "TransitionSceneSD",
"./DataConfigSD": "DataConfigSD",
"./KneadHandTouchSD": "KneadHandTouchSD",
"./TipManagerSD": "TipManagerSD"
} ],
KneadHandTouchCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "60382eLbN5AC4oLlufZ5L/A", "KneadHandTouchCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCB"), i = e("./DataConfigCB"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.nodePos = null;
t.isFinish = null;
return t;
}
o = t;
t.prototype.init = function() {
this.isFinish = !1;
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
this.actionNode.runAction(cc.sequence(cc.delayTime(5), cc.callFunc(function() {
this.isFinish = !0;
this.node.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
this.node.getChildByName("");
var e = cc.find("Canvas/handLeft").getComponent(o).getIsFinish(), t = cc.find("Canvas/handRight").getComponent(o).getIsFinish();
if (e && t) {
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
i.active = !0;
i.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(this))));
cc.director.getActionManager().pauseTarget(this.actionNode);
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
this.node.getChildByName("finger").active = !1;
};
t.prototype.onTouchMove = function(e) {
this.node.getChildByName("finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.pasueAction();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
cc.director.getActionManager().resumeTarget(this.actionNode);
cc.director.getActionManager().resumeTarget(cc.find("Canvas"));
if (this.node.getComponent(cc.Animation).getAnimationState("kneadSlime").isPaused) {
this.node.getComponent(cc.Animation).resume();
this.node.getChildByName("slime").getComponent(cc.Animation).resume();
(e = this.node.getChildByName("slime")).getChildByName("foam").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("kneadSlime");
var e, t = i.default.getInstance().getColors(), o = i.default.getInstance().getFoam();
t || (t = "blue");
o || (o = "foam9");
(e = this.node.getChildByName("slime")).getComponent(cc.Animation).play("kneadSlime_" + t);
e.getChildByName("foam").getComponent(cc.Animation).play("" + o);
}
};
t.prototype.pasueAction = function() {
this.node.getComponent(cc.AudioSource).stop();
cc.director.getActionManager().pauseTarget(cc.find("Canvas"));
cc.director.getActionManager().pauseTarget(this.actionNode);
this.node.getComponent(cc.Animation).pause();
var e = this.node.getChildByName("slime");
e.getComponent(cc.Animation).pause();
e.getChildByName("foam").getComponent(cc.Animation).pause();
};
t.prototype.getIsFinish = function() {
return this.isFinish;
};
var o;
return t = o = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"./DataConfigCB": "DataConfigCB"
} ],
KneadHandTouchSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1382eLbN5AC4oLlufZ5L/A", "KneadHandTouchSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperSD"), i = e("./DataConfigSD"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.nodePos = null;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.init = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
this.actionNode.runAction(cc.sequence(cc.delayTime(10), cc.callFunc(function() {
this.isFinish = !0;
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}.bind(this))));
cc.director.getActionManager().pauseTarget(this.actionNode);
this.nodePos = this.node.getPosition();
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.playAction();
this.node.getChildByName("finger").active = !1;
};
t.prototype.onTouchMove = function(e) {
this.node.getChildByName("finger").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.pasueAction();
};
t.prototype.playAction = function() {
this.node.getComponent(cc.AudioSource).play();
cc.director.getActionManager().resumeTarget(this.actionNode);
cc.director.getActionManager().resumeTarget(cc.find("Canvas"));
var e = this.node.getChildByName("slime"), t = i.default.getInstance().getColor(), o = this.node.getComponent(cc.Animation).getAnimationState("kneadSlime"), n = cc.scaleTo(.5, 1.05, .95), c = cc.scaleTo(.5, .95, 1.05);
this.node.getChildByName("slime").runAction(cc.repeatForever(cc.sequence(n, c)));
if (o.isPaused) {
this.node.getComponent(cc.Animation).resume();
this.node.getChildByName("slime").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("kneadSlime");
e.getComponent(cc.Animation).play("kneadSlime_" + t);
}
this.showParticle();
};
t.prototype.pasueAction = function() {
this.node.getComponent(cc.AudioSource).stop();
this.node.getComponent(cc.Animation).pause();
cc.director.getActionManager().pauseTarget(cc.find("Canvas"));
cc.director.getActionManager().pauseTarget(this.actionNode);
var e = this.node.getChildByName("slime");
e.getComponent(cc.Animation).pause();
e.stopAllActions();
this.hideParticle();
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "fallStar");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "fallStar").getComponent(cc.ParticleSystem).stopSystem();
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperSD": "CocosHelperSD",
"./DataConfigSD": "DataConfigSD"
} ],
KnifeTouchEventHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11f9Hyl9BLlInHPDDvkBZy", "KnifeTouchEventHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MakeControllerHC"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.knifeNodePos = null;
t.initialPos = null;
t.cutCount = 0;
return t;
}
t.prototype.init = function() {
this.initialPos = this.node.getPosition();
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.knifeNodePos = this.node.getPosition();
cc.find("Canvas/sculpey_cut/finger").active = !1;
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/sculpey_cut/finger").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.convertToNodeSpaceAR(t[0].getLocation()), i = t[0].getDelta(), c = o.sub(n);
i.y < 0 && (this.node.y = this.knifeNodePos.y - c.y);
var a = this.node.getPosition();
a.y < 0 && (a.y = 0);
a.y > -100 && (a.y = -100);
this.node.setPosition(cc.v2(this.knifeNodePos.x, a.y));
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
if (Math.abs(this.node.getPosition().y - this.initialPos.y) > 50) {
this.destroyTouchEvent();
cc.find("Canvas").getComponent(n.default).cutSculpey(this.cutCount);
if (4 == this.cutCount) this.node.runAction(cc.moveTo(.5, cc.v2(-150, -550))); else {
this.cutCount = this.cutCount + 1;
this.node.runAction(cc.sequence(cc.moveTo(.5, cc.v2(520 - 110 * this.cutCount)), cc.callFunc(function() {
this.init();
}.bind(this))));
}
}
};
return t = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./MakeControllerHC": "MakeControllerHC"
} ],
LoadSubGame: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0ff3aqtRnxD8qJsE8tiEJGP", "LoadSubGame");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./GameData"), i = e("./SubgameManager"), c = e("../common/uitls/CocosHelper_my"), a = e("../common/uitls/TransitionScene_my"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.iceMusicAudio = null;
t.cottonMusicAudio = null;
t.poppornMusicAudio = null;
t.cakeMusicAudio = null;
t.isCanEnter = !1;
t.indexDown = 0;
return t;
}
t.prototype.checkEnter = function() {
var e = this, t = c.CocosHelper.findNode(cc.Canvas.instance.node, "bg");
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(.01), cc.callFunc(function() {
if (e.isCanEnter) {
t.stopAllActions();
e.node.stopAllActions();
e.enterSub();
}
}))));
};
t.prototype.start = function() {
var e = this, t = this, o = (c.CocosHelper.findNode(cc.Canvas.instance.node, "bg"), 
c.CocosHelper.findNode(cc.Canvas.instance.node, "progressBar").getComponent(cc.ProgressBar), 
Math.random(), c.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"));
o.runAction(cc.repeatForever(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
o.getComponent(dragonBones.ArmatureDisplay) && o.getComponent(dragonBones.ArmatureDisplay).playAnimation("tiao", 1);
cc.audioEngine.play(t.iceMusicAudio, !1, 1);
}), cc.delayTime(3), cc.callFunc(function() {
o.getComponent(dragonBones.ArmatureDisplay) && o.getComponent(dragonBones.ArmatureDisplay).playAnimation("eat1", 0);
}), cc.delayTime(6))));
t.checkEnter();
var a = n.default.getInstance().getSelectGameName();
console.log(a + "------subName");
cc.sys.isMobile && (i.isSubgameDownLoad(a) ? i.needUpdateSubgame(a, function(o) {
if (o) t.startUpdate(); else {
var n = e, i = c.CocosHelper.findNode(cc.Canvas.instance.node, "bg"), a = c.CocosHelper.findNode(cc.Canvas.instance.node, "progressBar").getComponent(cc.ProgressBar);
i.runAction(cc.repeatForever(cc.sequence(cc.delayTime(.01), cc.callFunc(function() {
a.progress = a.progress + .01;
a.progress >= 1 && (n.isCanEnter = !0);
}))));
}
}, function() {
cc.log("出错了");
t.touchBack();
}) : t.startUpdate());
};
t.prototype.enterSub = function() {
var e = this, t = c.CocosHelper.findNode(cc.Canvas.instance.node, "bg"), o = c.CocosHelper.findNode(cc.Canvas.instance.node, "progressBar").getComponent(cc.ProgressBar);
t.stopAllActions();
t.runAction(cc.repeatForever(cc.sequence(cc.delayTime(.01), cc.callFunc(function() {
o.progress = o.progress + .01;
if (o.progress >= 1) {
t.stopAllActions();
e.enter();
}
}))));
};
t.prototype.startUpdate = function() {
var e = n.default.getInstance().getSelectGameName();
console.log(e);
var t = this, o = c.CocosHelper.findNode(cc.Canvas.instance.node, "progressBar"), s = c.CocosHelper.findNode(cc.Canvas.instance.node, "label"), r = o.getComponent(cc.ProgressBar);
i.downloadSubgame(e, function(e) {
isNaN(e) && (e = 0);
r.progress = .8 * e;
s.getComponent(cc.Label).string = "资源下载中   " + 100 * e + "%";
console.log("资源下载中   " + 100 * e + "%");
}, function(o) {
if (o) {
s.getComponent(cc.Label).string = "进入游戏" + e;
t.isCanEnter = !0;
} else {
cc.log("下载失败");
t.node.stopAllActions();
s.getComponent(cc.Label).string = "下载失败";
a.default.changeScene(e, "ttt");
}
});
};
t.prototype.enter = function() {
cc.audioEngine.stopMusic();
var e = c.CocosHelper.findNode(cc.Canvas.instance.node, "dragon");
e.stopAllActions();
e.removeComponent(dragonBones.ArmatureDisplay);
var t = n.default.getInstance().getSelectGameName();
console.log("清除回调" + t);
jsToCPP.getInstance().initOnAdsLoaded(null);
jsToCPP.getInstance().initOnAdsClicked(null);
jsToCPP.getInstance().initOnAdsExpanded(null);
jsToCPP.getInstance().initOnAdsCollapsed(null);
jsToCPP.getInstance().initOnAdsLoadFailed(null);
jsToCPP.getInstance().initOnAdsRewarded(null);
cc.sys.restartVM();
console.log("进入子游戏" + t);
i.enterSubgame(t);
};
t.prototype.touchBack = function() {
var e = n.default.getInstance().getSelectGameName();
a.default.changeScene(e, "ttt");
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "iceMusicAudio", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "cottonMusicAudio", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "poppornMusicAudio", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "cakeMusicAudio", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"../common/uitls/TransitionScene_my": "TransitionScene_my",
"./GameData": "GameData",
"./SubgameManager": "SubgameManager"
} ],
Loading: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e6b59GHoLNNCIUEp4P4/8vB", "Loading");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/CocosHelper_my"), i = e("../common/uitls/TransitionScene_my"), c = e("./showLaodingHall"), a = e("./AdsManagerHall"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.playMusicAudio = null;
return t;
}
t.prototype.onLoad = function() {
console.log("Loading onLoad");
cc.audioEngine.stopMusic();
cc.audioEngine.playMusic(this.playMusicAudio, !0);
};
t.prototype.start = function() {
a.default.getInstance().onAdsLoaded = null;
a.default.getInstance().onAdsLoadFailed = null;
a.default.getInstance().onAdsClicked = null;
a.default.getInstance().onAdsExpanded = null;
a.default.getInstance().onAdsCollapsed = null;
a.default.getInstance().onAdsRewarded = null;
var e = "fromHall", t = cc.sys.localStorage.getItem(e);
if (10 == t) {
console.log("大厅 显示全屏");
console.log(cc.sys.localStorage.getItem(e));
cc.sys.localStorage.setItem(e, 11);
console.log(cc.sys.localStorage.getItem(e));
c.default.getInstance().showAds(!1);
}
cc.sys.localStorage.setItem(e, t);
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "bg");
n.CocosHelper.findNode(cc.Canvas.instance.node, "progressBar").active = !1;
o.runAction(cc.sequence(cc.delayTime(5), cc.callFunc(function() {
i.default.changeScene("ChooseScene", "temp");
})));
};
__decorate([ l(cc.AudioClip) ], t.prototype, "playMusicAudio", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"../common/uitls/TransitionScene_my": "TransitionScene_my",
"./AdsManagerHall": "AdsManagerHall",
"./showLaodingHall": "showLaodingHall"
} ],
MainControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b229f5ORyBFVrl7cmvxSc/I", "MainControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCS"), i = e("../common/Script/codebase/TransitionSceneCS"), c = e("../common/Script/AdsManagerCS"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.sys.isMobile && c.default.getInstance().showBanner();
cc.audioEngine.stopMusic();
cc.loader.loadRes("sound/chrismasbg", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}.bind(this));
this.node.getChildByName("girlhand").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("girlhand").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
}.bind(this);
this.node.getChildByName("boy").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("paillette").active = !0;
this.node.getChildByName("paillette").getComponent(cc.AudioSource).play();
}.bind(this);
this.node.getChildByName("logo").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("logo").runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
}.bind(this);
this.node.getChildByName("btn").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("btn_moregame").active = !0;
this.node.getChildByName("star_bg2").active = !0;
this.node.getChildByName("homeheartParticleleft").active = !0;
this.node.getChildByName("btn").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("btn").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .9), cc.scaleTo(1, 1))));
}.bind(this);
};
t.prototype.btnClick = function() {
this.node.getChildByName("btn").stopAllActions();
this.node.getChildByName("btn").setScale(1);
i.default.changeScene("addMaterialCS");
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/AdsManagerCS": "AdsManagerCS",
"../common/Script/MoveInCS": "MoveInCS",
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS"
} ],
MainControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b219f5ORyBFVrl7cmvxSc/I", "MainControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneFS"), i = e("../common/Script/ads/AdsManagerFS"), c = e("../common/Script/compoent/MoveInFS"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.sys.isMobile && i.default.getInstance().showBanner();
cc.audioEngine.stopMusic();
cc.loader.loadRes("flowerslime/sound/1", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}.bind(this));
this.node.getChildByName("girlhand").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("girlhand").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
}.bind(this);
this.node.getChildByName("boy").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("paillette").active = !0;
this.node.getChildByName("paillette").getComponent(cc.AudioSource).play();
}.bind(this);
this.node.getChildByName("logo").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("logo").runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
}.bind(this);
this.node.getChildByName("btn").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("btn_moregame").active = !0;
this.node.getChildByName("star_bg2").active = !0;
this.node.getChildByName("homeheartParticleleft").active = !0;
this.node.getChildByName("btn").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("btn").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .9), cc.scaleTo(1, 1))));
}.bind(this);
};
t.prototype.btnClick = function() {
this.node.getChildByName("btn").stopAllActions();
this.node.getChildByName("btn").setScale(1);
n.default.changeScene("addMaterial");
};
return t = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"../common/Script/ads/AdsManagerFS": "AdsManagerFS",
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/compoent/MoveInFS": "MoveInFS"
} ],
MakeControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e95474ocwZE6Kh9vmU5h6Ib", "MakeControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCB"), i = e("../common/Script/codebase/TransitionSceneCB"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragCB"), a = e("../common/Script/RewardManagerCB"), s = e("../common/Script/AdsManagerCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.sys.isMobile && s.default.getInstance().showBanner();
a.default.getInstance().loadConfig();
cc.loader.loadRes("cakebatter/sound/6", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}.bind(this));
this.node.getChildByName("waterCup").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("waterCup").getComponent(c.default).enabled = !0;
this.node.getChildByName("finger").active = !0;
}.bind(this);
this.node.getChildByName("borax").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("borax").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("tipClick").active = !0;
this.node.getChildByName("tipClick").setPosition(this.node.getChildByName("borax").getPosition());
}.bind(this);
cc.find("Canvas/cup/scoop").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/cup/scoop").getComponent(c.default).enabled = !0;
this.node.getChildByName("tipRotate").active = !0;
}.bind(this);
cc.find("Canvas/bottle/activator_lid1").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/bottle/activator_lid1").getComponent(c.default).enabled = !0;
cc.find("Canvas/bottle/finger").active = !0;
cc.find("Canvas/bottle/finger").setPosition(cc.find("Canvas/bottle/activator_lid1").getPosition());
}.bind(this);
};
t.prototype.waterCupTouchStart = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !1;
this.node.getChildByName("finger").active = !1;
};
t.prototype.waterCupTouchEnd = function() {
this.node.getChildByName("waterCup").getComponent(c.default).enabled = !1;
this.node.getChildByName("waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(-40, 270))), cc.callFunc(function() {
this.node.getChildByName("cup1").active = !0;
cc.find("Canvas/cup/cup1").active = !1;
cc.find("Canvas/waterCup/pourWater").active = !0;
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterCup/mask").active = !0;
cc.find("Canvas/waterCup/water").active = !1;
cc.find("Canvas/waterCup/mask/water_fall").runAction(cc.moveBy(2, cc.v2(-80, 0)));
cc.find("Canvas/cup/waterMask").getComponent(cc.Animation).play("pourWater");
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/waterCup/mask").active = !1;
this.node.getChildByName("cup1").active = !1;
cc.find("Canvas/cup/cup1").active = !0;
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterCup/pourWater").active = !1;
var e = this.node.getChildByName("cup").getPosition();
this.node.getChildByName("cup").runAction(cc.sequence(cc.delayTime(.3), cc.moveBy(.5, cc.v2(-600, 0)), cc.callFunc(function() {
this.node.getChildByName("cup").opacity = 0;
this.node.getChildByName("cup").setPosition(e);
this.node.getChildByName("spoon").getComponent(n.default).doShowAction();
this.node.getChildByName("borax").getComponent(n.default).doShowAction();
}.bind(this))));
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(700, 0)))));
};
t.prototype.waterCupTouchCancle = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !0;
};
t.prototype.boraxClick = function() {
this.node.getChildByName("tipClick").active = !1;
cc.find("Canvas/borax/borax").active = !1;
cc.find("Canvas/borax/borax_fall").active = !0;
this.node.getChildByName("borax").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 50), cc.moveTo(.5, cc.v2(-15, 160))), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").active = !0;
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).play();
cc.find("Canvas/spoon/scoop_borax").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).stop();
cc.find("Canvas/borax/pourSugar").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(-700, 0))), cc.callFunc(function() {
this.node.getChildByName("cup").getComponent(n.default).doShowAction();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("spoon").getComponent(c.default).enabled = !0;
this.node.getChildByName("finger").active = !0;
this.node.getChildByName("finger").setPosition(this.node.getChildByName("spoon").getPosition());
}.bind(this))));
};
t.prototype.spoonTouchStart = function() {
this.node.getChildByName("finger").active = !1;
};
t.prototype.spoonTouchEnd = function() {
this.node.getChildByName("spoon").getComponent(c.default).enabled = !1;
this.node.getChildByName("spoon").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -30), cc.moveTo(.5, cc.v2(-60, 300))), cc.callFunc(function() {
this.node.getChildByName("cup1").active = !0;
cc.find("Canvas/cup/cup1").active = !1;
cc.find("Canvas/spoon/pourFlour").active = !0;
cc.find("Canvas/spoon/pourFlour").getComponent(cc.AudioSource).play();
cc.find("Canvas/spoon/scoop_borax").runAction(cc.scaleTo(2, 0));
cc.find("Canvas/cup/cup_borax").runAction(cc.fadeTo(2, 255));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
this.node.getChildByName("cup1").active = !1;
cc.find("Canvas/cup/cup1").active = !0;
cc.find("Canvas/spoon/pourFlour").getComponent(cc.AudioSource).stop();
cc.find("Canvas/spoon/pourFlour").active = !1;
this.node.getChildByName("cup").runAction(cc.moveTo(.5, cc.v2(0, 40)));
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(700, 0))), cc.callFunc(function() {
cc.find("Canvas/cup/scoop").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.scoopTouchStart = function() {
cc.find("Canvas/cup/scoop/scoop").active = !1;
this.node.getChildByName("tipRotate").active = !1;
this.playAction();
};
t.prototype.scoopTouchEnd = function(e) {
cc.find("Canvas/cup/scoop/scoop").active = !0;
this.stopAction();
};
t.prototype.scoopTouchCancle = function() {
cc.find("Canvas/cup/scoop/scoop").active = !0;
cc.find("Canvas/cup/scoop").setPosition(cc.v2(50, 100));
};
t.prototype.playAction = function() {
cc.find("Canvas/cup/scoop").getComponent(cc.AudioSource).play();
var e = cc.scaleTo(.7, 1.05, .99), t = cc.scaleTo(.7, .95, 1.01), o = cc.scaleTo(.7, 1.05, .99), n = cc.scaleTo(.7, .95, 1.01);
cc.find("Canvas/cup/waterMask").runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/cup/cup_borax").runAction(cc.repeatForever(cc.sequence(o, n)));
cc.find("Canvas/cup/cup_borax").getComponent(cc.Animation).getAnimationState("dissolve").isPaused ? cc.find("Canvas/cup/cup_borax").getComponent(cc.Animation).resume() : cc.find("Canvas/cup/cup_borax").getComponent(cc.Animation).play("dissolve");
};
t.prototype.stopAction = function() {
cc.find("Canvas/cup/scoop").getComponent(cc.AudioSource).stop();
cc.find("Canvas/cup/waterMask").stopAllActions();
cc.find("Canvas/cup/cup_borax").stopAllActions();
cc.find("Canvas/cup/cup_borax").getComponent(cc.Animation).pause();
};
t.prototype.cupClick = function() {
this.node.getChildByName("cup").getComponent(cc.Button).interactable = !1;
cc.find("Canvas/tipClick").active = !1;
this.node.getChildByName("cup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(100, 190))), cc.callFunc(function() {
cc.find("Canvas/cup/pourWater").active = !0;
cc.find("Canvas/cup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/cup/mask").active = !0;
cc.find("Canvas/cup/waterMask").active = !1;
cc.find("Canvas/cup/mask/water_fall").runAction(cc.moveBy(4, cc.v2(-100, 0)));
cc.find("Canvas/bottle/activator").runAction(cc.scaleTo(4, 1));
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
cc.find("Canvas/cup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/cup/pourWater").active = !1;
cc.find("Canvas/bottle/activator_lid1").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(700, 0)))));
};
t.prototype.activatorStart = function() {
cc.find("Canvas/bottle/finger").active = !1;
};
t.prototype.activatorTouchEnd = function() {
cc.find("Canvas/bottle/activator_lid1").getComponent(c.default).enabled = !1;
cc.find("Canvas/bottle/activator_lid1").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 400)), cc.callFunc(function() {
cc.find("Canvas/bottle").runAction(cc.spawn(cc.scaleTo(.5, .5), cc.moveTo(.5, cc.v2(0, 0))));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
i.default.changeScene("addMaterialCB");
}.bind(this))));
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/AdsManagerCB": "AdsManagerCB",
"../common/Script/MoveInCB": "MoveInCB",
"../common/Script/RewardManagerCB": "RewardManagerCB",
"../common/Script/codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB"
} ],
MakeControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11474ocwZE6Kh9vmU5h6Ib", "MakeControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInHC"), i = e("./HandTouchEventHC"), c = e("./KnifeTouchEventHC"), a = e("../common/Script/codebase/TransitionSceneHC"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.loader.loadRes("chocolateslime/sound/6", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}
});
this.node.getChildByName("sculpey").getComponent(n.default).actionCallBack = function() {
cc.find("sculpey/tipClick", this.node).active = !0;
}.bind(this);
cc.find("sculpey_cut/knife", this.node).getComponent(n.default).actionCallBack = function() {
cc.find("sculpey_cut/knife", this.node).getComponent(c.default).init();
cc.find("sculpey_cut/finger", this.node).active = !0;
}.bind(this);
};
t.prototype.sculpeyButton0 = function() {
this.node.getChildByName("sculpey").getComponent(cc.AudioSource).play();
cc.find("sculpey/tipClick", this.node).active = !1;
cc.find("sculpey/sculpey0", this.node).active = !1;
cc.find("sculpey/sculpey1", this.node).active = !0;
this.node.getChildByName("sculpey").runAction(cc.sequence(cc.scaleTo(.3, 1.15), cc.scaleTo(.3, 1), cc.callFunc(function() {
cc.find("sculpey/tipClick", this.node).active = !0;
cc.find("sculpey/sculpey1", this.node).getComponent(cc.Button).interactable = !0;
}.bind(this))));
};
t.prototype.sculpeyButton1 = function() {
this.node.getChildByName("sculpey").getComponent(cc.AudioSource).play();
cc.find("sculpey/tipClick", this.node).active = !1;
cc.find("sculpey/sculpey1", this.node).active = !1;
cc.find("sculpey/sculpey2", this.node).active = !0;
this.node.getChildByName("sculpey").runAction(cc.sequence(cc.scaleTo(.3, 1.15), cc.scaleTo(.1, 1), cc.callFunc(function() {
cc.find("sculpey/tipClick", this.node).active = !1;
cc.find("sculpey/sculpey2", this.node).active = !1;
cc.find("sculpey/sculpey3", this.node).active = !0;
cc.find("sculpey/fragment", this.node).active = !0;
cc.find("sculpey/fragment", this.node).getComponent(cc.Animation).play("broken");
cc.find("sculpey/fragment", this.node).getComponent(cc.AudioSource).play();
cc.find("sculpey/sculpey3", this.node).runAction(cc.sequence(cc.spawn(cc.rotateBy(.5, -90), cc.fadeTo(.5, 100)), cc.callFunc(function() {
cc.find("sculpey/sculpey3", this.node).active = !1;
cc.find("sculpey/sculpey4", this.node).active = !0;
}.bind(this))));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
cc.find("sculpey/fragment", this.node).active = !1;
cc.find("sculpey/hand", this.node).active = !0;
cc.find("sculpey/hand", this.node).runAction(cc.sequence(cc.moveTo(1, cc.v2(0, -50)), cc.callFunc(function() {
cc.find("sculpey/hand", this.node).getComponent(i.default).init();
cc.find("sculpey/finger", this.node).active = !0;
}.bind(this))));
}.bind(this))));
};
t.prototype.mixFinish = function() {
cc.find("Canvas/sculpey/sculpey4").stopAllActions();
cc.find("sculpey/hand", this.node).getComponent(i.default).destroyTouchEvent();
cc.find("sculpey/hand", this.node).active = !1;
this.node.getChildByName("sculpey").active = !1;
this.node.getChildByName("sculpey_cut").active = !0;
cc.find("sculpey/hand", this.node).getComponent(cc.Animation).stop();
cc.find("sculpey/hand", this.node).runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, -300)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this))));
};
t.prototype.cutSculpey = function(e) {
this.node.getChildByName("sculpey").getComponent(cc.AudioSource).play();
var t = 50 * -Math.random() + 10;
if (0 == e) {
cc.find("sculpey_cut/sculpey11", this.node).active = !1;
cc.find("sculpey_cut/sculpey_cut0_1", this.node).active = !0;
cc.find("sculpey_cut/sculpey_cut0_0", this.node).active = !0;
var o = 300 * Math.random() + 60;
cc.find("sculpey_cut/sculpey_cut0_0", this.node).runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, cc.v2(600 - 100 * e, t)), cc.rotateBy(.5, o)));
} else if (1 == e) {
cc.find("sculpey_cut/sculpey_cut0_1", this.node).active = !1;
cc.find("sculpey_cut/sculpey_cut1_1", this.node).active = !0;
cc.find("sculpey_cut/sculpey_cut1_0", this.node).active = !0;
o = 300 * Math.random() + 60;
cc.find("sculpey_cut/sculpey_cut1_0", this.node).runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, cc.v2(600 - 100 * e, t)), cc.rotateBy(.5, o)));
} else if (2 == e) {
cc.find("sculpey_cut/sculpey_cut1_1", this.node).active = !1;
cc.find("sculpey_cut/sculpey_cut2_1", this.node).active = !0;
cc.find("sculpey_cut/sculpey_cut2_0", this.node).active = !0;
o = 300 * Math.random() + 60;
cc.find("sculpey_cut/sculpey_cut2_0", this.node).runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, cc.v2(600 - 80 * e, t)), cc.rotateBy(.5, o)));
} else if (3 == e) {
cc.find("sculpey_cut/sculpey_cut2_1", this.node).active = !1;
cc.find("sculpey_cut/sculpey_cut3_1", this.node).active = !0;
cc.find("sculpey_cut/sculpey_cut3_0", this.node).active = !0;
o = 300 * Math.random() + 60;
cc.find("sculpey_cut/sculpey_cut3_0", this.node).runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, cc.v2(600 - 80 * e, t)), cc.rotateBy(.5, o)));
} else if (4 == e) {
cc.find("sculpey_cut/sculpey_cut3_1", this.node).active = !1;
cc.find("sculpey_cut/sculpey_cut4_1", this.node).active = !0;
var i = 300 * Math.random() + 60;
cc.find("sculpey_cut/sculpey_cut4_1", this.node).runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, cc.v2(600 - 80 * e, t)), cc.rotateBy(.5, i)));
cc.find("sculpey_cut/sculpey_cut4_0", this.node).active = !0;
var c = 300 * Math.random() + 60, a = 50 * -Math.random() + 10;
cc.find("sculpey_cut/sculpey_cut4_0", this.node).runAction(cc.spawn(cc.scaleTo(.5, .8), cc.moveTo(.5, cc.v2(600 - 80 * (e + 1), a)), cc.rotateBy(.5, c)));
this.node.getChildByName("bowl").active = !0;
this.node.getChildByName("bowl").getComponent(n.default).actionCallBack = function() {
cc.find("sculpey_cut/decorateParticle", this.node).getComponent(cc.ParticleSystem).resetSystem();
cc.find("sculpey_cut/decorateParticle", this.node).getComponent(cc.AudioSource).play();
this.putInBowl();
}.bind(this);
}
};
t.prototype.putInBowl = function() {
var e = this.node.getChildByName("bowl").convertToWorldSpaceAR(cc.v2(0, 0)), t = this.node.getChildByName("sculpey_cut").convertToNodeSpaceAR(e);
cc.find("sculpey_cut/sculpey_cut0_0", this.node).runAction(cc.sequence(cc.delayTime(.1), cc.moveTo(1, cc.v2(t.x + 150, t.y + 250)), cc.moveTo(.3, cc.v2(t.x, t.y + 50))));
cc.find("sculpey_cut/sculpey_cut1_0", this.node).runAction(cc.sequence(cc.delayTime(.2), cc.moveTo(1, cc.v2(t.x + 150, t.y + 250)), cc.moveTo(.3, cc.v2(t.x - 30, t.y + 70))));
cc.find("sculpey_cut/sculpey_cut2_0", this.node).runAction(cc.sequence(cc.delayTime(.25), cc.moveTo(1, cc.v2(t.x + 150, t.y + 250)), cc.moveTo(.3, cc.v2(t.x + 30, t.y + 70))));
cc.find("sculpey_cut/sculpey_cut3_0", this.node).runAction(cc.sequence(cc.delayTime(.35), cc.moveTo(1, cc.v2(t.x + 150, t.y + 250)), cc.moveTo(.3, cc.v2(t.x + 50, t.y + 90))));
cc.find("sculpey_cut/sculpey_cut4_0", this.node).runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(1, cc.v2(t.x + 150, t.y + 250)), cc.moveTo(.3, cc.v2(t.x - 50, t.y + 90))));
cc.find("sculpey_cut/sculpey_cut4_1", this.node).runAction(cc.sequence(cc.delayTime(.6), cc.moveTo(1, cc.v2(t.x + 150, t.y + 250)), cc.moveTo(.3, cc.v2(t.x, t.y + 100))));
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
this.node.getChildByName("bowl1").active = !0;
}.bind(this))));
var o = -this.node.getChildByName("bowl").getPosition().x - 50, n = 200 - this.node.getChildByName("bowl").getPosition().y;
this.node.runAction(cc.sequence(cc.delayTime(2.5), cc.callFunc(function() {
cc.find("sculpey_cut/sculpey_cut0_0", this.node).runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
cc.find("sculpey_cut/sculpey_cut1_0", this.node).runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
cc.find("sculpey_cut/sculpey_cut2_0", this.node).runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
cc.find("sculpey_cut/sculpey_cut3_0", this.node).runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
cc.find("sculpey_cut/sculpey_cut4_0", this.node).runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
cc.find("sculpey_cut/sculpey_cut4_1", this.node).runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
this.node.getChildByName("bowl").runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
this.node.getChildByName("bowl1").runAction(cc.sequence(cc.moveBy(.5, cc.v2(o, n)), cc.moveBy(.5, cc.v2(50, -250))));
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("addMaterialHC");
}.bind(this))));
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInHC": "MoveInHC",
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC",
"./HandTouchEventHC": "HandTouchEventHC",
"./KnifeTouchEventHC": "KnifeTouchEventHC"
} ],
MakeControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12474ocwZE6Kh9vmU5h6Ib", "MakeControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInRS"), i = e("../common/Script/codebase/TransitionSceneRS"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragRS"), a = e("../common/Script/AdsManagerRS"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.sys.isMobile && a.default.getInstance().showBanner();
cc.loader.loadRes("rainbowslime/sound/6", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}.bind(this));
this.node.getChildByName("waterCup").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("waterCup").getComponent(c.default).enabled = !0;
this.node.getChildByName("finger").active = !0;
}.bind(this);
cc.find("Canvas/bowl/spoon").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/bowl/spoon").getComponent(c.default).enabled = !0;
this.node.getChildByName("tipRotate").active = !0;
}.bind(this);
this.node.getChildByName("bowl").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("scoop").getComponent(c.default).enabled = !0;
this.node.getChildByName("finger").active = !0;
}.bind(this);
this.node.getChildByName("borax").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("borax").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("tipClick").active = !0;
this.node.getChildByName("tipClick").setPosition(this.node.getChildByName("borax").getPosition());
}.bind(this);
};
t.prototype.waterCupTouchStart = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !1;
this.node.getChildByName("finger").active = !1;
};
t.prototype.waterCupTouchEnd = function() {
this.node.getChildByName("waterCup").getComponent(c.default).enabled = !1;
this.node.getChildByName("waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(-80, 270))), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").active = !0;
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterCup/mask").active = !0;
cc.find("Canvas/waterCup/water").active = !1;
cc.find("Canvas/waterCup/mask/water_fall").runAction(cc.moveBy(2, cc.v2(-80, 0)));
cc.find("Canvas/bowl/bowl_water").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterCup/pourWater").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.waterCupTouchCancle = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !0;
};
t.prototype.boraxClick = function() {
this.node.getChildByName("tipClick").active = !1;
cc.find("Canvas/borax/borax_shadow").active = !1;
cc.find("Canvas/borax/borax").active = !1;
cc.find("Canvas/borax/borax_fall").active = !0;
this.node.getChildByName("borax").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 50), cc.moveTo(.5, cc.v2(-15, 160))), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").active = !0;
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).play();
cc.find("Canvas/scoop/scoop_borax").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).stop();
cc.find("Canvas/borax/pourSugar").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(-1700, 0))), cc.callFunc(function() {
this.node.getChildByName("bowl").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.scoopTouchStart = function() {
this.node.getChildByName("finger").active = !1;
};
t.prototype.scoopTouchEnd = function() {
this.node.getChildByName("scoop").getComponent(c.default).enabled = !1;
this.node.getChildByName("scoop").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -30), cc.moveTo(.5, cc.v2(-30, 250))), cc.callFunc(function() {
cc.find("Canvas/scoop/pourFlour").active = !0;
cc.find("Canvas/scoop/pourFlour").getComponent(cc.AudioSource).play();
cc.find("Canvas/scoop/scoop_borax").runAction(cc.scaleTo(2, 0));
cc.find("Canvas/bowl/bowl_borax").runAction(cc.fadeTo(2, 255));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/scoop/pourFlour").getComponent(cc.AudioSource).stop();
cc.find("Canvas/scoop/pourFlour").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/waterCup").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.spoonTouchStart = function() {
cc.find("Canvas/bowl/spoon/spoon0").active = !1;
this.node.getChildByName("tipRotate").active = !1;
this.playAction();
};
t.prototype.spoonTouchEnd = function(e) {
cc.find("Canvas/bowl/spoon/spoon0").active = !0;
this.stopAction();
};
t.prototype.spoonTouchCancle = function() {
cc.find("Canvas/bowl/spoon/spoon0").active = !0;
cc.find("Canvas/bowl/spoon").setPosition(cc.v2(50, 100));
};
t.prototype.playAction = function() {
cc.find("Canvas/bowl/spoon").getComponent(cc.AudioSource).play();
var e = cc.scaleTo(.5, 1.04, .95), t = cc.scaleTo(.5, .96, 1.05), o = cc.scaleTo(.7, 1.05, .95), n = cc.scaleTo(.7, .95, 1.05);
cc.find("Canvas/bowl/bowl_water").runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/bowl/bowl_borax").runAction(cc.repeatForever(cc.sequence(o, n)));
cc.find("Canvas/bowl/bowl_water").runAction(cc.repeatForever(cc.rotateBy(20, 360)));
cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).getAnimationState("dissolve").isPaused ? cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).resume() : cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).play("dissolve");
};
t.prototype.stopAction = function() {
cc.find("Canvas/bowl/spoon").getComponent(cc.AudioSource).stop();
cc.find("Canvas/bowl/bowl_water").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).pause();
};
t.prototype.cupClick = function() {
this.node.getChildByName("cup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(100, 190))), cc.callFunc(function() {
cc.find("Canvas/cup/pourWater").active = !0;
cc.find("Canvas/cup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/cup/mask").active = !0;
cc.find("Canvas/cup/waterMask").active = !1;
cc.find("Canvas/cup/mask/water_fall").runAction(cc.moveBy(4, cc.v2(-100, 0)));
cc.find("Canvas/bottle/activator").runAction(cc.scaleTo(4, 1));
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
cc.find("Canvas/cup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/cup/pourWater").active = !1;
cc.find("Canvas/bottle/activator_lid1").getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0)))));
};
t.prototype.activatorTouchEnd = function() {
cc.find("Canvas/bottle/activator_lid1").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 300)), cc.moveTo(.5, cc.v2(0, 400)), cc.callFunc(function() {
cc.find("Canvas/bottle").runAction(cc.spawn(cc.scaleTo(.5, .5), cc.moveTo(.5, cc.v2(0, 0))));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
i.default.changeScene("addMaterialRS");
}.bind(this))));
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/AdsManagerRS": "AdsManagerRS",
"../common/Script/MoveInRS": "MoveInRS",
"../common/Script/codebase/SpriteDrag/SpriteDragRS": "SpriteDragRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS"
} ],
MakeControllerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13474ocwZE6Kh9vmU5h6Ib", "MakeControllerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInSD"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragSD"), c = e("../common/Script/AdsManagerSD"), a = e("./DataConfigSD"), s = e("./TipManagerSD"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.sys.isMobile && c.default.getInstance().showBanner();
cc.audioEngine.stopMusic();
cc.loader.loadRes("sound/bg1", cc.AudioClip, function(e, t) {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoReleaseRecursively(t, !1);
}.bind(this));
this.node.getChildByName("waterCup").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("waterCup").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger").active = !0;
}.bind(this);
var e = a.default.getInstance().getCount(), t = a.default.getInstance().getIsStart();
if (0 != e && t) {
this.node.getChildByName("bgMask").active = !0;
cc.director.loadScene("chooseColorSD");
} else {
this.node.getChildByName("bgMask").active = !1;
cc.find("Canvas/bowl/spoon").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/bowl/spoon").getComponent(i.default).enabled = !0;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/bowl/bowl_water").active = !1;
cc.find("Canvas/bowl/bowl_stir").active = !0;
var e = cc.scaleTo(.5, 1.04, .95), t = cc.scaleTo(.5, .96, 1.05);
cc.find("Canvas/bowl/bowl_stir").runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/bowl/bowl_stir").runAction(cc.repeatForever(cc.rotateBy(20, 360)));
}.bind(this))));
cc.director.getActionManager().pauseTarget(this.node);
this.node.getChildByName("tipRotate").active = !0;
}.bind(this);
this.node.getChildByName("bowl").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("scoop").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger").active = !0;
}.bind(this);
this.node.getChildByName("borax").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("borax").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("tipClick").active = !0;
this.node.getChildByName("tipClick").setPosition(this.node.getChildByName("borax").getPosition());
}.bind(this);
}
};
t.prototype.waterCupTouchStart = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !1;
this.node.getChildByName("finger").active = !1;
};
t.prototype.waterCupTouchEnd = function() {
this.node.getChildByName("waterCup").getComponent(i.default).enabled = !1;
this.node.getChildByName("waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -120), cc.moveTo(.5, cc.v2(-100, 350))), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").active = !0;
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).play();
cc.find("Canvas/waterCup/mask").active = !0;
cc.find("Canvas/waterCup/water").active = !1;
cc.find("Canvas/waterCup/mask/water_fall").runAction(cc.fadeTo(3.5, 0));
cc.find("Canvas/bowl/bowl_water").runAction(cc.scaleTo(4, 1));
}.bind(this)), cc.repeat(cc.sequence(cc.moveBy(1, cc.v2(50, 0)), cc.moveBy(1, cc.v2(-50, 0))), 2), cc.callFunc(function() {
cc.find("Canvas/waterCup/pourWater").getComponent(cc.AudioSource).stop();
cc.find("Canvas/waterCup/pourWater").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.waterCupTouchCancle = function() {
cc.find("Canvas/waterCup/watercup_shadow").active = !0;
};
t.prototype.boraxClick = function() {
this.node.getChildByName("tipClick").active = !1;
cc.find("Canvas/borax/borax_shadow").active = !1;
cc.find("Canvas/borax/borax").active = !1;
cc.find("Canvas/borax/borax_fall").active = !0;
this.node.getChildByName("borax").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 50), cc.moveTo(.5, cc.v2(-40, 160))), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").active = !0;
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).play();
cc.find("Canvas/scoop/scoop_borax").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.repeat(cc.sequence(cc.moveBy(.5, cc.v2(-20, 0)), cc.moveBy(.5, cc.v2(20, 0))), 2), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).stop();
cc.find("Canvas/borax/pourSugar").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(-1700, 0))), cc.callFunc(function() {
this.node.getChildByName("bowl").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.scoopTouchStart = function() {
this.node.getChildByName("finger").active = !1;
};
t.prototype.scoopTouchEnd = function() {
this.node.getChildByName("scoop").getComponent(i.default).enabled = !1;
this.node.getChildByName("scoop").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -30), cc.moveTo(.5, cc.v2(-30, 250))), cc.callFunc(function() {
cc.find("Canvas/scoop/pourFlour").active = !0;
cc.find("Canvas/scoop/pourFlour").getComponent(cc.AudioSource).play();
cc.find("Canvas/scoop/scoop_borax").runAction(cc.scaleTo(4, 0));
cc.find("Canvas/bowl/bowl_borax").runAction(cc.fadeTo(4, 255));
}.bind(this)), cc.repeat(cc.sequence(cc.moveBy(1, cc.v2(-30, 0)), cc.moveBy(.5, cc.v2(30, 0))), 2), cc.callFunc(function() {
cc.find("Canvas/scoop/pourFlour").getComponent(cc.AudioSource).stop();
cc.find("Canvas/scoop/pourFlour").active = !1;
s.default.getInstance().jumpTips();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/waterCup").getComponent(n.default).doShowAction();
}.bind(this))));
};
t.prototype.spoonTouchStart = function() {
cc.find("Canvas/bowl/spoon/spoon0").active = !1;
this.node.getChildByName("tipRotate").active = !1;
this.playAction();
};
t.prototype.spoonTouchEnd = function(e) {
cc.find("Canvas/bowl/spoon/spoon0").active = !0;
this.stopAction();
};
t.prototype.spoonTouchCancle = function() {
cc.find("Canvas/bowl/spoon/spoon0").active = !0;
cc.find("Canvas/bowl/spoon").setPosition(cc.v2(50, 100));
};
t.prototype.playAction = function() {
cc.director.getActionManager().resumeTarget(this.node);
cc.find("Canvas/bowl/spoon").getComponent(cc.AudioSource).play();
var e = cc.scaleTo(.5, 1.04, .95), t = cc.scaleTo(.5, .96, 1.05), o = cc.scaleTo(.7, 1.05, .95), n = cc.scaleTo(.7, .95, 1.05);
cc.find("Canvas/bowl/bowl_stir").runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/bowl/bowl_stir").runAction(cc.repeatForever(cc.rotateBy(20, 360)));
cc.find("Canvas/bowl/bowl_water").runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/bowl/bowl_borax").runAction(cc.repeatForever(cc.sequence(o, n)));
cc.find("Canvas/bowl/bowl_water").runAction(cc.repeatForever(cc.rotateBy(20, 360)));
cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).getAnimationState("dissolve").isPaused ? cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).resume() : cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).play("dissolve");
};
t.prototype.stopAction = function() {
cc.director.getActionManager().pauseTarget(this.node);
cc.find("Canvas/bowl/spoon").getComponent(cc.AudioSource).stop();
cc.find("Canvas/bowl/bowl_stir").stopAllActions();
cc.find("Canvas/bowl/bowl_water").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").stopAllActions();
cc.find("Canvas/bowl/bowl_borax").getComponent(cc.Animation).pause();
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/AdsManagerSD": "AdsManagerSD",
"../common/Script/MoveInSD": "MoveInSD",
"../common/Script/codebase/SpriteDrag/SpriteDragSD": "SpriteDragSD",
"./DataConfigSD": "DataConfigSD",
"./TipManagerSD": "TipManagerSD"
} ],
MakeSlimeGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19126lCiREnqXi0MIFtvDb", "MakeSlimeGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragGL"), i = e("../common/Script/CombinedComponent/MixComponentGL"), c = e("../common/Script/compoent/MoveInGL"), a = e("../common/Script/codebase/TransitionSceneGL"), s = e("./TipManagerGL"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
t.addCount = 0;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/bg/planet1").runAction(cc.repeatForever(cc.sequence(cc.moveBy(2, cc.v2(0, 13)), cc.moveBy(2, cc.v2(0, -13)))));
cc.find("Canvas/bg/planet3").runAction(cc.repeatForever(cc.sequence(cc.moveBy(3, cc.v2(0, 15)), cc.moveBy(3, cc.v2(0, -15)))));
cc.find("Canvas/bg/planet0").runAction(cc.repeatForever(cc.sequence(cc.moveBy(3, cc.v2(0, 10)), cc.moveBy(3, cc.v2(0, -10)))));
this.node.getChildByName("glue").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("glue").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("liquidstarch").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("liquidstarch").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
cc.find("Canvas/bowl_blue/glitter").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_blue/glitter").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/bowl_purple/glitter").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_purple/glitter").getComponent(n.default).enabled = !0;
cc.find("Canvas/bowl_purple/tipMove").active = !0;
}.bind(this);
cc.find("Canvas/bowl_pink/glitter").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_pink/glitter").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/bowl_blue/paint").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_blue/paint").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/bowl_blue/paint/paint_lid").active = !1;
}.bind(this);
cc.find("Canvas/bowl_purple/paint").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_purple/paint").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/bowl_purple/tipClick").active = !0;
cc.find("Canvas/bowl_purple/paint/paint_lid").active = !1;
}.bind(this);
cc.find("Canvas/bowl_pink/paint").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_pink/paint").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/bowl_pink/paint/paint_lid").active = !1;
}.bind(this);
cc.find("Canvas/bowl_blue/spoon").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_blue/spoon").getComponent(n.default).enabled = !0;
}.bind(this);
cc.find("Canvas/bowl_purple/spoon").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_purple/spoon").getComponent(n.default).enabled = !0;
cc.find("Canvas/bowl_purple/tipRotate").active = !0;
}.bind(this);
cc.find("Canvas/bowl_pink/spoon").getComponent(c.default).actionCallBack = function() {
cc.find("Canvas/bowl_pink/spoon").getComponent(n.default).enabled = !0;
}.bind(this);
};
t.prototype.glueTouchEnd = function() {
cc.find("glue/glue0", this.node).active = !1;
cc.find("glue/glue1", this.node).active = !0;
this.node.getChildByName("glue").getComponent(n.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(150, 200))), cc.callFunc(function() {
cc.find("glue/pourGlue", this.node).active = !0;
cc.find("glue/pourGlue", this.node).getComponent(cc.AudioSource).play();
cc.find("bowl_purple/mix0/glue", this.node).runAction(cc.fadeTo(3, 255));
}.bind(this)), cc.delayTime(3), cc.moveTo(.5, cc.v2(-50, 0)), cc.callFunc(function() {
cc.find("bowl_blue/mix0/glue", this.node).runAction(cc.fadeTo(3, 255));
}.bind(this)), cc.delayTime(3), cc.moveTo(.5, cc.v2(350, 0)), cc.callFunc(function() {
cc.find("bowl_pink/mix0/glue", this.node).runAction(cc.fadeTo(3, 255));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
cc.find("glue/pourGlue", this.node).getComponent(cc.AudioSource).stop();
cc.find("glue/pourGlue", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
cc.find("Canvas/bowl_pink/glitter").getComponent(c.default).doShowAction();
cc.find("Canvas/bowl_purple/glitter").getComponent(c.default).doShowAction();
cc.find("Canvas/bowl_blue/glitter").getComponent(c.default).doShowAction();
}.bind(this))));
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.glitterTouchCancle = function(e) {
e.target.getChildByName("glitter_shadow").active = !0;
};
t.prototype.glitterTouchMove = function(e) {
e.target.getChildByName("glitter_shadow").active = !1;
};
t.prototype.glitterTouchEnd = function(e) {
var t = e.target, o = t.parent;
o.getChildByName("tipMove") && (o.getChildByName("tipMove").active = !1);
t.removeComponent(n.default);
t.runAction(cc.sequence(cc.spawn(cc.moveTo(.5, cc.v2(100, 150)), cc.rotateTo(.5, -90)), cc.callFunc(function() {
t.getChildByName("glitter_lid").active = !1;
t.getChildByName("glitter_fall").runAction(cc.fadeTo(2, 0));
t.getChildByName("pourGlitter").active = !0;
t.getChildByName("pourGlitter").getComponent(cc.AudioSource).play();
cc.find("mix0/glitter", o).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
t.getChildByName("pourGlitter").getComponent(cc.AudioSource).stop();
t.getChildByName("pourGlitter").active = !1;
this.count = this.count + 1;
if (3 == this.count) {
this.node.getChildByName("liquidstarch").getComponent(c.default).doShowAction();
this.count = 0;
}
}.bind(this)), cc.spawn(cc.moveBy(.5, cc.v2(1e3, 0)), cc.rotateTo(.5, 0))));
};
t.prototype.liqTouchEnd = function() {
cc.find("liquidstarch/liquidstarch_lid", this.node).active = !1;
this.node.getChildByName("liquidstarch").getComponent(n.default).enabled = !1;
this.node.getChildByName("liquidstarch").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(180, 220))), cc.callFunc(function() {
cc.find("liquidstarch/pour", this.node).active = !0;
cc.find("liquidstarch/pour", this.node).getComponent(cc.AudioSource).play();
cc.find("bowl_purple/mix" + this.addCount + "/liquidstarch", this.node).runAction(cc.fadeTo(3, 255));
}.bind(this)), cc.delayTime(3), cc.moveTo(.5, cc.v2(-20, 20)), cc.callFunc(function() {
cc.find("bowl_blue/mix" + this.addCount + "/liquidstarch", this.node).runAction(cc.fadeTo(3, 255));
}.bind(this)), cc.delayTime(3), cc.moveTo(.5, cc.v2(370, 20)), cc.callFunc(function() {
cc.find("bowl_pink/mix" + this.addCount + "/liquidstarch", this.node).runAction(cc.fadeTo(3, 255));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
cc.find("liquidstarch/pour", this.node).getComponent(cc.AudioSource).stop();
cc.find("liquidstarch/pour", this.node).active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
if (0 == this.addCount) {
s.default.getInstance().jumpTips();
cc.find("liquidstarch/liquidstarch_lid", this.node).active = !0;
this.node.getChildByName("liquidstarch").opacity = 0;
this.node.getChildByName("liquidstarch").setPosition(cc.v2(300, 160));
cc.find("Canvas/bowl_pink/paint").getComponent(c.default).doShowAction();
cc.find("Canvas/bowl_purple/paint").getComponent(c.default).doShowAction();
cc.find("Canvas/bowl_blue/paint").getComponent(c.default).doShowAction();
} else {
cc.find("Canvas/bowl_pink/spoon").getComponent(n.default).enabled = !0;
cc.find("Canvas/bowl_purple/spoon").getComponent(n.default).enabled = !0;
cc.find("Canvas/bowl_blue/spoon").getComponent(n.default).enabled = !0;
}
}.bind(this))));
};
t.prototype.liqTouchCancle = function() {
cc.find("liquidstarch/liquidstarch_shadow", this.node).active = !0;
};
t.prototype.liqTouchMove = function() {
cc.find("liquidstarch/liquidstarch_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.paintClick = function(e) {
var t = e.target, o = t.parent;
t.getComponent(cc.AudioSource).play();
t.getComponent(cc.Button).interactable = !1;
o.getChildByName("tipClick") && (o.getChildByName("tipClick").active = !1);
t.getChildByName("paintpurple").runAction(cc.scaleTo(.5, 1));
t.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
t.getChildByName("paintpurple").active = !1;
cc.find("mix0/paint", o).active = !0;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1600, 0))), cc.callFunc(function() {
o.getChildByName("spoon").getComponent(c.default).doShowAction();
}.bind(this))));
};
t.prototype.spoonTouchStart = function(e) {
var t = e.target, o = t.parent;
t.getChildByName("spoon0").active = !1;
o.getChildByName("tipRotate") && (o.getChildByName("tipRotate").active = !1);
this.playAction(o.getChildByName("mix" + this.addCount));
};
t.prototype.spoonTouchEnd = function(e) {
var t = e.target, o = t.parent;
t.getChildByName("spoon0").active = !0;
this.stopAction(o.getChildByName("mix" + this.addCount));
};
t.prototype.spoonTouchCancle = function(e) {
var t = e.target;
t.getChildByName("spoon0").active = !0;
t.setPosition(cc.v2(50, 100));
};
t.prototype.playAction = function(e) {
var t = cc.scaleTo(.5, 1, .95), o = cc.scaleTo(.5, .96, 1);
e.runAction(cc.repeatForever(cc.sequence(t, o)));
e.getComponent(i.default).startMix();
};
t.prototype.stopAction = function(e) {
e.stopAllActions();
e.getComponent(i.default).stopMix();
};
t.prototype.mixFinish = function(e) {
var t = e.node, o = t.parent;
t.stopAllActions();
t.setScale(1);
o.getChildByName("spoon").getComponent(n.default).enabled = !1;
o.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
o.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
if (0 == this.addCount) {
this.count = this.count + 1;
o.getChildByName("spoon").runAction(cc.moveTo(.2, cc.v2(120, 90)));
o.getChildByName("mix0").active = !1;
o.getChildByName("mix1").active = !0;
if (3 == this.count) {
this.addCount = this.addCount + 1;
this.node.getChildByName("liquidstarch").getComponent(c.default).doShowAction();
s.default.getInstance().jumpTips();
this.count = 0;
}
} else {
o.getChildByName("spoon").runAction(cc.moveBy(.5, cc.v2(1600, 0)));
o.getChildByName("mix1").active = !1;
o.getChildByName("slime").active = !0;
this.registerTouchEvent(o.getChildByName("slime"));
o.getChildByName("finger") && (o.getChildByName("finger").active = !0);
}
};
t.prototype.registerTouchEvent = function(e) {
e.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
e.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
e.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
e.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function(e) {
e.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
e.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
e.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
e.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
e.target.getComponent(cc.AudioSource).play();
};
t.prototype.onTouchMove = function(e) {
var t = e.target, o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.convertToNodeSpaceAR(o[0].getLocation()), c = t.getChildByName("mixok"), a = i.sub(n), s = c.scaleY + a.y / 10 / 500;
s > 1 && (s = 1);
s < 0 && (s = 0);
c.scaleY = s;
};
t.prototype.onTouchEnd = function(e) {
this._touchEnd(e);
};
t.prototype.onTouchCancle = function(e) {
this._touchEnd(e);
};
t.prototype._touchEnd = function(e) {
var t = e.target, o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.convertToNodeSpaceAR(o[0].getLocation()), c = t.getChildByName("mixok"), s = i.sub(n);
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
t.getComponent(cc.AudioSource).play();
t.runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
if (s.y > 50) {
t.parent.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
t.parent.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
t.parent.getChildByName("finger").active = !1;
this.count = this.count + 1;
this.destroyTouchEvent(t);
if (3 == this.count) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("fuseSlimeGL", 12);
}.bind(this))));
}
}
}.bind(this))));
c.runAction(cc.scaleTo(.5, 1, 0));
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentGL": "MixComponentGL",
"../common/Script/codebase/SpriteDrag/SpriteDragGL": "SpriteDragGL",
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./TipManagerGL": "TipManagerGL"
} ],
MakeSlimeRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77126lCiREnqXi0MIFtvDb", "MakeSlimeRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragRP"), i = e("../common/Script/CombinedComponent/MixComponentRP"), c = e("../common/Script/codebase/TransitionSceneRP"), a = e("./TipManagerRP"), s = e("../common/Script/ads/showLaodingRP"), r = e("../common/Script/codebase/SpriteDrag/DragUtilRP"), l = e("./MyMoveInRP"), d = cc._decorator, u = d.ccclass, p = (d.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
t.mixCount = 0;
t.initPos = null;
t.nameList = null;
return t;
}
t.prototype.onLoad = function() {
this.nameList = [ "blue", "pink", "green", "yellow" ];
this.node.getChildByName("glue").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("glue").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("waterCup").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("waterCup").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("spoon").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("spoon").getComponent(n.default).enabled = !0;
this.node.getChildByName("tipRotate").active = !0;
this.node.getChildByName("tipRotate").setPosition(cc.v2(-230, -180));
}.bind(this);
this.node.getChildByName("yellow").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("yellow").getComponent(n.default).enabled = !0;
this.node.getChildByName("blue").getComponent(n.default).enabled = !0;
this.node.getChildByName("pink").getComponent(n.default).enabled = !0;
this.node.getChildByName("green").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("borax").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("borax").getComponent(cc.Button).interactable = !0;
this.node.getChildByName("tipClick").active = !0;
this.node.getChildByName("tipClick").setPosition(this.node.getChildByName("borax").getPosition());
}.bind(this);
this.node.getChildByName("bowl").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("scoop").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
cc.find("Canvas/bowl/spoon").getComponent(l.default).actionCallBack = function() {
cc.find("Canvas/bowl/spoon").getComponent(n.default).enabled = !0;
this.node.getChildByName("tipRotate").active = !0;
this.node.getChildByName("tipRotate").setPosition(cc.v2(-100, 0));
}.bind(this);
cc.find("Canvas/bowl/waterCup").getComponent(l.default).actionCallBack = function() {
cc.find("Canvas/bowl/waterCup").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("bowl3").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("boraxBowl").getComponent(n.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.node.getChildByName("boraxBowl").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("boraxBowl").getComponent(n.default).enabled = !0;
}.bind(this);
};
t.prototype.glueTouchEnd = function(e) {
var t = e.target.getComponent(n.default).getOnTargetIndex(), o = cc.v2(200, 300);
cc.log(t);
1 == t ? o = cc.v2(-70, 300) : 2 == t ? o = cc.v2(-70, 40) : 3 == t && (o = cc.v2(200, 40));
if (cc.find("bowl" + t + "/mix0/bowl_glue", this.node).active) {
this.node.getChildByName("glue").runAction(cc.moveTo(.5, cc.v2(300, 0)));
cc.find("glue/glue_shadow", this.node).active = !0;
} else {
this.node.getChildByName("glue").getComponent(n.default).enabled = !1;
this.node.getChildByName("glue").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, o)), cc.callFunc(function() {
cc.find("glue/glue0", this.node).active = !1;
cc.find("glue/glue1", this.node).active = !0;
cc.find("glue/pourGlue", this.node).active = !0;
cc.find("glue/pourGlue", this.node).getComponent(cc.AudioSource).play();
cc.find("bowl" + t + "/mix0/bowl_glue", this.node).active = !0;
cc.find("bowl" + t + "/mix0/bowl_glue", this.node).runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("glue/pourGlue", this.node).active = !1;
cc.find("glue/pourGlue", this.node).getComponent(cc.AudioSource).stop();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(300, 0))), cc.callFunc(function() {
cc.find("glue/glue_shadow", this.node).active = !0;
cc.find("glue/glue0", this.node).active = !0;
cc.find("glue/glue1", this.node).active = !1;
this.mixCount = this.mixCount + 1;
if (4 == this.mixCount) {
this.node.getChildByName("glue").runAction(cc.moveBy(.5, cc.v2(1e3, 0)));
this.node.getChildByName("waterCup").getComponent(l.default).doShowAction();
this.mixCount = 0;
} else this.node.getChildByName("glue").getComponent(n.default).enabled = !0;
}.bind(this))));
}
};
t.prototype.glueTouchCancle = function() {
cc.find("glue/glue_shadow", this.node).active = !0;
};
t.prototype.glueTouchMove = function() {
cc.find("glue/glue_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.waterTouchEnd = function(e) {
var t = e.target.getComponent(n.default).getOnTargetIndex(), o = cc.v2(120, 370);
1 == t ? o = cc.v2(-150, 370) : 2 == t ? o = cc.v2(-150, 100) : 3 == t && (o = cc.v2(120, 100));
if (cc.find("bowl" + t + "/mix0/bowl_water", this.node).active) {
this.node.getChildByName("waterCup").runAction(cc.moveTo(.5, cc.v2(300, 0)));
cc.find("waterCup/watercup_shadow", this.node).active = !0;
} else {
this.node.getChildByName("waterCup").getComponent(n.default).enabled = !1;
this.node.getChildByName("waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, o)), cc.callFunc(function() {
cc.find("waterCup/pourWater", this.node).active = !0;
cc.find("waterCup/pourWater", this.node).getComponent(cc.AudioSource).play();
cc.find("bowl" + t + "/mix0/bowl_water", this.node).active = !0;
cc.find("bowl" + t + "/mix0/bowl_water", this.node).runAction(cc.scaleTo(1.5, 1));
cc.find("waterCup/waterMask1", this.node).opacity = 0;
cc.find("waterCup/waterMask2", this.node).opacity = 255;
cc.find("waterCup/waterMask1/water1", this.node).runAction(cc.moveBy(1.5, cc.v2(0, -35)));
cc.find("waterCup/waterMask2/water2", this.node).runAction(cc.moveBy(1.5, cc.v2(-15, -10)));
}.bind(this)), cc.delayTime(1.5), cc.callFunc(function() {
cc.find("waterCup/pourWater", this.node).active = !1;
cc.find("waterCup/pourWater", this.node).getComponent(cc.AudioSource).stop();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(300, 0))), cc.callFunc(function() {
cc.find("waterCup/watercup_shadow", this.node).active = !0;
cc.find("waterCup/waterMask1", this.node).opacity = 255;
cc.find("waterCup/waterMask2", this.node).opacity = 0;
this.mixCount = this.mixCount + 1;
if (4 == this.mixCount) {
this.node.getChildByName("waterCup").runAction(cc.moveBy(.5, cc.v2(1e3, 0)));
this.node.getChildByName("spoon").getComponent(l.default).doShowAction();
this.mixCount = 0;
} else this.node.getChildByName("waterCup").getComponent(n.default).enabled = !0;
}.bind(this))));
}
};
t.prototype.waterTouchCancle = function() {
cc.find("waterCup/watercup_shadow", this.node).active = !0;
};
t.prototype.waterTouchMove = function() {
cc.find("waterCup/watercup_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.colorTouchEnd = function(e) {
this.node.getChildByName("finger1").active = !1;
var t = e.target, o = t.getComponent(n.default).getOnTargetIndex(), i = cc.v2(120, 270);
1 == o ? i = cc.v2(-150, 270) : 2 == o ? i = cc.v2(-150, 0) : 3 == o && (i = cc.v2(120, 0));
if (cc.find("bowl" + o + "/mix1/color", this.node).active) {
cc.log(this.initPos);
t.runAction(cc.moveTo(.5, this.initPos));
t.getChildByName("fooddyeblue_shadow").active = !0;
} else {
cc.find("bowl" + o + "/mix1/color", this.node).active = !0;
this.loadImage(t.name, cc.find("bowl" + o, this.node));
t.getComponent(n.default).enabled = !1;
t.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, i)), cc.callFunc(function() {
t.getChildByName("pourColor").active = !0;
t.getChildByName("pourColor").getComponent(cc.AudioSource).play();
cc.find("bowl" + o + "/mix1/color", this.node).runAction(cc.scaleTo(1, 1));
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
t.getChildByName("pourColor").active = !0;
t.getChildByName("pourColor").getComponent(cc.AudioSource).stop();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(-1e3, 0))), cc.callFunc(function() {
this.activateSpriteDrag();
this.mixCount = this.mixCount + 1;
if (4 == this.mixCount) {
this.node.getChildByName("spoon").getComponent(l.default).doShowAction();
this.mixCount = 0;
}
}.bind(this))));
}
};
t.prototype.colorTouchCancle = function(e) {
e.target.getChildByName("fooddyeblue_shadow").active = !0;
};
t.prototype.colorTouchStart = function(e) {
var t = e.target;
this.initPos = t.getPosition();
t.getChildByName("fooddyeblue_shadow").active = !1;
this.node.getChildByName("finger1").active = !1;
this.sleepSpriteDrag(t.name);
};
t.prototype.sleepSpriteDrag = function(e) {
this.nameList.forEach(function(t) {
cc.find("Canvas/" + t).getComponent(n.default).enabled = !!e && t == e;
});
};
t.prototype.activateSpriteDrag = function() {
this.nameList.forEach(function(e) {
cc.find("Canvas/" + e).getComponent(n.default).enabled = !0;
});
};
t.prototype.loadImage = function(e, t) {
cc.loader.loadRes("rainbowpoop/image/color/bowlfooddye_" + e, cc.SpriteFrame, function(e, o) {
t.getChildByName("mix1").getChildByName("color").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}.bind(this));
cc.loader.loadRes("rainbowpoop/image/color/bowlfooddye" + e + "_mix1", cc.SpriteFrame, function(e, o) {
t.getChildByName("mix2").getChildByName("bowl_mix1").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}.bind(this));
cc.loader.loadRes("rainbowpoop/image/color/bowl_" + e + "_mix1_4", cc.SpriteFrame, function(e, o) {
t.getChildByName("mix3").getChildByName("bowl_mix1").getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}.bind(this));
for (var o = function(o) {
cc.loader.loadRes("rainbowpoop/image/color/bowlfooddye" + e + "_mix" + o, cc.SpriteFrame, function(e, n) {
t.getChildByName("mix1").getComponent(i.default).mixPaths[o] = n;
cc.loader.setAutoRelease(n, !0);
}.bind(n));
}, n = this, c = 0; c < 2; c++) o(c);
var a = function(o) {
cc.loader.loadRes("rainbowpoop/image/color/bowl_" + e + "_mix1_" + o, cc.SpriteFrame, function(e, n) {
t.getChildByName("mix2").getComponent(i.default).mixPaths[o] = n;
cc.loader.setAutoRelease(n, !0);
}.bind(s));
}, s = this;
for (c = 0; c < 5; c++) a(c);
var r = function(o) {
cc.loader.loadRes("rainbowpoop/image/color/bowl_" + e + "_mix2_" + o, cc.SpriteFrame, function(e, n) {
t.getChildByName("mix3").getComponent(i.default).mixPaths[o] = n;
cc.loader.setAutoRelease(n, !0);
}.bind(l));
}, l = this;
for (c = 0; c < 4; c++) r(c);
};
t.prototype.spoonTouchStart = function(e) {
this.node.getChildByName("tipRotate").active = !1;
for (var t = e.target, o = 0; o < 4; o++) {
var n = cc.find("Canvas/bowl" + o).getComponent(cc.PolygonCollider), i = t.getComponent(cc.PolygonCollider);
r.DragUtil.collideInCollie(i, n) ? this.playAction(cc.find("Canvas/bowl" + o + "/mix" + this.count)) : this.stopAction(cc.find("Canvas/bowl" + o + "/mix" + this.count));
}
};
t.prototype.spoonTouchMove = function(e) {
for (var t = e.target, o = 0; o < 4; o++) {
var n = cc.find("Canvas/bowl" + o).getComponent(cc.PolygonCollider), i = t.getComponent(cc.PolygonCollider);
r.DragUtil.collideInCollie(i, n) ? this.playAction(cc.find("Canvas/bowl" + o + "/mix" + this.count)) : this.stopAction(cc.find("Canvas/bowl" + o + "/mix" + this.count));
}
cc.log(this.node.getChildByName("spoon").getChildByName("spoon0").active);
};
t.prototype.spoonTouchEnd = function(e) {
var t = e.target;
t.parent;
t.getChildByName("spoon0").active = !0;
for (var o = 0; o < 4; o++) this.stopAction(cc.find("Canvas/bowl" + o + "/mix" + this.count));
};
t.prototype.spoonTouchCancle = function(e) {
e.target.getChildByName("spoon0").active = !0;
for (var t = 0; t < 4; t++) this.stopAction(cc.find("Canvas/bowl" + t + "/mix" + this.count));
};
t.prototype.playAction = function(e) {
var t = cc.scaleTo(.5, 1, .95), o = cc.scaleTo(.5, .96, 1);
if (!e.parent.getChildByName("isMixing").active && !e.parent.getChildByName("isFinish").active) {
this.node.getChildByName("spoon").getChildByName("spoon0").active = !1;
cc.log(this.node.getChildByName("spoon").getChildByName("spoon0").active);
e.runAction(cc.repeatForever(cc.sequence(t, o)));
e.parent.getChildByName("isMixing").active = !0;
e.getComponent(i.default).startMix();
}
};
t.prototype.stopAction = function(e) {
e.stopAllActions();
for (var t = !0, o = 0; o < 4; o++) {
if (cc.find("Canvas/bowl" + o + "/isMixing").active) {
t = !1;
break;
}
t = !0;
}
this.node.getChildByName("spoon").getChildByName("spoon0").active = !!t;
e.parent.getChildByName("isMixing").active = !1;
e.getComponent(i.default).stopMix();
};
t.prototype.boraxClick = function() {
this.node.getChildByName("tipClick").active = !1;
cc.find("Canvas/borax/borax_shadow").active = !1;
cc.find("Canvas/borax/borax").active = !1;
cc.find("Canvas/borax/borax_fall").active = !0;
this.node.getChildByName("borax").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 50), cc.moveTo(.5, cc.v2(0, 160))), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").active = !0;
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).play();
cc.find("Canvas/scoop/scoop_borax").runAction(cc.scaleTo(2, 1));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/borax/pourSugar").getComponent(cc.AudioSource).stop();
cc.find("Canvas/borax/pourSugar").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(-1700, 0))), cc.callFunc(function() {
this.node.getChildByName("bowl").getComponent(l.default).doShowAction();
}.bind(this))));
};
t.prototype.scoopTouchStart = function() {
this.node.getChildByName("finger1").active = !1;
};
t.prototype.scoopTouchEnd = function() {
this.node.getChildByName("scoop").getComponent(n.default).enabled = !1;
this.node.getChildByName("scoop").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -30), cc.moveTo(.5, cc.v2(-30, 250))), cc.callFunc(function() {
cc.find("Canvas/scoop/pourFlour").active = !0;
cc.find("Canvas/scoop/pourFlour").getComponent(cc.AudioSource).play();
cc.find("Canvas/scoop/scoop_borax").runAction(cc.scaleTo(2, 0));
cc.find("Canvas/bowl/mix/bowl_borax").runAction(cc.fadeTo(2, 255));
}.bind(this)), cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/scoop/pourFlour").getComponent(cc.AudioSource).stop();
cc.find("Canvas/scoop/pourFlour").active = !1;
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/bowl/waterCup").getComponent(l.default).doShowAction();
}.bind(this))));
};
t.prototype.mixFinish = function(e) {
var t = e.node, o = t.parent;
t.stopAllActions();
t.setScale(1);
o.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
o.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
o.getChildByName("isFinish").active = !0;
this.mixCount = this.mixCount + 1;
if (4 == this.mixCount) {
a.default.getInstance().jumpTips();
this.node.getChildByName("spoon").getComponent(n.default).enabled = !1;
this.node.getChildByName("spoon").getChildByName("spoon0").active = !0;
this.node.getChildByName("spoon").runAction(cc.sequence(cc.moveBy(.5, cc.v2(-1500, 0)), cc.callFunc(function() {
this.node.getChildByName("spoon").opacity = 0;
this.node.getChildByName("spoon").setPosition(cc.v2(-200, -50));
this.mixCount = 0;
if (3 == this.count) {
cc.find("Canvas/finish").getComponent(cc.ParticleSystem).resetSystem();
cc.find("Canvas/finish").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
s.default.getInstance().loadingDoneCallback = function() {
s.default.getInstance().loadingDoneCallback = null;
c.default.changeScene("fuseSlimeRP", 7);
}.bind(this);
s.default.getInstance().showAds("rainbowpoop/prefab/loadingRP", "rainbowpoop/prefab/loading1", !1);
}.bind(this))));
this.node.getChildByName("bowl0").runAction(cc.moveTo(.5, cc.v2(150, 130)));
this.node.getChildByName("bowl1").runAction(cc.moveTo(.5, cc.v2(-150, 130)));
this.node.getChildByName("bowl2").runAction(cc.moveTo(.5, cc.v2(-150, -130)));
this.node.getChildByName("bowl3").runAction(cc.moveTo(.5, cc.v2(150, -130)));
} else {
for (var e = 0; e < 4; e++) {
cc.find("Canvas/bowl" + e + "/isMixing").active = !1;
cc.find("Canvas/bowl" + e + "/isFinish").active = !1;
cc.find("Canvas/bowl" + e + "/mix" + this.count).active = !1;
cc.find("Canvas/bowl" + e + "/mix" + (this.count + 1)).active = !0;
}
if (0 == this.count) {
this.node.getChildByName("yellow").getComponent(l.default).doShowAction();
this.node.getChildByName("blue").getComponent(l.default).doShowAction();
this.node.getChildByName("pink").getComponent(l.default).doShowAction();
this.node.getChildByName("green").getComponent(l.default).doShowAction();
} else if (1 == this.count) {
this.node.getChildByName("bowl0").getComponent(cc.AudioSource).play();
this.node.getChildByName("bowl1").runAction(cc.sequence(cc.moveBy(.5, cc.v2(-1e3, 0)), cc.callFunc(function() {
this.node.getChildByName("bowl1").opacity = 0;
this.node.getChildByName("bowl1").setPosition(cc.v2(-260, 130));
}.bind(this))));
this.node.getChildByName("bowl2").runAction(cc.sequence(cc.delayTime(.5), cc.moveBy(.5, cc.v2(-1e3, 0)), cc.callFunc(function() {
this.node.getChildByName("bowl0").getComponent(cc.AudioSource).play();
this.node.getChildByName("bowl2").opacity = 0;
this.node.getChildByName("bowl2").setPosition(cc.v2(-260, -130));
}.bind(this))));
this.node.getChildByName("bowl0").runAction(cc.sequence(cc.delayTime(1), cc.moveBy(.5, cc.v2(-1e3, 0)), cc.callFunc(function() {
this.node.getChildByName("bowl0").getComponent(cc.AudioSource).play();
this.node.getChildByName("bowl0").opacity = 0;
this.node.getChildByName("bowl0").setPosition(cc.v2(0, 130));
}.bind(this))));
this.node.getChildByName("bowl3").runAction(cc.sequence(cc.delayTime(1.5), cc.moveBy(.5, cc.v2(-1e3, 0)), cc.callFunc(function() {
this.node.getChildByName("bowl3").opacity = 0;
this.node.getChildByName("bowl3").setPosition(cc.v2(0, -130));
this.node.getChildByName("borax").active = !0;
this.node.getChildByName("scoop").active = !0;
}.bind(this))));
} else 2 == this.count && this.node.getChildByName("boraxBowl").getComponent(l.default).doShowAction();
this.count = this.count + 1;
}
}.bind(this))));
}
};
t.prototype.waterCupTouchStart = function() {
cc.find("Canvas/bowl/waterCup/watercup_shadow").active = !1;
this.node.getChildByName("finger1").active = !1;
};
t.prototype.waterCupTouchEnd = function() {
cc.find("Canvas/bowl/waterCup").getComponent(n.default).enabled = !1;
cc.find("Canvas/bowl/waterCup").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(80, 270))), cc.callFunc(function() {
cc.find("Canvas/bowl/waterCup/pourWater").active = !0;
cc.find("Canvas/bowl/waterCup/pourWater").getComponent(cc.AudioSource).play();
cc.find("bowl/waterCup/waterMask1", this.node).opacity = 0;
cc.find("bowl/waterCup/waterMask2", this.node).opacity = 255;
cc.find("bowl/waterCup/waterMask1/water1", this.node).runAction(cc.moveBy(3, cc.v2(0, -150)));
cc.find("bowl/waterCup/waterMask2/water2", this.node).runAction(cc.moveBy(3, cc.v2(-70, -50)));
cc.find("Canvas/bowl/mix/bowl_water").runAction(cc.scaleTo(3, 1));
}.bind(this)), cc.delayTime(3), cc.callFunc(function() {
cc.find("Canvas/bowl/waterCup/pourWater").active = !1;
cc.find("Canvas/bowl/waterCup/pourWater").getComponent(cc.AudioSource).stop();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(1700, 0))), cc.callFunc(function() {
cc.find("Canvas/bowl/spoon").getComponent(l.default).doShowAction();
}.bind(this))));
};
t.prototype.waterCupTouchCancle = function() {
cc.find("Canvas/bowl/waterCup/watercup_shadow").active = !0;
};
t.prototype.bowlspoonTouchStart = function() {
cc.find("Canvas/bowl/spoon/spoon0").active = !1;
this.node.getChildByName("tipRotate").active = !1;
this.playAction1();
};
t.prototype.bowlspoonTouchEnd = function(e) {
cc.find("Canvas/bowl/spoon/spoon0").active = !0;
this.stopAction1();
};
t.prototype.playAction1 = function() {
var e = cc.scaleTo(.5, 1.04, .95), t = cc.scaleTo(.5, .96, 1.05);
cc.find("Canvas/bowl/mix").runAction(cc.repeatForever(cc.sequence(e, t)));
cc.find("Canvas/bowl/mix").runAction(cc.repeatForever(cc.rotateBy(20, 360)));
cc.find("Canvas/bowl/mix").getComponent(i.default).startMix();
};
t.prototype.stopAction1 = function() {
cc.find("Canvas/bowl/mix").stopAllActions();
cc.find("Canvas/bowl/mix").getComponent(i.default).stopMix();
};
t.prototype.waterMixFinish = function(e) {
var t = e.node, o = t.parent;
t.stopAllActions();
t.setScale(1);
t.angle = 0;
o.getChildByName("spoon").runAction(cc.moveBy(.5, cc.v2(-1500, 0)));
o.getChildByName("spoon").getComponent(n.default).enabled = !1;
o.getChildByName("decorateParticle").getComponent(cc.ParticleSystem).resetSystem();
o.getChildByName("decorateParticle").getComponent(cc.AudioSource).play();
o.runAction(cc.sequence(cc.delayTime(.5), cc.spawn(cc.scaleTo(.5, .6), cc.moveTo(.5, cc.v2(300, -150))), cc.callFunc(function() {
this.node.getChildByName("boraxBowl").active = !0;
this.node.getChildByName("boraxBowl").getComponent(n.default).enabled = !1;
for (var e = 0; e < 4; e++) this.node.getChildByName("bowl" + e).getComponent(l.default).doShowAction();
o.active = !1;
}.bind(this))));
};
t.prototype.bowlTouchEnd = function(e) {
this.node.getChildByName("finger1").active = !1;
var t = e.target.getComponent(n.default).getOnTargetIndex(), o = cc.v2(120, 250);
1 == t ? o = cc.v2(-150, 250) : 2 == t ? o = cc.v2(-150, -20) : 3 == t && (o = cc.v2(120, -20));
if (cc.find("bowl" + t + "/mix" + this.count + "/water", this.node).active) {
this.node.getChildByName("boraxBowl").runAction(cc.moveTo(.5, cc.v2(300, -150)));
cc.find("boraxBowl/bowl_shadow", this.node).active = !0;
} else {
this.node.getChildByName("boraxBowl").getComponent(n.default).enabled = !1;
this.node.getChildByName("boraxBowl").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, o)), cc.callFunc(function() {
cc.find("boraxBowl/pourWater", this.node).active = !0;
cc.find("boraxBowl/pourWater", this.node).getComponent(cc.AudioSource).play();
cc.find("bowl" + t + "/mix" + this.count + "/water", this.node).active = !0;
cc.find("bowl" + t + "/mix" + this.count + "/water", this.node).runAction(cc.scaleTo(1.5, 1));
cc.find("boraxBowl/water", this.node).opacity = 0;
cc.find("boraxBowl/waterFall", this.node).opacity = 255;
cc.find("boraxBowl/water", this.node).runAction(cc.scaleBy(1.5, .95));
cc.find("boraxBowl/waterFall/water", this.node).runAction(cc.moveBy(1.5, cc.v2(-15, 0)));
}.bind(this)), cc.delayTime(1.5), cc.callFunc(function() {
cc.find("boraxBowl/pourWater", this.node).active = !1;
cc.find("boraxBowl/pourWater", this.node).getComponent(cc.AudioSource).stop();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveTo(.5, cc.v2(300, -150))), cc.callFunc(function() {
cc.find("boraxBowl/bowl_shadow", this.node).active = !0;
cc.find("boraxBowl/water", this.node).opacity = 255;
cc.find("boraxBowl/waterFall", this.node).opacity = 0;
this.mixCount = this.mixCount + 1;
if (4 == this.mixCount) {
this.node.getChildByName("spoon").getComponent(l.default).doShowAction();
this.mixCount = 0;
this.node.getChildByName("boraxBowl").runAction(cc.sequence(cc.moveBy(.5, cc.v2(1600, 0)), cc.callFunc(function() {
this.node.getChildByName("boraxBowl").opacity = 0;
this.node.getChildByName("boraxBowl").setPosition(cc.v2(300, -150));
}.bind(this))));
} else this.node.getChildByName("boraxBowl").getComponent(n.default).enabled = !0;
}.bind(this))));
}
};
t.prototype.bowlTouchCancle = function() {
cc.find("boraxBowl/bowl_shadow", this.node).active = !0;
};
t.prototype.bowlTouchMove = function() {
cc.find("boraxBowl/bowl_shadow", this.node).active = !1;
this.node.getChildByName("finger1").active = !1;
};
return t = __decorate([ u ], t);
}(cc.Component));
o.default = p;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentRP": "MixComponentRP",
"../common/Script/ads/showLaodingRP": "showLaodingRP",
"../common/Script/codebase/SpriteDrag/DragUtilRP": "DragUtilRP",
"../common/Script/codebase/SpriteDrag/SpriteDragRP": "SpriteDragRP",
"../common/Script/codebase/TransitionSceneRP": "TransitionSceneRP",
"./MyMoveInRP": "MyMoveInRP",
"./TipManagerRP": "TipManagerRP"
} ],
MaskDrawCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "437cdbNy4dDJbfuFwvaeboG", "MaskDrawCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e);
this.mask._graphics.lineWidth = 1;
this.mask._graphics.strokeColor = cc.color(255, 0, 0);
this.mask._graphics.fillColor = cc.color(0, 255, 0);
this.mask._graphics.circle(t.x, t.y, this.r);
this.mask._graphics.fill();
this.mask._graphics.stroke();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1461Bowt1KtLwRGKAEIJ/R", "MaskDrawCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e), o = this.mask._graphics;
o.circle(t.x, t.y, this.r);
o.fill();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22cdbNy4dDJbfuFwvaeboG", "MaskDrawCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e);
this.mask._graphics.lineWidth = 1;
this.mask._graphics.strokeColor = cc.color(255, 0, 0);
this.mask._graphics.fillColor = cc.color(0, 255, 0);
this.mask._graphics.circle(t.x, t.y, this.r);
this.mask._graphics.fill();
this.mask._graphics.stroke();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2161Bowt1KtLwRGKAEIJ/R", "MaskDrawFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e), o = this.mask._graphics;
o.circle(t.x, t.y, this.r);
o.fill();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1961Bowt1KtLwRGKAEIJ/R", "MaskDrawGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e), o = this.mask._graphics;
o.circle(t.x, t.y, this.r);
o.fill();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "355fdJjy0pBL51EzR0yYilJ", "MaskDrawGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e);
this.mask._graphics.lineWidth = 1;
this.mask._graphics.strokeColor = cc.color(255, 0, 0);
this.mask._graphics.fillColor = cc.color(0, 255, 0);
this.mask._graphics.circle(t.x, t.y, this.r);
this.mask._graphics.fill();
this.mask._graphics.stroke();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11cdbNy4dDJbfuFwvaeboG", "MaskDrawHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e);
this.mask._graphics.lineWidth = 1;
this.mask._graphics.strokeColor = cc.color(255, 0, 0);
this.mask._graphics.fillColor = cc.color(0, 255, 0);
this.mask._graphics.circle(t.x, t.y, this.r);
this.mask._graphics.fill();
this.mask._graphics.stroke();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1d1f9GDTzdFCI6NitD7MvzR", "MaskDrawMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e), o = this.mask._graphics;
o.circle(t.x, t.y, this.r);
o.fill();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7761Bowt1KtLwRGKAEIJ/R", "MaskDrawRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e), o = this.mask._graphics;
o.circle(t.x, t.y, this.r);
o.fill();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12cdbNy4dDJbfuFwvaeboG", "MaskDrawRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e);
this.mask._graphics.lineWidth = 1;
this.mask._graphics.strokeColor = cc.color(255, 0, 0);
this.mask._graphics.fillColor = cc.color(0, 255, 0);
this.mask._graphics.circle(t.x, t.y, this.r);
this.mask._graphics.fill();
this.mask._graphics.stroke();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDrawSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13cdbNy4dDJbfuFwvaeboG", "MaskDrawSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e);
this.mask._graphics.lineWidth = 1;
this.mask._graphics.strokeColor = cc.color(255, 0, 0);
this.mask._graphics.fillColor = cc.color(0, 255, 0);
this.mask._graphics.circle(t.x, t.y, this.r);
this.mask._graphics.fill();
this.mask._graphics.stroke();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MaskDraw: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ccb61Bowt1KtLwRGKAEIJ/R", "MaskDraw");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function() {
function e() {
this.mask = null;
this.r = 16;
}
e.prototype.addCircle = function(e) {
if (null != this.mask && this.mask.enabledInHierarchy) {
var t = this.mask.node.convertToNodeSpaceAR(e), o = this.mask._graphics;
o.circle(t.x, t.y, this.r);
o.fill();
}
};
e.prototype.addLine = function(e, t) {
for (var o = t.sub(e).mag(), n = 0; n < o; n += 3) {
var i = n / o, c = t.x - e.x, a = t.y - e.y;
this.addCircle(new cc.Vec2(e.x + c * i, e.y + a * i));
}
};
e.prototype.empty = function() {
this.mask._graphics.clear();
};
__decorate([ c(cc.Mask) ], e.prototype, "mask", void 0);
__decorate([ c() ], e.prototype, "r", void 0);
return e = __decorate([ i("MaskDraw") ], e);
}();
o.default = a;
cc._RF.pop();
}, {} ],
MixComponentCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a3185Z+Np1MAajxExyFrV4P", "MixComponentCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerCB"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerCB": "EventListenerCB"
} ],
MixComponentCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14950si/dNB7dCxfmWAHPd", "MixComponentCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerCE"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t.noTrim = !1;
t.changOpacity = !0;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
var i = n.addComponent(cc.Sprite);
i.spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
if (this.noTrim) {
i.trim = !1;
n.height = this.node.height;
n.width = this.node.width;
}
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
if ("changing" != s.name && s.active) {
s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit);
this.changOpacity || (s.zIndex = 1);
}
} else if (this._count - 1 < this._changeNodes.length) {
(t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit);
this.changOpacity || (t.zIndex = 1);
}
if (this._count < this._changeNodes.length) if (this.changOpacity) (i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255; else {
(i = this._changeNodes[this._count]).opacity = 255;
i.zIndex = 0;
}
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
__decorate([ a(Boolean) ], t.prototype, "noTrim", void 0);
__decorate([ a(Boolean) ], t.prototype, "changOpacity", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerCE": "EventListenerCE"
} ],
MixComponentCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2285Z+Np1MAajxExyFrV4P", "MixComponentCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerCS": "EventListenerCS"
} ],
MixComponentFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21950si/dNB7dCxfmWAHPd", "MixComponentFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t.changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this.changeNodes.length) for (var t = 0, o = this.changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this.changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this.changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this.changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this.changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this.changeNodes.length && ((t = this.changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this.changeNodes.length && ((i = this.changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this.changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
t.prototype.reset = function() {
this._count = 0;
this.changeNodes = [];
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerFS": "EventListenerFS"
} ],
MixComponentGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19950si/dNB7dCxfmWAHPd", "MixComponentGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t.changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this.changeNodes.length) for (var t = 0, o = this.changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this.changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this.changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this.changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this.changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this.changeNodes.length && ((t = this.changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this.changeNodes.length && ((i = this.changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this.changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
t.prototype.reset = function() {
this._count = 0;
this.changeNodes = [];
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerGL": "EventListenerGL"
} ],
MixComponentGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "16465/xhBRPE56bkdW994ye", "MixComponentGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerGS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t.count = 0;
t._count = 0;
t.nextCount = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
this.count = this._count;
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerGS": "EventListenerGS"
} ],
MixComponentHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1185Z+Np1MAajxExyFrV4P", "MixComponentHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerHC"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerHC": "EventListenerHC"
} ],
MixComponentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "30e3fNgS/5OeKER7V0o9aaz", "MixComponentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t.changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this.changeNodes.length) for (var t = 0, o = this.changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this.changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this.changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this.changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this.changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this.changeNodes.length && ((t = this.changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this.changeNodes.length && ((i = this.changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this.changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
t.prototype.reset = function() {
this._count = 0;
this.changeNodes = [];
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerMS": "EventListenerMS"
} ],
MixComponentRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77950si/dNB7dCxfmWAHPd", "MixComponentRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t.changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this.changeNodes.length) for (var t = 0, o = this.changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this.changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this.changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this.changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this.changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this.changeNodes.length && ((t = this.changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this.changeNodes.length && ((i = this.changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this.changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
t.prototype.reset = function() {
this._count = 0;
this.changeNodes = [];
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerRP": "EventListenerRP"
} ],
MixComponentRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1285Z+Np1MAajxExyFrV4P", "MixComponentRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerRS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerRS": "EventListenerRS"
} ],
MixComponentSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1385Z+Np1MAajxExyFrV4P", "MixComponentSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerSD"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerSD": "EventListenerSD"
} ],
MixComponent: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9c5950si/dNB7dCxfmWAHPd", "MixComponent");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListener"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t.changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this.changeNodes.length) for (var t = 0, o = this.changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this.changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this.changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this.changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this.changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this.changeNodes.length && ((t = this.changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this.changeNodes.length && ((i = this.changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this.changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
t.prototype.reset = function() {
this._count = 0;
this.changeNodes = [];
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListener": "EventListener"
} ],
MoreGameButtonCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e6512FG8+VDjoen2NA061Px", "MoreGameButtonCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1412FG8+VDjoen2NA061Px", "MoreGameButtonCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2212FG8+VDjoen2NA061Px", "MoreGameButtonCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2112FG8+VDjoen2NA061Px", "MoreGameButtonFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1912FG8+VDjoen2NA061Px", "MoreGameButtonGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1112FG8+VDjoen2NA061Px", "MoreGameButtonHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7712FG8+VDjoen2NA061Px", "MoreGameButtonRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1212FG8+VDjoen2NA061Px", "MoreGameButtonRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoreGameButtonSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1312FG8+VDjoen2NA061Px", "MoreGameButtonSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showMoreGame = function() {
this.node.getComponent(cc.AudioSource).play();
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
MoveComponentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b5ab5O9PTdDG7mM3ymkra26", "MoveComponentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.currntTime = 0;
t.changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this.changeNodes.length) for (var t = 0, o = this.changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this.changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
console.log("startMix");
if (0 == this.changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
n.addComponent(cc.Sprite).spriteFrame = o;
n.opacity = 0;
n.parent = this.node;
this.changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this.changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this.changeNodes.length && ((t = this.changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this.changeNodes.length && ((i = this.changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this.changeNodes.length) {
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
t.prototype.reset = function() {
this._count = 0;
this.changeNodes = [];
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerMS": "EventListenerMS"
} ],
MoveInCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fb6dcLhLJtJlatj4qkfgPUQ", "MoveInCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n), cc.rotateBy(.58, -n).easing(cc.easeBackInOut()));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14cbn/GB9HJpaFlxASkauB", "MoveInCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4,
EaseBackOut: 5
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this;
console.log("doShowAction" + this.node.position);
var t = this.node.position, o = this.getScreenPos(this.node, this.direction);
this.node.setPosition(o);
this.node.opacity = 255;
var n;
switch (this.action) {
case s.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * t.x, t.y + 150), cc.v2(.5 * t.x, t.y + 150), cc.v2(t.x, t.y) ]);
break;

case s.EaseElastic:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
break;

case s.EaseBackOut:
n = cc.moveTo(1, t).easing(cc.easeBackOut());
break;

case s.JumpTo:
n = cc.jumpTo(1, t, 200, 1);
break;

case s.Rote:
var i = -10;
this.direction == a.left && (i = 10);
n = cc.spawn(cc.moveTo(1, t).easing(cc.easeBackOut()), cc.sequence(cc.rotateBy(.6, i), cc.rotateBy(.1, -i)));
break;

default:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
}
var c, r = this;
c = cc.callFunc(function() {
console.log(e.actionCallBack);
e.actionCallBack && e.actionCallBack();
});
var l = cc.delayTime(this.delayTime), d = cc.sequence(l, cc.callFunc(function() {
r.scoreAudio && cc.audioEngine.play(r.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(d);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22dcLhLJtJlatj4qkfgPUQ", "MoveInCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4,
EaseBackOut: 5
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.EaseBackOut:
o = cc.moveTo(1, e).easing(cc.easeBackOut());
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.sequence(cc.rotateBy(.6, n), cc.rotateBy(.1, -n)));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21cbn/GB9HJpaFlxASkauB", "MoveInFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4,
EaseBackOut: 5
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
var l = n.getScreenToWorldPoint(c, new cc.Vec2());
c = cc.v2(l.x, l.y);
var d = n.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.onLoad = function() {
cc.log(this.isLoad);
this.isLoad || this.doShowAction();
};
t.prototype.doShowAction = function() {
var e = this;
console.log("doShowAction" + this.node.position);
var t = this.node.position, o = this.getScreenPos(this.node, this.direction);
this.node.setPosition(o);
this.node.opacity = 255;
var n;
switch (this.action) {
case s.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * t.x, t.y + 150), cc.v2(.5 * t.x, t.y + 150), cc.v2(t.x, t.y) ]);
break;

case s.EaseElastic:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
break;

case s.EaseBackOut:
n = cc.moveTo(1, t).easing(cc.easeBackOut());
break;

case s.JumpTo:
n = cc.jumpTo(1, t, 200, 1);
break;

case s.Rote:
var i = -10;
this.direction == a.left && (i = 10);
n = cc.spawn(cc.moveTo(1, t).easing(cc.easeBackOut()), cc.sequence(cc.rotateBy(.6, i), cc.rotateBy(.1, -i)));
break;

default:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
}
var c, r = this;
c = cc.callFunc(function() {
console.log(e.actionCallBack);
e.actionCallBack && e.actionCallBack();
});
var l = cc.delayTime(this.delayTime), d = cc.sequence(l, cc.callFunc(function() {
r.scoreAudio && cc.audioEngine.play(r.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(d);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19cbn/GB9HJpaFlxASkauB", "MoveInGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4,
EaseBackOut: 5
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
var l = n.getScreenToWorldPoint(c, new cc.Vec2());
c = cc.v2(l.x, l.y);
var d = n.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.onLoad = function() {};
t.prototype.doShowAction = function() {
var e = this;
console.log("doShowAction" + this.node.position);
var t = this.node.position, o = this.getScreenPos(this.node, this.direction);
this.node.setPosition(o);
this.node.opacity = 255;
var n;
switch (this.action) {
case s.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * t.x, t.y + 150), cc.v2(.5 * t.x, t.y + 150), cc.v2(t.x, t.y) ]);
break;

case s.EaseElastic:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
break;

case s.EaseBackOut:
n = cc.moveTo(1, t).easing(cc.easeBackOut());
break;

case s.JumpTo:
n = cc.jumpTo(1, t, 200, 1);
break;

case s.Rote:
var i = -10;
this.direction == a.left && (i = 10);
n = cc.spawn(cc.moveTo(1, t).easing(cc.easeBackOut()), cc.sequence(cc.rotateBy(.6, i), cc.rotateBy(.1, -i)));
break;

default:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
}
var c, r = this;
c = cc.callFunc(function() {
console.log(e.actionCallBack);
e.actionCallBack && e.actionCallBack();
});
var l = cc.delayTime(this.delayTime), d = cc.sequence(l, cc.callFunc(function() {
r.scoreAudio && cc.audioEngine.play(r.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(d);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "70680JM7K1JG7NuyExROGFr", "MoveInGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.endpos = cc.v2(0, 0);
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - 1.5 * e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * e.getAnchorPoint().y);
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this.endpos, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.sequence(cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n)), cc.rotateBy(.58, -n).easing(cc.easeBackInOut()));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c ], t.prototype, "endpos", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11dcLhLJtJlatj4qkfgPUQ", "MoveInHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - 1.5 * e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * e.getAnchorPoint().y);
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n), cc.rotateBy(.58, -n).easing(cc.easeBackInOut()));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "779b3GnknFLIoDdKjsoqU66", "MoveInMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property;
o.ShowDirection = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
});
o.ActionType = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
});
var a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = o.ShowDirection.left;
t.action = o.ActionType.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
t.isShow = !1;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var n, i = cc.Camera.findCamera(e), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != i) {
var l = i.getScreenToWorldPoint(a, new cc.Vec2());
a = cc.v2(l.x, l.y);
var d = i.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (t) {
case o.ShowDirection.bottom:
n = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y) - 500);
break;

case o.ShowDirection.left:
n = new cc.Vec2(a.x - 1.5 * e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case o.ShowDirection.right:
n = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case o.ShowDirection.top:
n = new cc.Vec2(r.x, a.y + e.getContentSize().width * e.getAnchorPoint().y + 500);
}
null != e.parent && (n = e.parent.convertToNodeSpaceAR(n));
return n;
};
t.prototype.onLoad = function() {
this.isShow || this.isLoad || this.doShowAction();
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var n;
switch (this.action) {
case o.ActionType.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case o.ActionType.EaseElastic:
n = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case o.ActionType.JumpTo:
n = cc.jumpTo(1, e, 200, 1);
break;

case o.ActionType.Rote:
var i = -10;
this.direction == o.ShowDirection.left && (i = 10);
n = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, i), cc.rotateBy(.58, -i).easing(cc.easeBackInOut()));
break;

default:
n = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var c, a = this;
c = cc.callFunc(function() {
a.actionCallBack && a.actionCallBack();
}, this);
var s = cc.delayTime(this.delayTime), r = cc.sequence(s, cc.callFunc(function() {
a.scoreAudio && cc.audioEngine.play(a.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(r);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: o.ShowDirection
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: o.ActionType
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
__decorate([ c() ], t.prototype, "isShow", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
MoveInRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77cbn/GB9HJpaFlxASkauB", "MoveInRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4,
EaseBackOut: 5
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
var l = n.getScreenToWorldPoint(c, new cc.Vec2());
c = cc.v2(l.x, l.y);
var d = n.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.onLoad = function() {
cc.log(this.isLoad);
this.isLoad || this.doShowAction();
};
t.prototype.doShowAction = function() {
var e = this;
console.log("doShowAction" + this.node.position);
var t = this.node.position, o = this.getScreenPos(this.node, this.direction);
this.node.setPosition(o);
this.node.opacity = 255;
var n;
switch (this.action) {
case s.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * t.x, t.y + 150), cc.v2(.5 * t.x, t.y + 150), cc.v2(t.x, t.y) ]);
break;

case s.EaseElastic:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
break;

case s.EaseBackOut:
n = cc.moveTo(1, t).easing(cc.easeBackOut());
break;

case s.JumpTo:
n = cc.jumpTo(1, t, 200, 1);
break;

case s.Rote:
var i = -10;
this.direction == a.left && (i = 10);
n = cc.spawn(cc.moveTo(1, t).easing(cc.easeBackOut()), cc.sequence(cc.rotateBy(.6, i), cc.rotateBy(.1, -i)));
break;

default:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
}
var c, r = this;
c = cc.callFunc(function() {
console.log(e.actionCallBack);
e.actionCallBack && e.actionCallBack();
});
var l = cc.delayTime(this.delayTime), d = cc.sequence(l, cc.callFunc(function() {
r.scoreAudio && cc.audioEngine.play(r.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(d);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12dcLhLJtJlatj4qkfgPUQ", "MoveInRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n), cc.rotateBy(.58, -n).easing(cc.easeBackInOut()));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveInSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13dcLhLJtJlatj4qkfgPUQ", "MoveInSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n), cc.rotateBy(.58, -n).easing(cc.easeBackInOut()));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveIn_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6c7bbVKjaBBrJLf8DrBqUta", "MoveIn_my");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case a.right:
o = new cc.Vec2(s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * e.getAnchorPoint().y);
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.onLoad = function() {
this.isLoad || this.doShowAction();
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n), cc.rotateBy(.58, -n).easing(cc.easeBackInOut()));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveIn_oGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cff9fpFDWJM4beU+qXoultp", "MoveIn_oGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
c = n.getCameraToWorldPoint(c, new cc.Vec2());
s = n.getCameraToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case a.right:
o = new cc.Vec2(s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + 500 + e.getContentSize().width * e.getAnchorPoint().y);
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.onLoad = function() {
this.isLoad || this.doShowAction();
};
t.prototype.doShowAction = function() {
var e = this.node.position, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var o;
switch (this.action) {
case s.Bezier:
o = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case s.EaseElastic:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case s.JumpTo:
o = cc.jumpTo(1, e, 200, 1);
break;

case s.Rote:
var n = -10;
this.direction == a.left && (n = 10);
o = cc.sequence(cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, n), cc.rotateBy(.58, -n).easing(cc.easeBackInOut())), cc.rotateTo(.2, 0));
break;

default:
o = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var i, c = this;
i = cc.callFunc(function() {
c.actionCallBack && c.actionCallBack();
}, this);
var r = cc.delayTime(this.delayTime), l = cc.sequence(r, cc.callFunc(function() {
console.log("播放音效");
c.scoreAudio && cc.audioEngine.play(c.scoreAudio, !1, 1);
}), o, i);
this.node.runAction(l);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MoveIn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d3dcbn/GB9HJpaFlxASkauB", "MoveIn");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
}), s = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4,
EaseBackOut: 5
}), r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.direction = a.left;
t.action = s.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
t.iscanLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var o, n = cc.Camera.findCamera(e), i = cc.view.getDesignResolutionSize(), c = new cc.Vec2(0, i.height), s = new cc.Vec2(i.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != n) {
var l = n.getScreenToWorldPoint(c, new cc.Vec2());
c = cc.v2(l.x, l.y);
var d = n.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (t) {
case a.bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case a.left:
o = new cc.Vec2(c.x - e.getContentSize().width * (1 - e.getAnchorPoint().x) - 300, r.y);
break;

case a.right:
o = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case a.top:
o = new cc.Vec2(r.x, c.y + e.getContentSize().width * (e.getAnchorPoint().y + 150));
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
t.prototype.onLoad = function() {
if (this.iscanLoad) {
cc.log(this.isLoad);
this.isLoad || this.doShowAction();
}
};
t.prototype.doShowAction = function() {
var e = this;
console.log("doShowAction" + this.node.position);
var t = this.node.position, o = this.getScreenPos(this.node, this.direction);
this.node.setPosition(o);
this.node.opacity = 255;
var n;
switch (this.action) {
case s.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * t.x, t.y + 150), cc.v2(.5 * t.x, t.y + 150), cc.v2(t.x, t.y) ]);
break;

case s.EaseElastic:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
break;

case s.EaseBackOut:
n = cc.moveTo(1, t).easing(cc.easeBackOut());
break;

case s.JumpTo:
n = cc.jumpTo(1, t, 200, 1);
break;

case s.Rote:
var i = -10;
this.direction == a.left && (i = 10);
n = cc.spawn(cc.moveTo(1, t).easing(cc.easeBackOut()), cc.sequence(cc.rotateBy(.6, i), cc.rotateBy(.1, -i)));
break;

default:
n = cc.moveTo(1, t).easing(cc.easeElasticOut(2));
}
var c, r = this;
c = cc.callFunc(function() {
console.log(e.actionCallBack);
e.actionCallBack && e.actionCallBack();
});
var l = cc.delayTime(this.delayTime), d = cc.sequence(l, cc.callFunc(function() {
r.scoreAudio && cc.audioEngine.play(r.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(d);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: s
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
__decorate([ c() ], t.prototype, "iscanLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {} ],
MyBlenderMixFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b210azkbttI1I6a2xyF7fw2", "MyBlenderMixFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MyMixComponentFS"), i = e("./MyCocosHelperFS"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), a = e("../common/Script/codebase/SpriteDrag/DragEventListenerFS"), s = e("../common/Script/codebase/EventListenerFS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixBlenderAnimation = [];
t.mixLayer = null;
t.mixCom = null;
t.bowlUp = null;
t.par = null;
t._drag = null;
t.orignalFrame = null;
t._blendaction = null;
t._mixAction = null;
return t;
}
t.prototype.start = function() {
null == this.mixLayer && (this.mixLayer = i.MyCocosHelper.findNode(cc.Canvas.instance.node, "mixLayer"));
null != this.mixLayer && null == this.mixCom && (this.mixCom = this.mixLayer.getComponent(n.default));
null == this.bowlUp && (this.bowlUp = i.MyCocosHelper.findNode(cc.Canvas.instance.node, "bowlUp"));
null == this._drag && (this._drag = this.getComponent(c.default));
if (null != this._drag) for (var e = [ "moveBlender", "touchUpBlender", "touchUpBlender" ], t = [ a.DragEventType.Draging, a.DragEventType.TouchCancle, a.DragEventType.TouchEnd ], o = 0; o < e.length; o++) this._drag.eventTouchs.push(new a.default(this, e[o], t[o]));
null != this.mixCom && this.mixCom.mixLis.push(new s.default(this, "mixEnd", n.default.MIXEND));
};
t.prototype.startBlendAction = function() {
if (null == this._blendaction) {
var e = this.getComponent(cc.Sprite);
if (null != e && 0 != this.mixBlenderAnimation.length) {
this.orignalFrame = e.spriteFrame;
for (var t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.15));
}, n = 0, i = this.mixBlenderAnimation; n < i.length; n++) {
o(i[n]);
}
this._blendaction = cc.repeatForever(cc.sequence(t));
this.node.runAction(this._blendaction);
}
}
if (null != this.mixLayer && null == this._mixAction) {
var c = cc.scaleTo(.7, 1, .95), a = cc.scaleTo(.7, .95, 1);
this._mixAction = cc.repeatForever(cc.sequence(c, a));
this.mixLayer.runAction(this._mixAction);
}
};
t.prototype.stopBlendAction = function() {
if (null != this._blendaction && 0 != this.mixBlenderAnimation.length) {
this.node.stopAction(this._blendaction);
this._blendaction = null;
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
}
if (null != this.mixLayer && null != this._mixAction) {
this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
}
};
t.prototype.moveBlender = function(e, t) {
if (-1 != t.getInTargetIndex()) {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() - 1);
null != this.mixCom && this.mixCom.startMix();
null != this.par && (this.par.active = !0);
this.startBlendAction();
} else this.touchUpBlender();
};
t.prototype.touchUpBlender = function() {
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
null != this.mixCom && this.mixCom.stopMix();
null != this.par && (this.par.active = !1);
this.stopBlendAction();
};
t.prototype.mixEnd = function() {
if (null != this._blendaction) {
this.node.stopAction(this._blendaction);
var e = this.getComponent(cc.Sprite);
e && this.orignalFrame && (e.spriteFrame = this.orignalFrame);
this._blendaction = null;
}
null != this.par && (this.par.active = !1);
if (null != this.mixLayer) {
null != this._mixAction && this.mixLayer.stopAction(this._mixAction);
this._mixAction = null;
this.mixLayer.runAction(cc.scaleTo(.2, 1, 1));
}
null != this.bowlUp && this.node.setSiblingIndex(this.bowlUp.getSiblingIndex() + 1);
this._drag && (this._drag.enabled = !1);
};
__decorate([ d({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "mixLayer", void 0);
__decorate([ d({
type: n.default
}) ], t.prototype, "mixCom", void 0);
__decorate([ d({
type: cc.Node
}) ], t.prototype, "bowlUp", void 0);
__decorate([ d(cc.Node) ], t.prototype, "par", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/EventListenerFS": "EventListenerFS",
"../common/Script/codebase/SpriteDrag/DragEventListenerFS": "DragEventListenerFS",
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"./MyCocosHelperFS": "MyCocosHelperFS",
"./MyMixComponentFS": "MyMixComponentFS"
} ],
MyCocosHelperFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2136jN9qROvLbzNLMjJjZ7", "MyCocosHelperFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = function() {
function e() {}
e.findNode_if = function(e, t) {
cc.ParticleSystem;
var o = null;
if (null != e) {
if (t(e)) o = e; else for (var n = 0, i = e.children; n < i.length; n++) {
var c = i[n];
if (null != (o = this.findNode_if(c, t))) break;
}
}
return o;
};
e.showHand = function(e, t, o, n) {
var i = e.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), c = e.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0))), a = e.parent.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0)));
if (t.name == o.name) {
var s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
} else {
s = cc.moveTo(1, c), r = cc.moveTo(1, a);
e.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
e.setPosition(i);
}), s, r, cc.callFunc(function() {
e.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
}
};
e.findNode = function(t, o) {
void 0 === t && (t = cc.director.getScene());
return e.findNode_if(t, function(e) {
return e.name == o;
});
};
e.visitNode = function(t, o) {
e.findNode_if(t, function(e) {
o(e);
return !1;
});
};
e.getScreenPos = function(e, t) {
var o, i = cc.Camera.findCamera(e), c = cc.view.getDesignResolutionSize(), a = new cc.Vec3(0, c.height, 0), s = new cc.Vec3(c.width, 0, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != i) {
a = i.getScreenToWorldPoint(a, new cc.Vec2());
s = i.getScreenToWorldPoint(s, new cc.Vec2());
}
switch (t) {
case n.ShowDirection.show_from_bottom:
o = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case n.ShowDirection.show_from_left:
o = new cc.Vec2(a.x - e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case n.ShowDirection.show_from_right:
o = new cc.Vec2(s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case n.ShowDirection.show_from_top:
o = new cc.Vec2(r.x, a.y + e.getContentSize().width * e.getAnchorPoint().y);
}
null != e.parent && (o = e.parent.convertToNodeSpaceAR(o));
return o;
};
e.hideNode = function(t, o, n, i, c) {
void 0 === n && (n = null);
void 0 === i && (i = !0);
void 0 === c && (c = .6);
var a = e.getScreenPos(t, o), s = new cc.Tween();
s.to(c, {
position: a
}, {
progress: null,
easing: "expoIn"
});
null != n && s.call(n);
i ? s.removeSelf() : s.call(function() {
t.active = !1;
});
s.target(t).start();
};
e.showBackOut = function(t, o, n, i) {
void 0 === n && (n = null);
void 0 === i && (i = 1);
t.active = !0;
var c = t.position, a = e.getScreenPos(t, o);
t.setPosition(a);
var s = new cc.Tween();
s.to(i, {
position: c
}, {
progress: null,
easing: "backOut"
});
null != n && s.call(n);
s.target(t).start();
};
e.captureNode2 = function(e) {
var t = Math.floor(e.width * e.scaleX), o = Math.floor(e.height * e.scaleY), n = e.getChildByName("cameraNode");
if (!n) {
(n = new cc.Node("cameraNode")).parent = e;
n.x = 0;
n.y = 0;
}
var i = n.getComponent(cc.Camera);
i || (i = n.addComponent(cc.Camera));
var c = e.group;
e.group = "captureLayer";
i.cullingMask = e._cullingMask;
var a = new cc.RenderTexture();
a.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
i.targetTexture = a;
var s = e.scaleY;
e.scaleY = -1 * s;
i.render(null);
e.scaleY = s;
e.group = c;
return a;
};
e.saveToAlbum = function(t) {
e.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null == e) t(!1); else {
var o = e.readPixels(), n = e.width, i = e.height, c = Date.parse(new Date().toString()), a = jsb.fileUtils.getWritablePath() + c + ".png";
jsb.saveImageData(o, n, i, a) ? jsToCPP.getInstance().doRuntimePermission(a, 1, function(e) {
console.log("保存相册回调 " + e);
}) : t(!1);
}
});
};
e.filpYImage = function(e, t, o) {
for (var n = new Uint8Array(t * o * 4), i = 4 * t, c = 0; c < o; c++) for (var a = (o - 1 - c) * t * 4, s = c * t * 4, r = 0; r < i; r++) n[s + r] = e[a + r];
return n;
};
e.createShake = function(e, t) {
var o = 100 * Math.random(), n = 100 * Math.random(), i = o > 50 ? t : -t, c = n > 50 ? t : -t, a = cc.v2(i, c), s = cc.v2(-i, -c);
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, a), cc.moveBy(.2, s))));
};
e.createUpDownPrompt = function(e) {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.2, cc.v2(0, -10)), cc.moveBy(.2, cc.v2(0, 10)))));
};
e.createAnimation = function(e, t, o) {
for (var n = [], i = function(t) {
n.push(cc.callFunc(function() {
e.spriteFrame = t;
}));
n.push(cc.delayTime(o));
}, c = 0, a = t; c < a.length; c++) {
i(a[c]);
}
return cc.sequence(n);
};
e.captureNode = function(e) {
return new Promise(function(t, o) {
var n = Math.floor(e.width), i = Math.floor(e.height), c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(n, i, cc.gfx.RB_FMT_S8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
t(r);
});
};
e.captureNodeSize = function(e, t, o) {
return new Promise(function(n, i) {
console.log(t, o);
var c = e.getChildByName("cameraNode");
if (!c) {
(c = new cc.Node("cameraNode")).parent = e;
c.x = 0;
c.y = 0;
}
var a = c.getComponent(cc.Camera);
a || (a = c.addComponent(cc.Camera));
c.setPosition(c.parent.convertToNodeSpaceAR(cc.Canvas.instance.node.convertToWorldSpaceAR(cc.v2(0, 0))));
var s = e.group;
e.group = "captureLayer";
a.cullingMask = e._cullingMask;
var r = new cc.RenderTexture();
r.initWithSize(t, o, cc.game._renderContext.STENCIL_INDEX8);
a.targetTexture = r;
var l = e.scaleY;
e.scaleY = -1 * l;
a.render(null);
e.scaleY = l;
e.group = s;
n(r);
});
};
e.saveImageByNode = function(e, t, o) {
this.captureNodeSize(e, cc.visibleRect.width, cc.visibleRect.height).then(function(e) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
});
};
e.saveImageByTexture = function(e, t, o) {
var n = e.readPixels(), i = e.width, c = e.height, a = jsb.fileUtils.getWritablePath() + t + ".png";
if (jsb.saveImageData(n, i, c, a)) {
console.log("save image data success, file: " + a);
o();
} else console.log("save image data failed, file: " + a);
};
e.getImage = function(e) {
return new Promise(function(t, o) {
var n = jsb.fileUtils.getWritablePath() + e + ".png";
console.log(n);
cc.loader.load(n, function(e, o) {
if (e) console.log("sadesffa" + e); else {
console.log("sadesffa" + n);
t(o);
}
});
});
};
return e;
}();
o.MyCocosHelper = i;
(function(e) {
(function(e) {
e[e.show_from_top = 0] = "show_from_top";
e[e.show_from_bottom = 1] = "show_from_bottom";
e[e.show_from_left = 2] = "show_from_left";
e[e.show_from_right = 3] = "show_from_right";
})(e.ShowDirection || (e.ShowDirection = {}));
})(n = o.CocosHelper || (o.CocosHelper = {}));
cc._RF.pop();
}, {} ],
MyMixComponentFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21a2kF9GVIcaGleM2pLtpl", "MyMixComponentFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/EventListenerFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = [];
t.delayPerUnit = 2.3;
t.mixLis = [];
t.spoonAudio = null;
t._count = 0;
t.mixEnable = !1;
t.stopEnable = !1;
t.currntTime = 0;
t._changeNodes = [];
t.current = -1;
return t;
}
o = t;
t.prototype.setMixPahth = function(e) {
if (0 != this._changeNodes.length) for (var t = 0, o = this._changeNodes; t < o.length; t++) {
var n = o[t];
cc.isValid(n) && (n.name = n.name + "pre");
}
this._changeNodes = [];
this.mixPaths = e;
this._count = 0;
this.currntTime = 0;
};
t.prototype.startMix = function() {
this.spoonAudio && -1 == this.current && (this.current = cc.audioEngine.play(this.spoonAudio, !0, 1));
if (0 == this._changeNodes.length) for (var e = 0, t = this.mixPaths; e < t.length; e++) {
var o = t[e], n = new cc.Node();
n.zIndex = -1;
n.name = "changing";
var i = n.addComponent(cc.Sprite);
i.spriteFrame = o;
i.trim = !1;
i.sizeMode = cc.Sprite.SizeMode.RAW;
n.opacity = 0;
n.parent = this.node;
this._changeNodes.push(n);
}
this.mixEnable = !0;
};
t.prototype.stopMix = function() {
cc.audioEngine.stop(this.current);
this.current = -1;
this.mixEnable = !1;
n.default.emitEvents(o.MIXSTOP, this.mixLis, this);
};
t.prototype.update = function(e) {
this.updateMix(e);
};
t.prototype.updateMix = function(e) {
if (this.mixEnable && !(this._count >= this._changeNodes.length)) {
var t = null, i = null;
if (0 == this._count) for (var c = 0, a = this.node.children; c < a.length; c++) {
var s = a[c];
"changing" != s.name && s.active && (s.opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
} else this._count - 1 < this._changeNodes.length && ((t = this._changeNodes[this._count - 1]).opacity = 255 * (1 - this.currntTime / this.delayPerUnit));
this._count < this._changeNodes.length && ((i = this._changeNodes[this._count]).opacity = this.currntTime / this.delayPerUnit * 255);
this.currntTime += e;
if (this.currntTime >= this.delayPerUnit) {
t && (t.opacity = 0);
i && (i.opacity = 255);
this.currntTime = 0;
this._count++;
}
n.default.emitEvents(o.MIXING, this.mixLis, this);
if (this._count >= this._changeNodes.length) {
this.stopEnable = !0;
cc.audioEngine.stop(this.current);
n.default.emitEvents(o.MIXEND, this.mixLis, this);
}
}
};
var o;
t.MIXING = "MIXING";
t.MIXSTOP = "MIXSTOP";
t.MIXEND = "MIXEND";
__decorate([ a({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixPaths", void 0);
__decorate([ a() ], t.prototype, "delayPerUnit", void 0);
__decorate([ a({
type: [ n.default ]
}) ], t.prototype, "mixLis", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = o = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/EventListenerFS": "EventListenerFS"
} ],
MyMoveInFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21bbCsdmxPdKoN0ungReBf", "MyMoveInFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property;
o.ShowDirection = cc.Enum({
left: 1,
right: 2,
top: 3,
bottom: 4
});
o.ActionType = cc.Enum({
Bezier: 1,
JumpTo: 2,
EaseElastic: 3,
Rote: 4
});
var a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.endpos = cc.v2(0, 0);
t.direction = o.ShowDirection.left;
t.action = o.ActionType.Bezier;
t.scoreAudio = null;
t.isLoad = !0;
return t;
}
t.prototype.getScreenPos = function(e, t) {
var n, i = cc.Camera.findCamera(e), c = cc.view.getDesignResolutionSize(), a = new cc.Vec2(0, c.height), s = new cc.Vec2(c.width, 0), r = e.position;
e.position;
null != e.parent && (r = e.parent.convertToWorldSpaceAR(r));
if (null != i) {
var l = i.getScreenToWorldPoint(a, new cc.Vec2());
a = cc.v2(l.x, l.y);
var d = i.getScreenToWorldPoint(s, new cc.Vec2());
s = cc.v2(d.x, d.y);
}
switch (t) {
case o.ShowDirection.bottom:
n = new cc.Vec2(r.x, s.y - e.getContentSize().height * (1 - e.getAnchorPoint().y));
break;

case o.ShowDirection.left:
n = new cc.Vec2(a.x - 1.5 * e.getContentSize().width * (1 - e.getAnchorPoint().x), r.y);
break;

case o.ShowDirection.right:
n = new cc.Vec2(1.5 * s.x + e.getContentSize().width * e.getAnchorPoint().x, r.y);
break;

case o.ShowDirection.top:
n = new cc.Vec2(r.x, a.y + e.getContentSize().width * e.getAnchorPoint().y);
}
null != e.parent && (n = e.parent.convertToNodeSpaceAR(n));
return n;
};
t.prototype.doShowAction = function() {
var e = this.endpos, t = this.getScreenPos(this.node, this.direction);
this.node.setPosition(t);
this.node.opacity = 255;
var n;
switch (this.action) {
case o.ActionType.Bezier:
n = cc.bezierTo(1, [ cc.v2(.5 * e.x, e.y + 150), cc.v2(.5 * e.x, e.y + 150), cc.v2(e.x, e.y) ]);
break;

case o.ActionType.EaseElastic:
n = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
break;

case o.ActionType.JumpTo:
n = cc.jumpTo(1, e, 200, 1);
break;

case o.ActionType.Rote:
var i = -10;
this.direction == o.ShowDirection.left && (i = 10);
n = cc.sequence(cc.spawn(cc.moveTo(1, e).easing(cc.easeBackOut()), cc.rotateBy(.58, i)), cc.rotateBy(.58, -i).easing(cc.easeBackInOut()));
break;

default:
n = cc.moveTo(1, e).easing(cc.easeElasticOut(2));
}
var c, a = this;
c = cc.callFunc(function() {
a.actionCallBack && a.actionCallBack();
}, this);
var s = cc.delayTime(this.delayTime), r = cc.sequence(s, cc.callFunc(function() {
a.scoreAudio && cc.audioEngine.play(a.scoreAudio, !1, 1);
}), n, c);
this.node.runAction(r);
};
t.prototype.start = function() {
this.isLoad && this.doShowAction();
console.log("movein start");
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c(cc.Vec2) ], t.prototype, "endpos", void 0);
__decorate([ c({
type: o.ShowDirection
}) ], t.prototype, "direction", void 0);
__decorate([ c({
type: o.ActionType
}) ], t.prototype, "action", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
__decorate([ c() ], t.prototype, "isLoad", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
MyMoveInRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77c9ruVpFG/51EhyB73R0r", "MyMoveInRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInRP"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
return t = __decorate([ c ], t);
}(n.default));
o.default = a;
cc._RF.pop();
}, {
"../common/Script/compoent/MoveInRP": "MoveInRP"
} ],
NestableScrollView_InnerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1474cTHcZLmpSXOYERf80q", "NestableScrollView_InnerCE");
cc.Class({
extends: cc.ScrollView,
properties: {
m_OuterScrollView: {
default: null,
visible: !1
}
},
setOuterScrollView: function(e) {
this.m_OuterScrollView = e;
},
_onTouchMoved: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
var o = e.touch, n = o.getLocation().sub(o.getStartLocation());
this.content && (this.m_OuterScrollView.isDifferentBetweenSettingAndPlan(this) || this._handleMoveLogic(o));
if (this.cancelInnerEvents) {
if (n.mag() > 7 && !this._touchMoved && e.target !== this.node) {
var i = new cc.Event.EventTouch(e.getTouches(), e.bubbles);
i.type = cc.Node.EventType.TOUCH_CANCEL;
i.touch = e.touch;
i.simulate = !0;
e.target.dispatchEvent(i);
this._touchMoved = !0;
}
this._stopPropagationIfTargetIsMe(e);
}
}
}
});
cc._RF.pop();
}, {} ],
NestableScrollView_OuterCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1429WABnJJPZVkM/h5x+lW", "NestableScrollView_OuterCE");
var n = cc.Class({
extends: cc.ScrollView,
properties: {
m_InnerScrollViews: [ e("NestableScrollView_InnerCE") ],
m_PlanDir: {
default: null,
visible: !1
},
m_ScrollingInnerSv: {
default: null,
visible: !1
}
},
onLoad: function() {
var e = this;
this.m_PlanDir = null;
this.m_InnerScrollViews.forEach(function(t) {
t.setOuterScrollView(e);
});
},
_isHisChild: function(e, t) {
return e == t || null != e.parent && (e.parent == t || this._isHisChild(e.parent, t));
},
_findScrollingInnerSv: function(e) {
for (var t = 0; t < this.m_InnerScrollViews.length; t++) {
if (this._isHisChild(e, this.m_InnerScrollViews[t].node)) return this.m_InnerScrollViews[t];
}
return null;
},
isDifferentBetweenSettingAndPlan: function(e) {
return 0 != this.m_PlanDir && ((1 != this.m_PlanDir || !e.horizontal) && (-1 != this.m_PlanDir || !e.vertical));
},
_hasNestedViewGroup: function(e, t) {
if (e.eventPhase === cc.Event.CAPTURING_PHASE) return !1;
},
_onTouchBegan: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
this.m_PlanDir = null;
this.m_ScrollingInnerSv = null;
var o = e.touch;
this.content && this._handlePressLogic(o);
this._touchMoved = !1;
this._stopPropagationIfTargetIsMe(e);
}
},
_onTouchMoved: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
var o = e.touch, n = o.getLocation().sub(o.getStartLocation());
if (null == this.m_PlanDir && n.mag() > 7) {
this.m_ScrollingInnerSv = this._findScrollingInnerSv(e.target);
if (null != this.m_ScrollingInnerSv) {
var i = this.m_ScrollingInnerSv.content.getContentSize(), c = this.m_ScrollingInnerSv.node.getContentSize();
this.m_ScrollingInnerSv.vertical && i.height > c.height || this.m_ScrollingInnerSv.horizontal && i.width > c.width ? this.m_PlanDir = Math.abs(n.x) > Math.abs(n.y) ? 1 : -1 : this.m_PlanDir = 0;
} else this.m_PlanDir = 0;
}
this.content && (this.isDifferentBetweenSettingAndPlan(this) || this._handleMoveLogic(o));
if (this.cancelInnerEvents && null == this.m_ScrollingInnerSv) {
if (n.mag() > 7 && !this._touchMoved && e.target !== this.node) {
var a = new cc.Event.EventTouch(e.getTouches(), e.bubbles);
a.type = cc.Node.EventType.TOUCH_CANCEL;
a.touch = e.touch;
a.simulate = !0;
e.target.dispatchEvent(a);
this._touchMoved = !0;
}
this._stopPropagationIfTargetIsMe(e);
}
}
}
});
t.exports = n;
cc._RF.pop();
}, {
NestableScrollView_InnerCE: "NestableScrollView_InnerCE"
} ],
NewDataCalMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7ef24qp8SdBvI5/VUfrwaQw", "NewDataCalMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.isPlayBlue = !1;
this.isPlayPink = !1;
this.selectName = "blue";
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.setSelectName = function(e) {
this.selectName = e;
};
e.prototype.getSelectName = function() {
return this.selectName;
};
e.prototype.setBoolValue = function(e, t) {
"blue" == e && (this.isPlayBlue = t);
"pink" == e && (this.isPlayPink = t);
};
e.prototype.getBoolValue = function(e) {
var t = !1;
"blue" == e && (t = this.isPlayBlue);
"pink" == e && (t = this.isPlayPink);
return t;
};
e.prototype.showUI = function() {
var e = cc.find("Canvas");
if (e) {
cc.loader.loadRes("makeupms/uishow", function(t, o) {
if (cc.sys.isMobile && t) cc.log("Prefab error11:" + t); else if (o instanceof cc.Prefab) {
var n = cc.instantiate(o);
console.log(n);
e.addChild(n);
n.name = "newMyPrefab";
n.setPosition(0, 0);
n.zIndex = 1e3;
cc.loader.setAutoReleaseRecursively(o, !0);
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.start = function() {};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
NodeCompCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "273a6RhxOVL1691vxsKr0C1", "NodeCompCB");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14135MGUpIJoIYo+qmROAW", "NodeCompCE");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22a6RhxOVL1691vxsKr0C1", "NodeCompCS");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21135MGUpIJoIYo+qmROAW", "NodeCompFS");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19135MGUpIJoIYo+qmROAW", "NodeCompGL");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "311fb6QQctIjYQga9z/mYsT", "NodeCompGS");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11a6RhxOVL1691vxsKr0C1", "NodeCompHC");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c4ffa7Ik9JG47VGudV0rXJT", "NodeCompMS");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77135MGUpIJoIYo+qmROAW", "NodeCompRP");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12a6RhxOVL1691vxsKr0C1", "NodeCompRS");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeCompSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13a6RhxOVL1691vxsKr0C1", "NodeCompSD");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeComp_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c0231xHxy5I37x23X5C20zz", "NodeComp_my");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "887135MGUpIJoIYo+qmROAW", "NodeComp");
var n = cc.Class({
extends: cc.Component,
editor: !1,
properties: {},
start: function() {
this.enabled = !1;
}
});
t.exports = n;
cc._RF.pop();
}, {} ],
NodeHitHookCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f0f88Z3l9xPBId0tYly2Zi/", "NodeHitHookCB");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragCB"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragCB": "SpriteDragCB"
} ],
NodeHitHookCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b145d+S3x5IzaSMY3jOY7yg", "NodeHitHookCE");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragCE"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragCE": "SpriteDragCE"
} ],
NodeHitHookCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2288Z3l9xPBId0tYly2Zi/", "NodeHitHookCS");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragCS"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragCS": "SpriteDragCS"
} ],
NodeHitHookFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b215d+S3x5IzaSMY3jOY7yg", "NodeHitHookFS");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragFS"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getScreenToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragFS": "SpriteDragFS"
} ],
NodeHitHookGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b195d+S3x5IzaSMY3jOY7yg", "NodeHitHookGL");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragGL"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getScreenToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragGL": "SpriteDragGL"
} ],
NodeHitHookGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cf5fdTdfXVIIbJCRjoQs7Hb", "NodeHitHookGS");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragGS"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragGS": "SpriteDragGS"
} ],
NodeHitHookHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1188Z3l9xPBId0tYly2Zi/", "NodeHitHookHC");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragHC"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragHC": "SpriteDragHC"
} ],
NodeHitHookMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "41e5eFvU2NMa725F8n1jdvL", "NodeHitHookMS");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragMS"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getScreenToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragMS": "SpriteDragMS"
} ],
NodeHitHookRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b775d+S3x5IzaSMY3jOY7yg", "NodeHitHookRP");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragRP"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getScreenToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragRP": "SpriteDragRP"
} ],
NodeHitHookRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1288Z3l9xPBId0tYly2Zi/", "NodeHitHookRS");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragRS"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragRS": "SpriteDragRS"
} ],
NodeHitHookSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1388Z3l9xPBId0tYly2Zi/", "NodeHitHookSD");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDragSD"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getCameraToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDragSD": "SpriteDragSD"
} ],
NodeHitHook: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f005d+S3x5IzaSMY3jOY7yg", "NodeHitHook");
var n = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./SpriteDrag/SpriteDrag"));
var i = cc.vmath, c = cc.v2(), a = cc.v2(), s = i.mat4.create();
cc.Node.prototype._hitTest = function(e, t) {
var o = this.getComponent(n.default);
if (o && o.enabledInHierarchy) return o.hitTest(e, t);
var r = this._contentSize.width, l = this._contentSize.height, d = c, u = a, p = cc.Camera.findCamera(this);
p ? p.getScreenToWorldPoint(e, d) : d.set(e);
this._updateWorldMatrix();
if (!i.mat4.invert(s, this._worldMatrix)) return !1;
i.vec2.transformMat4(u, d, s);
u.x += this._anchorPoint.x * r;
u.y += this._anchorPoint.y * l;
if (u.x >= 0 && u.y >= 0 && u.x <= r && u.y <= l) {
if (t && t.mask) {
for (var h = t.mask, f = this, g = 0; f && g < h.index; ++g, f = f.parent) ;
if (f === h.node) {
var m = f.getComponent(cc.Mask);
return !m || !m.enabledInHierarchy || m._hitTest(d);
}
t.mask = null;
return !0;
}
return !0;
}
return !1;
};
cc._RF.pop();
}, {
"./SpriteDrag/SpriteDrag": "SpriteDrag"
} ],
NodeTransformCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5525dCE4kpFibHUzdy1AeQp", "NodeTransformCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperCB");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperCB": "CocosHelperCB"
} ],
NodeTransformCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14a0gKP1lMmJXZZV73XFsI", "NodeTransformCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperCE");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperCE": "CocosHelperCE"
} ],
NodeTransformCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b225dCE4kpFibHUzdy1AeQp", "NodeTransformCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperCS");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperCS": "CocosHelperCS"
} ],
NodeTransformFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21a0gKP1lMmJXZZV73XFsI", "NodeTransformFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperFS");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperFS": "CocosHelperFS"
} ],
NodeTransformGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19a0gKP1lMmJXZZV73XFsI", "NodeTransformGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperGL");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperGL": "CocosHelperGL"
} ],
NodeTransformGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bf8dc/8Xs9Lqpedi+6nctfD", "NodeTransformGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperGS");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperGS": "CocosHelperGS"
} ],
NodeTransformHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b115dCE4kpFibHUzdy1AeQp", "NodeTransformHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperHC");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperHC": "CocosHelperHC"
} ],
NodeTransformMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2c9f6U3rmFGSIXrWO9erpSA", "NodeTransformMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperMS");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperMS": "CocosHelperMS"
} ],
NodeTransformRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77a0gKP1lMmJXZZV73XFsI", "NodeTransformRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperRP");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperRP": "CocosHelperRP"
} ],
NodeTransformRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b125dCE4kpFibHUzdy1AeQp", "NodeTransformRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperRS");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperRS": "CocosHelperRS"
} ],
NodeTransformSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b135dCE4kpFibHUzdy1AeQp", "NodeTransformSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelperSD");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelperSD": "CocosHelperSD"
} ],
NodeTransform: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3f4a0gKP1lMmJXZZV73XFsI", "NodeTransform");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n;
e("./CocosHelper");
(function(e) {
e[e.None = 0] = "None";
e[e.RecordNode = 1] = "RecordNode";
e[e.SaveNode = 2] = "SaveNode";
e[e.previewNode = 3] = "previewNode";
})(n = o.OptionType || (o.OptionType = {}));
var i = cc._decorator, c = i.ccclass, a = i.property, s = function() {
function e() {
this._pos = cc.Vec2.ZERO;
this._scale = new cc.Vec2(1, 1);
this._rotate = 0;
this.hasSet = !1;
this._optionType = n.None;
}
Object.defineProperty(e.prototype, "pos", {
get: function() {
return this._pos;
},
set: function(e) {
0;
this._pos = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
0;
this._scale = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "rotate", {
get: function() {
return this._rotate;
},
set: function(e) {
0;
this._rotate = e;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(e.prototype, "optionType", {
get: function() {
return this._optionType;
},
set: function(e) {
this.cacheTransforms(e);
},
enumerable: !0,
configurable: !0
});
e.prototype.getTween = function(e) {
var t = new cc.Tween();
t.to(e, {
position: this.pos,
scaleX: this.scale.x,
scaleY: this.scale.y,
rotation: this.rotate
}, null);
return t;
};
e.prototype.cacheTransforms = function(e) {};
__decorate([ a({
visible: !1
}) ], e.prototype, "_pos", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "pos", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_scale", void 0);
__decorate([ a({
type: cc.Vec2
}) ], e.prototype, "scale", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "_rotate", void 0);
__decorate([ a({
type: cc.Float
}) ], e.prototype, "rotate", null);
__decorate([ a({
visible: !1
}) ], e.prototype, "hasSet", void 0);
__decorate([ a({
type: cc.Enum(n),
visible: !1
}) ], e.prototype, "_optionType", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], e.prototype, "optionType", null);
return e = __decorate([ c("NodeTransform") ], e);
}();
o.default = s;
cc._RF.pop();
}, {
"./CocosHelper": "CocosHelper"
} ],
ObjectActionCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1444AFJXpMPbDJIPLNaEGT", "ObjectActionCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = cc.Enum({
jump: 1,
rotate: 2
}), s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delayTime = 0;
t.delayTime2 = 0;
t.distance = 0;
t.rotate = 0;
t.action = a.jump;
return t;
}
t.prototype.onLoad = function() {
this.showAction();
};
t.prototype.showAction = function() {
switch (this.action) {
case a.jump:
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(this.delayTime), cc.moveBy(.1, cc.v2(0, this.distance)), cc.moveBy(.1, cc.v2(0, -this.distance)), cc.moveBy(.1, cc.v2(0, this.distance)), cc.moveBy(.1, cc.v2(0, -this.distance)), cc.delayTime(this.delayTime2))));
break;

case a.rotate:
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(this.delayTime), cc.rotateBy(.1, this.rotate), cc.rotateBy(.1, -this.rotate), cc.rotateBy(.1, this.rotate), cc.rotateBy(.1, -this.rotate), cc.delayTime(this.delayTime2))));
break;

default:
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(this.delayTime), cc.moveBy(.1, cc.v2(0, this.distance)), cc.moveBy(.1, cc.v2(0, -this.distance)), cc.moveBy(.1, cc.v2(0, this.distance)), cc.moveBy(.1, cc.v2(0, -this.distance)), cc.delayTime(this.delayTime2))));
}
};
__decorate([ c ], t.prototype, "delayTime", void 0);
__decorate([ c ], t.prototype, "delayTime2", void 0);
__decorate([ c ], t.prototype, "distance", void 0);
__decorate([ c ], t.prototype, "rotate", void 0);
__decorate([ c({
type: a
}) ], t.prototype, "action", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
OnceClickButtonCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "22cd5gttihHsbce+o3wD6rw", "OnceClickButtonCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14e0yJpbFBtbOxJZBVa212", "OnceClickButtonCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22d5gttihHsbce+o3wD6rw", "OnceClickButtonCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19e0yJpbFBtbOxJZBVa212", "OnceClickButtonGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "669fcWgs6NPYKIP7YuEmet8", "OnceClickButtonGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11d5gttihHsbce+o3wD6rw", "OnceClickButtonHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22e0yJpbFBtbOxJZBVa212", "OnceClickButtonMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77e0yJpbFBtbOxJZBVa212", "OnceClickButtonRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12d5gttihHsbce+o3wD6rw", "OnceClickButtonRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
OnceClickButtonSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13d5gttihHsbce+o3wD6rw", "OnceClickButtonSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executionOrder, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._ccBtn = null;
t._interactable = !0;
t._isReset = !0;
t._onClick = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this._onClicked.bind(this));
};
t.prototype.start = function() {
this._ccBtn = this.node.getComponent(cc.Button);
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
};
t.prototype._onClicked = function() {
if (!this._isReset) {
this._interactable = !1;
this._ccBtn && (this._ccBtn.interactable = !1);
}
};
t.prototype._onTouchEnded = function(e) {
if (this._isInteractable()) {
this._onClick && this._onClick();
e.stopPropagation();
}
};
t.prototype._isInteractable = function() {
if (this._isReset) {
this._isReset = !1;
return !0;
}
return this._interactable || this._ccBtn && this._ccBtn.interactable;
};
t.prototype.setOnClick = function(e) {
this._onClick = e;
};
t.prototype.reset = function() {
this._isReset = !0;
this._interactable = !0;
this._ccBtn && (this._ccBtn.interactable = !0);
};
return t = __decorate([ i, c(-1) ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
PackSlimeGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19f2OAKKZAfJp1wdQYb2Yz", "PackSlimeGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInGL"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragGL"), c = e("../common/Script/codebase/TransitionSceneGL"), a = e("./TipManagerGL"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.foods = null;
t.count = 0;
t.nextFood = null;
return t;
}
t.prototype.onLoad = function() {
var e = "galaxySlime";
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
this.node.getChildByName(e).active = !0;
}.bind(this))));
cc.find("Canvas/" + e + "/1").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/" + e + "/1/lid").runAction(cc.moveBy(.5, cc.v2(-1e3, 0)));
cc.find("Canvas/" + e + "/1/slime").getComponent(n.default).doShowAction();
};
cc.find("Canvas/" + e + "/1/slime").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/" + e + "/1/slime").getComponent(i.default).enabled = !0;
};
};
t.prototype.slimeTouchEnd = function(e) {
cc.find("Canvas/finger").active = !1;
var t = e.target;
t.getComponent(i.default).enabled = !1;
var o = "galaxySlime";
t.runAction(cc.sequence(cc.moveTo(.5, cc.v2(16, 150)), cc.callFunc(function() {
cc.find("Canvas/" + o + "/1/bowl0").active = !1;
cc.find("Canvas/" + o + "/1/bowl0_1").active = !0;
}.bind(this)), cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/bg").getComponent(cc.AudioSource).play();
}.bind(this)), cc.scaleTo(.2, .92, .97), cc.scaleTo(.2, .97, .92), cc.scaleTo(.1, .95, .95), cc.callFunc(function() {
a.default.getInstance().jumpTips();
cc.find("Canvas/" + o + "/1/lid").runAction(cc.moveBy(.5, cc.v2(1e3, 0)));
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
cc.find("Canvas/" + o).runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(1), cc.callFunc(function() {
c.default.changeScene("decorateSlimeGL", 12);
}.bind(this))));
}.bind(this))));
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragGL": "SpriteDragGL",
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./TipManagerGL": "TipManagerGL"
} ],
PlayControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "be14crf+C1ATbzyBfhYjymc", "PlayControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCB"), i = e("../common/Script/codebase/TransitionSceneCB"), c = e("../common/Script/MoveInCB"), a = e("./PopupComponetCB"), s = e("./DataConfigCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.actionNode = null;
t.maxGilrY = null;
t.startGirlY = null;
t.initDistance = null;
t.girlRotation = null;
t.slimRotation = null;
t.girlPos = null;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
var e = s.default.getInstance().getColors(), t = s.default.getInstance().getIndex();
e || (e = "yellow");
t || (t = "3");
this.node.getChildByName("girl0").getComponent(c.default).actionCallBack = function() {
this.showSlimeAction();
}.bind(this);
cc.loader.loadRes("cakebatter/image/slime/slime_" + e + "1", cc.SpriteFrame, function(o, n) {
cc.loader.setAutoReleaseRecursively(n, !0);
cc.find("Canvas/slime/slime1").getComponent(cc.Sprite).spriteFrame = n;
cc.loader.loadRes("cakebatter/image/slime/slime_" + e + "4", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/slime/slime2").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("cakebatter/image/motion1/motion1_slime" + t, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/slime/slime1/foam").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("cakebatter/image/motion4/motion4_slime" + t, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/slime/slime2/foam").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
}.bind(this));
};
t.prototype.showSlimeAction = function() {
this.node.getChildByName("girl0").runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.find("Canvas/girl0/front").active = !1;
cc.find("Canvas/girl0/back").active = !0;
cc.find("Canvas/slime").runAction(cc.sequence(cc.moveBy(1, cc.v2(-50, -50)), cc.moveBy(1, cc.v2(50, 50))));
}.bind(this)), cc.moveBy(1, cc.v2(-50, -50)), cc.moveBy(1, cc.v2(50, 50)), cc.callFunc(function() {
cc.find("Canvas/slime").runAction(cc.scaleTo(1, 1, 1));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("girl1").runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
this.node.getChildByName("girl1").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5))));
cc.find("Canvas/slime/slime1").active = !1;
cc.find("Canvas/slime/slime2").active = !0;
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
cc.find("Canvas/girl1/action0").active = !1;
cc.find("Canvas/girl1/action1").active = !0;
cc.find("Canvas/girl1/action2").active = !1;
this.addTouchEvent();
}.bind(this))));
};
t.prototype.addTouchEvent = function() {
this.node.getChildByName("arrow_right").active = !0;
var e = [ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3" ];
this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}.bind(this))));
this.node.getChildByName("bg").runAction(cc.repeatForever(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
this.node.getChildByName("bg").getComponent(cc.AudioSource).play();
}.bind(this)))));
this.node.getChildByName("bg").runAction(cc.repeatForever(cc.sequence(cc.delayTime(5), cc.callFunc(function() {
var t = Math.floor(3 * Math.random());
console.log(t);
cc.loader.loadRes(e[t] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
}.bind(this)))));
cc.director.getActionManager().pauseTarget(this.node.getChildByName("girl1"));
cc.director.getActionManager().pauseTarget(this.node);
cc.director.getActionManager().pauseTarget(this.node.getChildByName("bg"));
var t = this.node.getChildByName("girl0").getPosition(), o = this.node.getChildByName("girl1").getPosition();
this.girlPos = o;
this.girlRotation = this.calculateAngle(t, o);
this.slimRotation = cc.find("Canvas/slime").rotation;
this.initDistance = this.calculatedistance(t, o);
console.log(this.initDistance);
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
var e = this.node.getChildByName("girl1");
e.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
e.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
e.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
e.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
var e = this.node.getChildByName("girl1");
e.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
e.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
e.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
e.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
this.node.getChildByName("arrow_right").active = !1;
cc.director.getActionManager().resumeTarget(this.node.getChildByName("girl1"));
cc.director.getActionManager().resumeTarget(this.node);
cc.director.getActionManager().resumeTarget(this.node.getChildByName("bg"));
};
t.prototype.onTouchMove = function(e) {
this.node.getChildByName("arrow_right").active = !1;
var t = this.node.getChildByName("girl1"), o = e.getTouches(), n = this.node.convertToNodeSpaceAR(o[0].getStartLocation()), i = this.node.convertToNodeSpaceAR(o[0].getLocation()), c = n.sub(i);
t.x = this.girlPos.x - c.x;
t.y = this.girlPos.y - c.y;
var a = t.getPosition();
if (a.x <= -50) {
cc.find("Canvas/girl1/action1").active = !1;
cc.find("Canvas/girl1/action2").active = !0;
} else {
cc.find("Canvas/girl1/action1").active = !0;
cc.find("Canvas/girl1/action2").active = !1;
}
a.x < -250 && (a.x = -250);
a.x > 250 && (a.x = 250);
a.y < 150 && (a.y = 150);
a.y > 250 && (a.y = 250);
t.setPosition(a);
this.caculateScale();
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
cc.director.getActionManager().pauseTarget(this.node.getChildByName("girl1"));
cc.director.getActionManager().pauseTarget(this.node.getChildByName("bg"));
this.girlPos = this.node.getChildByName("girl1").getPosition();
this.showEndAction();
};
t.prototype.caculateScale = function() {
var e = this.node.getChildByName("girl0").getPosition(), t = this.node.getChildByName("girl1").getPosition(), o = this.calculatedistance(e, t) / this.initDistance;
cc.find("Canvas/slime").setScale(cc.v2(o, 1));
var n = this.calculateAngle(e, t) - this.girlRotation;
cc.find("Canvas/slime").setRotation(this.slimRotation + n);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/girl1/action0/eye0").getComponent(cc.Animation).pause();
cc.find("Canvas/girl1/action1/eye0").getComponent(cc.Animation).pause();
cc.find("Canvas/girl1/action2/eye0").getComponent(cc.Animation).pause();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height;
a < i.height && e.photoNode.setScale(a / i.height);
c < i.width && e.photoNode.setScale(c / i.width);
n.addChild(e.photoNode);
cc.log(e.photoNode);
var s = t.readPixels(), r = t.width, l = t.height, d = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + d + ".png";
jsb.saveImageData(s, r, l, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
cc.find("Canvas/girl1/action0/eye0").getComponent(cc.Animation).resume();
cc.find("Canvas/girl1/action1/eye0").getComponent(cc.Animation).resume();
cc.find("Canvas/girl1/action2/eye0").getComponent(cc.Animation).resume();
};
t.prototype.showEndAction = function() {
this.destroyTouchEvent();
var e = this.node.getChildByName("slime");
e.getComponent(cc.AudioSource).play();
e.stopActionByTag(101014);
var t = new cc.Vec2();
t.x = e.scaleX;
t.y = e.scaleY;
var o = cc.scaleTo(0, t.x, t.y), n = cc.scaleTo(.13, t.x, .9 * t.y), i = cc.scaleTo(.11, .95 * t.x, t.y), c = cc.scaleTo(.1, t.x, .96 * t.y), a = cc.scaleTo(.09, .98 * t.x, t.y), s = cc.scaleTo(.08, t.x, .99 * t.y), r = cc.scaleTo(.07, t.x, t.y), l = cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this)), d = cc.sequence(o, n, i, c, a, s, r, l);
d.setTag(101014);
e.runAction(d);
};
t.prototype.calculatedistance = function(e, t) {
var o = t.x - e.x, n = t.y - e.y;
return Math.sqrt(o * o + n * n);
};
t.prototype.calculateAngle = function(e, t) {
var o = t.y - e.y, n = t.x - e.x, i = Math.abs(o / n), c = 180 * Math.atan(i) / Math.PI, a = 0;
o > 0 && n < 0 ? a = c - 90 : o > 0 && n > 0 ? a = 90 - c : o < 0 && n < 0 ? a = -c - 90 : o < 0 && n > 0 ? a = c + 90 : 0 == o && 0 != n ? a = n < 0 ? -90 : 90 : 0 == n && 0 != o && (a = o < 0 ? 180 : 0);
return a;
};
t.prototype.touchNextBtn = function() {
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("clickSlimeCB");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/MoveInCB": "MoveInCB",
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"./DataConfigCB": "DataConfigCB",
"./PopupComponetCB": "PopupComponetCB"
} ],
PlayControllerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14570SLCxJ9pKA3Dx+X9mH", "PlayControllerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/compoent/MoveInCE"), i = e("./DollTouchEventCE"), c = e("./DataConfigCE"), a = e("../common/Script/codebase/utils/CocosHelperCE"), s = e("./PopupComponetCE"), r = e("../common/Script/ads/showLaodingCE"), l = e("../common/Script/codebase/TransitionSceneCE"), d = cc._decorator, u = d.ccclass, p = (d.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/btns/doll4").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/tip").getComponent(n.default).doShowAction();
}.bind(this);
cc.find("Canvas/tip").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/btns").children.forEach(function(e) {
e.getComponent(cc.Button).interactable = !0;
});
}.bind(this);
var e = c.default.getInstance().getCandys();
e || (e = [ "star" ]);
e.forEach(function(e) {
cc.find("Canvas/slime/" + e).active = !0;
for (var t = 1; t <= 6; t++) {
cc.find("Canvas/doll" + t + "/slime0/" + e).active = !0;
cc.find("Canvas/doll" + t + "/slime0/slime1/" + e).active = !0;
}
});
var t = c.default.getInstance().getColor();
t || (t = "brown");
cc.loader.loadRes("crazyemoji/image/color/slime13_" + t, cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/slime").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("crazyemoji/image/color/snot_slime_" + t, cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/doll1/slime0").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll1/slime0/slime1").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll3/slime0").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll3/slime0/slime1").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("crazyemoji/image/color/spit_slime_" + t, cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/doll2/slime0").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll2/slime0/slime1").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll5/slime0").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll5/slime0/slime1").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("crazyemoji/image/color/poop_slime_" + t, cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/doll4/slime0").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll4/slime0/slime1").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll6/slime0").getComponent(cc.Sprite).spriteFrame = t;
cc.find("Canvas/doll6/slime0/slime1").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
};
t.prototype.btnClick = function(e) {
cc.find("Canvas/tip").active = !1;
var t = e.target;
t.parent.getComponent(cc.AudioSource).play();
t.parent.children.forEach(function(e) {
e.getComponent(cc.Button).interactable = !1;
e.active = !1;
});
t.active = !0;
var o = t.parent.convertToNodeSpaceAR(cc.find("Canvas/" + t.name).convertToWorldSpaceAR(cc.v2(0, 0)));
cc.find("Canvas/slime").active = !0;
t.runAction(cc.sequence(cc.spawn(cc.moveTo(1, o), cc.scaleTo(1, 1)), cc.callFunc(function() {
cc.find("Canvas/" + t.name).active = !0;
cc.find("Canvas/" + t.name).getComponent(cc.Button).interactable = !0;
cc.find("Canvas/btnScrollView").active = !0;
if (c.default.getInstance().getNoFirst1()) {
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.zIndex = 100;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
} else cc.find("Canvas/bg").runAction(cc.sequence(cc.delayTime(30), cc.callFunc(function() {
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.zIndex = 100;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
c.default.getInstance().setNoFirst1();
}.bind(this))));
cc.find("Canvas/finger").active = !0;
t.active = !1;
})));
};
t.prototype.btnClick1 = function(e) {
cc.find("Canvas/heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
cc.find("Canvas/bg").getComponent(cc.AudioSource).stop();
cc.find("Canvas").getComponent(cc.AudioSource).stop();
var t = e.target;
t.parent.getComponent(cc.AudioSource).play();
for (var o = 1; o <= 6; o++) cc.find("Canvas/doll" + o).active = !1;
t.parent.children.forEach(function(e) {
e.getComponent(cc.Button).interactable = !1;
});
cc.find("Canvas/slime").stopAllActions();
cc.find("Canvas/slime").active = !0;
cc.find("Canvas/slime").opacity = 255;
cc.find("Canvas/slime").setScale(.6);
cc.find("Canvas/" + t.name).getComponent(i.default).destroyTouchEvent();
cc.find("Canvas/" + t.name).getComponent(cc.Button).interactable = !1;
cc.find("Canvas/" + t.name).active = !0;
cc.find("Canvas/" + t.name).opacity = 0;
cc.find("Canvas/" + t.name).stopAllActions();
cc.find("Canvas/" + t.name).setScale(.8);
cc.find("Canvas/" + t.name).getChildByName("down1").active = !0;
cc.find("Canvas/" + t.name).getChildByName("up1").active = !0;
cc.find("Canvas/" + t.name).getChildByName("down2").active = !1;
cc.find("Canvas/" + t.name).getChildByName("up2").active = !1;
cc.find("Canvas/" + t.name).getChildByName("slime0").active = !1;
cc.find("Canvas/" + t.name).getComponent(n.default).doShowAction();
cc.find("Canvas/" + t.name).getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/" + t.name).getComponent(cc.Button).interactable = !0;
cc.find("Canvas/" + t.name).getComponent(i.default).isXi = !0;
t.parent.children.forEach(function(e) {
e.getComponent(cc.Button).interactable = !0;
});
}.bind(this);
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
a.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
e.photoNode.scale = .8 * e.photoNode.scale;
cc.find("photo/mask/bg", e.node).scaleY = e.photoNode.scaleY;
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(s.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(s.default).hidePopup();
}.bind(this))));
e ? t.getComponent(s.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(s.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.backHome = function() {
r.default.getInstance().loadingDoneCallback = function() {
r.default.getInstance().loadingDoneCallback = null;
l.default.changeScene("dyeSlimeCE", 12);
};
r.default.getInstance().showAds(!1);
};
return t = __decorate([ u ], t);
}(cc.Component));
o.default = p;
cc._RF.pop();
}, {
"../common/Script/ads/showLaodingCE": "showLaodingCE",
"../common/Script/codebase/TransitionSceneCE": "TransitionSceneCE",
"../common/Script/codebase/utils/CocosHelperCE": "CocosHelperCE",
"../common/Script/compoent/MoveInCE": "MoveInCE",
"./DataConfigCE": "DataConfigCE",
"./DollTouchEventCE": "DollTouchEventCE",
"./PopupComponetCE": "PopupComponetCE"
} ],
PlayControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2256QyovZL7qBB/5C5W1qz", "PlayControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCS"), i = e("../common/Script/codebase/TransitionSceneCS"), c = e("./TipManagerCS"), a = e("./PopupComponetCS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNode = null;
t.count = 0;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
this.count = 0;
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.touchNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.touchNode.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
this.touchNode.getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/mix6").setScale(1);
cc.find("Canvas/slime/mix6").stopAllActions();
cc.find("Canvas/slime/mix6").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/arrow").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.convertToNodeSpaceAR(t[0].getLocation()), i = (t[0].getDelta(), 
o.sub(n));
cc.find("Canvas/slime/h_l0").y = cc.find("Canvas/slime/h_l0").y - i.y / 15;
cc.find("Canvas/slime/h_r0").y = cc.find("Canvas/slime/h_r0").y - i.y / 15;
cc.find("Canvas/slime/h_l1").y = cc.find("Canvas/slime/h_l1").y - i.y / 15;
cc.find("Canvas/slime/h_r1").y = cc.find("Canvas/slime/h_r1").y - i.y / 15;
cc.log(i.y / 4);
var c = (cc.find("Canvas/slime/h_l0").y + 290) / 290;
c > 1 && (c = 1);
c < 0 && (c = 0);
cc.find("Canvas/slime/pull").scaleY = c;
var a = cc.find("Canvas/slime/h_l0").getPosition();
a.y < -290 && (a.y = -290);
a.y > 0 && (a.y = 0);
cc.find("Canvas/slime/h_l0").setPosition(cc.v2(cc.find("Canvas/slime/h_l0").x, a.y));
cc.find("Canvas/slime/h_l1").setPosition(cc.v2(cc.find("Canvas/slime/h_l1").x, a.y));
cc.find("Canvas/slime/h_r0").setPosition(cc.v2(cc.find("Canvas/slime/h_r0").x, a.y));
cc.find("Canvas/slime/h_r1").setPosition(cc.v2(cc.find("Canvas/slime/h_r1").x, a.y));
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.touchNode.getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/mix6").setScale(1);
cc.find("Canvas/slime/mix6").stopAllActions();
cc.find("Canvas/slime/mix6").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
if (cc.find("Canvas/slime/h_l0").y + 290 >= 150) {
this.count = this.count + 1;
this.count % 3 == 0 && c.default.getInstance().jumpTips();
if (7 == this.count) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}
this.destroyTouchEvent();
cc.find("Canvas/slime/h_l0").runAction(cc.sequence(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_l0").x, -290)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
cc.find("Canvas/slime/pull").runAction(cc.scaleTo(.5, .8, 0));
cc.find("Canvas/slime/h_r0").runAction(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_r0").x, -290)));
cc.find("Canvas/slime/h_l1").runAction(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_l1").x, -290)));
cc.find("Canvas/slime/h_r1").runAction(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_r1").x, -290)));
};
t.prototype.touchNextBtn = function() {
i.default.changeScene("clickSlimeCS");
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("coilSlimeCS");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
__decorate([ l(cc.Node) ], t.prototype, "touchNode", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"./PopupComponetCS": "PopupComponetCS",
"./TipManagerCS": "TipManagerCS"
} ],
PlayControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2156QyovZL7qBB/5C5W1qz", "PlayControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperFS"), i = e("../common/Script/codebase/TransitionSceneFS"), c = e("./TipManagerFS"), a = e("./PopupComponetFS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchNode = null;
t.count = 0;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
this.count = 0;
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.touchNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.touchNode.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.touchNode.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.touchNode.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.touchNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
this.touchNode.getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/mix6").setScale(1);
cc.find("Canvas/slime/mix6").stopAllActions();
cc.find("Canvas/slime/mix6").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/arrow").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = this.node.convertToNodeSpaceAR(t[0].getLocation()), i = (t[0].getDelta(), 
o.sub(n));
cc.find("Canvas/slime/h_l0").y = cc.find("Canvas/slime/h_l0").y - i.y / 15;
cc.find("Canvas/slime/h_r0").y = cc.find("Canvas/slime/h_r0").y - i.y / 15;
cc.find("Canvas/slime/h_l1").y = cc.find("Canvas/slime/h_l1").y - i.y / 15;
cc.find("Canvas/slime/h_r1").y = cc.find("Canvas/slime/h_r1").y - i.y / 15;
cc.log(i.y / 4);
var c = (cc.find("Canvas/slime/h_l0").y + 290) / 290;
c > 1 && (c = 1);
c < 0 && (c = 0);
cc.find("Canvas/slime/pull").scaleY = c;
var a = cc.find("Canvas/slime/h_l0").getPosition();
a.y < -290 && (a.y = -290);
a.y > 0 && (a.y = 0);
cc.find("Canvas/slime/h_l0").setPosition(cc.v2(cc.find("Canvas/slime/h_l0").x, a.y));
cc.find("Canvas/slime/h_l1").setPosition(cc.v2(cc.find("Canvas/slime/h_l1").x, a.y));
cc.find("Canvas/slime/h_r0").setPosition(cc.v2(cc.find("Canvas/slime/h_r0").x, a.y));
cc.find("Canvas/slime/h_r1").setPosition(cc.v2(cc.find("Canvas/slime/h_r1").x, a.y));
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.touchNode.getComponent(cc.AudioSource).play();
cc.find("Canvas/slime/mix6").setScale(1);
cc.find("Canvas/slime/mix6").stopAllActions();
cc.find("Canvas/slime/mix6").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
if (cc.find("Canvas/slime/h_l0").y + 290 >= 150) {
this.count = this.count + 1;
this.count % 3 == 0 && c.default.getInstance().jumpTips();
if (7 == this.count) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}
this.destroyTouchEvent();
cc.find("Canvas/slime/h_l0").runAction(cc.sequence(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_l0").x, -290)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
cc.find("Canvas/slime/pull").runAction(cc.scaleTo(.5, .8, 0));
cc.find("Canvas/slime/h_r0").runAction(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_r0").x, -290)));
cc.find("Canvas/slime/h_l1").runAction(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_l1").x, -290)));
cc.find("Canvas/slime/h_r1").runAction(cc.moveTo(.5, cc.v2(cc.find("Canvas/slime/h_r1").x, -290)));
};
t.prototype.touchNextBtn = function() {
i.default.changeScene("clickSlimeFS");
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("coilSlime");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
__decorate([ l(cc.Node) ], t.prototype, "touchNode", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"./PopupComponetFS": "PopupComponetFS",
"./TipManagerFS": "TipManagerFS"
} ],
PlayControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19e4jvZIlNC7F/5e2Ke1pG", "PlayControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlimeTouchEventGL"), i = e("../common/Script/codebase/utils/CocosHelperGL"), c = e("../common/Script/codebase/TransitionSceneGL"), a = e("../common/Script/compoent/MoveInGL"), s = e("./DataConfigGL"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bubblePre = null;
t.bubbleNum = 0;
t.maxNum = 30;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("btns").children.forEach(function(e) {
"play" == e.name ? e.getChildByName("yes").active = !0 : e.getChildByName("yes").active = !1;
});
cc.find("slime/mould", this.node).getComponent(a.default).actionCallBack = function() {
this.node.getChildByName("slime").getComponent(n.default).registerTouchEvent();
this.node.getChildByName("arrow_bottom").active = !0;
}.bind(this);
cc.find("Canvas/btn_reset").getComponent(a.default).actionCallBack = function() {
cc.find("Canvas/btn_reset").getComponent(cc.Button).interactable = !0;
}.bind(this);
s.default.getInstance().setPlay(!1);
if (!(s.default.getInstance().getDrag() || s.default.getInstance().getClick() || s.default.getInstance().getPlay() || s.default.getInstance().getSlap())) {
i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
}
};
t.prototype.createBubble = function() {
var e = cc.instantiate(this.bubblePre);
e.active = !0;
cc.find("Canvas/slime").addChild(e);
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
this.createBubble();
}.bind(this))));
if (this.bubbleNum > 10 && this.bubbleNum <= 20 && cc.find("Canvas/slime").childrenCount < 9) this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
var e = cc.instantiate(this.bubblePre);
e.active = !0;
cc.find("Canvas/slime").addChild(e);
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
}.bind(this))));
}.bind(this)))); else if (this.bubbleNum > 20 && cc.find("Canvas/slime").childrenCount < 10) {
this.node.runAction(cc.sequence(cc.delayTime(.3), cc.callFunc(function() {
var e = cc.instantiate(this.bubblePre);
cc.find("Canvas/slime").addChild(e);
e.active = !0;
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
}.bind(this))));
}.bind(this))));
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
var e = cc.instantiate(this.bubblePre);
e.active = !0;
cc.find("Canvas/slime").addChild(e);
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
}.bind(this))));
}.bind(this))));
}
};
t.prototype.reset = function() {
cc.director.loadScene("playSlimeGL");
};
t.prototype.enterNextScence = function() {
s.default.getInstance().setClick(!0);
s.default.getInstance().setDrag(!0);
s.default.getInstance().setSlap(!0);
s.default.getInstance().setPlay(!0);
c.default.changeScene("packSlimeGL");
};
__decorate([ d(cc.Prefab) ], t.prototype, "bubblePre", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./DataConfigGL": "DataConfigGL",
"./SlimeTouchEventGL": "SlimeTouchEventGL"
} ],
PlayControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11e4jvZIlNC7F/5e2Ke1pG", "PlayControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInHC"), i = e("./SlimeTouchEventHC"), c = e("../common/Script/codebase/TransitionSceneHC"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bubblePre = null;
t.bubbleNum = 0;
t.maxNum = 30;
return t;
}
t.prototype.onLoad = function() {
cc.find("slime/mould", this.node).getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("slime").getComponent(i.default).registerTouchEvent();
this.node.getChildByName("arrow_bottom").active = !0;
}.bind(this);
cc.find("Canvas/btn_reset").getComponent(n.default).actionCallBack = function() {
cc.find("Canvas/btn_reset").getComponent(cc.Button).interactable = !0;
}.bind(this);
};
t.prototype.createBubble = function() {
var e = cc.instantiate(this.bubblePre);
e.active = !0;
cc.find("Canvas/slime").addChild(e);
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
this.createBubble();
}.bind(this))));
if (this.bubbleNum > 10 && this.bubbleNum <= 20 && cc.find("Canvas/slime").childrenCount < 9) this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
var e = cc.instantiate(this.bubblePre);
e.active = !0;
cc.find("Canvas/slime").addChild(e);
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
}.bind(this))));
}.bind(this)))); else if (this.bubbleNum > 20 && cc.find("Canvas/slime").childrenCount < 10) {
this.node.runAction(cc.sequence(cc.delayTime(.3), cc.callFunc(function() {
var e = cc.instantiate(this.bubblePre);
cc.find("Canvas/slime").addChild(e);
e.active = !0;
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
}.bind(this))));
}.bind(this))));
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
var e = cc.instantiate(this.bubblePre);
e.active = !0;
cc.find("Canvas/slime").addChild(e);
e.name = "bubbleCopy";
var t = Math.random() * (cc.find("Canvas/slime").height - 300) - (cc.find("Canvas/slime").height - 300) / 2, o = Math.random() * (cc.find("Canvas/slime").width - 300) - (cc.find("Canvas/slime").width - 300) / 2;
e.setPosition(cc.v2(o, t));
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.destroy();
}.bind(this))));
}.bind(this))));
}
};
t.prototype.reset = function() {
cc.director.loadScene("playSlimeHC");
};
t.prototype.touchBackBtn = function() {
c.default.changeScene("chooseHC");
};
__decorate([ r(cc.Prefab) ], t.prototype, "bubblePre", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInHC": "MoveInHC",
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC",
"./SlimeTouchEventHC": "SlimeTouchEventHC"
} ],
PlayControllerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "80da1ZtVqVCXrmKL9sdbqY3", "PlayControllerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bubblePre = null;
t.bubbleNum = 0;
t.maxNum = 30;
t.text = "hello";
return t;
}
t.prototype.init = function() {};
t.prototype.createBubble = function() {};
t.prototype.reset = function() {
cc.director.loadScene("playSlime");
};
t.prototype.touchBackBtn = function() {};
__decorate([ c(cc.Prefab) ], t.prototype, "bubblePre", void 0);
__decorate([ c ], t.prototype, "text", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
PlayScenceChooseGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19c5pHSBlDR6X1vzon2JZN", "PlayScenceChooseGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.btnClick = function(e) {
cc.find("Canvas/mask").active = !0;
var t = e.target.name;
cc.find("Canvas/btns").getComponent(cc.AudioSource).play();
cc.find("Canvas/btns").children.forEach(function(e) {
e.name == t ? e.getChildByName("yes").active = !0 : e.getChildByName("yes").active = !1;
});
cc.log(t);
this.node.runAction(cc.sequence(cc.scaleBy(.2, 1.05, .95), cc.scaleBy(.3, .95, 1.05), cc.callFunc(function() {
cc.director.loadScene(t + "SlimeGL");
}.bind(this))));
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PlaySlimeControllerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b773byMEitI4pV8FVeMDb1Q", "PlaySlimeControllerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperRP"), i = e("./PopupComponetRP"), c = e("./DataConfigRP"), a = e("./MyMoveInRP"), s = e("./TipManagerRP"), r = e("../common/Script/ads/showLaodingRP"), l = e("../common/Script/codebase/TransitionSceneRP"), d = cc._decorator, u = d.ccclass, p = (d.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.count = 0;
return t;
}
t.prototype.onLoad = function() {
var e = c.default.getInstance().getTexture();
if (e) {
var t = new cc.Node();
t.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e);
cc.find("Canvas/poop").addChild(t);
t.setPosition(cc.v2(-100, 0));
}
cc.find("Canvas/poop").getComponent(a.default).actionCallBack = function() {
cc.find("Canvas/poop").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/tipClick").active = !0;
}.bind(this);
};
t.prototype.poopClick = function() {
cc.find("Canvas/tipClick").active = !1;
cc.find("Canvas/poop").getComponent(cc.Button).interactable = !1;
var e = Math.random() * cc.find("Canvas").width - cc.find("Canvas").width / 2;
this.jumpTo(e);
};
t.prototype.jumpTo = function(e) {
var t = e - cc.find("Canvas/poop").x, o = cc.find("Canvas/poop").getPosition().add(cc.v2(t / 2, 0)), i = cc.find("Canvas/poop").getPosition().add(cc.v2(t, 0)), c = 100 * Math.random() + 150, a = cc.moveBy(.5, cc.p(0, c)).easing(cc.easeCubicActionOut()), r = cc.moveBy(.5, cc.p(0, -c)).easing(cc.easeCubicActionIn()), l = cc.spawn(cc.moveTo(1, o), cc.sequence(a, r)), d = cc.spawn(cc.moveTo(1, i), cc.sequence(a, r));
cc.find("Canvas/poop").runAction(cc.sequence(l, cc.callFunc(function() {
cc.find("Canvas/poop").getComponent(cc.Animation).play();
cc.find("Canvas/poop").getComponent(cc.AudioSource).play();
}.bind(this)), d, cc.callFunc(function() {
cc.find("Canvas/poop").getComponent(cc.Animation).play();
cc.find("Canvas/poop").getComponent(cc.AudioSource).play();
cc.find("Canvas/poop").getComponent(cc.Button).interactable = !0;
this.count = this.count + 1;
if (3 == this.count) {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
this.count % 3 == 0 && s.default.getInstance().jumpTips();
}.bind(this))));
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
e.photoNode.scale = 1.1 * e.photoNode.scale;
e.photoNode.setPosition(cc.v2(0, -50));
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(i.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(i.default).hidePopup();
}.bind(this))));
e ? t.getComponent(i.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(i.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
t.prototype.enterNextScence = function() {
r.default.getInstance().loadingDoneCallback = function() {
r.default.getInstance().loadingDoneCallback = null;
cc.audioEngine.stopMusic();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
}.bind(this);
r.default.getInstance().showAds("rainbowpoop/prefab/loadingRP", "rainbowpoop/prefab/loading1", !1);
};
t.prototype.backLastScene = function() {
l.default.changeScene("decorateSlimeRP", 7);
};
return t = __decorate([ u ], t);
}(cc.Component));
o.default = p;
cc._RF.pop();
}, {
"../common/Script/ads/showLaodingRP": "showLaodingRP",
"../common/Script/codebase/TransitionSceneRP": "TransitionSceneRP",
"../common/Script/codebase/utils/CocosHelperRP": "CocosHelperRP",
"./DataConfigRP": "DataConfigRP",
"./MyMoveInRP": "MyMoveInRP",
"./PopupComponetRP": "PopupComponetRP",
"./TipManagerRP": "TipManagerRP"
} ],
PlaySlimeFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2173svHgRLnbv1dGWKMXrt", "PlaySlimeFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./TipManagerFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.done = null;
t.action1 = null;
t.action2 = null;
t.action3 = null;
t.curNode = null;
t.isTouch = !1;
t.curTime = 0;
t.isAction = !1;
t.isStop = !1;
t.MixRound = 0;
return t;
}
t.prototype.start = function() {
this.action1 = this.node.getChildByName("action1");
this.action2 = this.node.getChildByName("action2");
this.action3 = this.node.getChildByName("action3");
this.curNode = this.action1;
var e = this.node.getChildByName("touchNode");
e.on(cc.Node.EventType.TOUCH_START, this.startAction, this);
e.on(cc.Node.EventType.TOUCH_END, this.stopAction, this);
e.on(cc.Node.EventType.TOUCH_CANCEL, this.stopAction, this);
};
t.prototype.startAction = function(e) {
this.node.getComponent(cc.AudioSource).enabled = !0;
this.node.getChildByName("heartFullColor").active = !0;
this.isTouch = !0;
if (this.isStop) {
this.curNode.getChildByName("left").resumeAllActions();
this.curNode.getChildByName("right").resumeAllActions();
this.curNode.getChildByName("slime").resumeAllActions();
} else {
this.Start1();
this.Start2();
this.Start3();
}
};
t.prototype.stopAction = function(e) {
this.isTouch = !1;
this.node.getComponent(cc.AudioSource).enabled = !1;
this.curNode.getChildByName("left").pauseAllActions();
this.curNode.getChildByName("right").pauseAllActions();
this.curNode.getChildByName("slime").pauseAllActions();
this.isStop = !0;
};
t.prototype.Start1 = function() {
var e = this.action1.getChildByName("left"), t = this.action1.getChildByName("right"), o = this.action1.getChildByName("slime");
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, 30, 0), cc.moveBy(.5, -30, 0))));
t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.4, -15, 15), cc.callFunc(function() {
t.getChildByName("hand00").active = !0;
t.getChildByName("hand0").active = !1;
}), cc.delayTime(.2), cc.callFunc(function() {
t.getChildByName("hand00").active = !1;
t.getChildByName("hand0").active = !0;
}), cc.moveBy(.4, 15, -15))));
var n = cc.scaleTo(.5, 1.08, .95), i = cc.scaleTo(.5, .95, 1.08), c = cc.repeatForever(cc.sequence(n, i));
o.runAction(c);
};
t.prototype.Start2 = function() {
var e = this.action2.getChildByName("left"), t = this.action2.getChildByName("right"), o = this.action2.getChildByName("slime");
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, 8, 15), cc.moveBy(.5, -8, -15))));
t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, -25, 5), cc.moveBy(.5, 25, -5))));
var n = cc.scaleTo(.5, 1.08, .95), i = cc.scaleTo(.5, .95, 1.08), c = cc.repeatForever(cc.sequence(n, i));
o.runAction(c);
};
t.prototype.Start3 = function() {
var e = this.action3.getChildByName("left"), t = this.action3.getChildByName("right"), o = this.action3.getChildByName("slime");
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, 15, 8), cc.moveBy(.5, -15, -8))));
t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, -25, 5), cc.moveBy(.5, 25, -5))));
var n = cc.scaleTo(.5, 1.08, .95), i = cc.scaleTo(.5, .95, 1.08), c = cc.repeatForever(cc.sequence(n, i));
o.runAction(c);
};
t.prototype.update = function(e) {
if (this.isTouch) {
this.curTime += e;
if (this.curTime >= 3) {
this.curTime = 0;
if (this.curNode == this.action1) {
this.curNode = this.action2;
this.action1.active = !1;
} else if (this.curNode == this.action2) {
this.curNode = this.action3;
this.action2.active = !1;
} else if (this.curNode == this.action3) {
this.curNode = this.action1;
this.action3.active = !1;
this.MixRound += 1;
if (2 == this.MixRound) {
cc.audioEngine.playEffect(this.done, !1);
var t = cc.find("Canvas/button/next");
t.active = !0;
t.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}
this.curNode.active = !0;
n.default.getInstance().jumpTips();
}
}
};
__decorate([ a(cc.AudioClip) ], t.prototype, "done", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./TipManagerFS": "TipManagerFS"
} ],
PlaySlimesControllerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ac51crRi/lDXaV9ISTIm2C7", "PlaySlimesControllerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./SlapControllerMS"), i = e("./ClickControllerMS"), c = e("./RubControllerMS"), a = e("./DragController1MS"), s = e("../common/common/Script/ads/showLaodingMS"), r = e("../common/common/Script/codebase/TransitionSceneMS"), l = e("./addNew/NewDataCalMS"), d = e("../common/common/Script/codebase/utils/CocosHelperMS"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.node.getComponent(cc.AudioSource).play();
}.bind(this))));
for (var e = 1; e <= 4; e++) if (1 == e) {
cc.find("Canvas/playLayer" + e).active = !0;
cc.find("Canvas/btns/" + e + "/yes").active = !0;
} else {
cc.find("Canvas/playLayer" + e).active = !1;
cc.find("Canvas/btns/" + e + "/yes").active = !1;
}
setTimeout(function() {
d.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
}, 8e3);
};
t.prototype.init = function() {
cc.find("Canvas/playLayer1").getComponent(n.default).init();
cc.find("Canvas/playLayer2").getComponent(i.default).init();
cc.find("Canvas/playLayer3").getComponent(a.default).init();
cc.find("Canvas/playLayer4").getComponent(c.default).init();
};
t.prototype.btnClick = function(e) {
var t = e.target.name;
e.target.parent.getComponent(cc.AudioSource).play();
cc.log(e.target.parent);
for (var o = 1; o <= 4; o++) if (o == Number(t)) {
cc.find("Canvas/playLayer" + o).active = !0;
cc.find("Canvas/btns/" + o + "/yes").active = !0;
} else {
cc.find("Canvas/playLayer" + o).active = !1;
cc.find("Canvas/btns/" + o + "/yes").active = !1;
}
this.init();
};
t.prototype.touchNextBtn = function(e, t) {
d.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !1;
"blue" == t && l.default.getInstance().setBoolValue("blue", !0);
"pink" == t && l.default.getInstance().setBoolValue("pink", !0);
var o = l.default.getInstance().getBoolValue("blue"), n = l.default.getInstance().getBoolValue("pink");
if (o && n) l.default.getInstance().showUI(); else {
s.default.getInstance().loadingDoneCallback = function() {
s.default.getInstance().loadingDoneCallback = null;
r.default.changeScene("selectColorSceneMS");
};
s.default.getInstance().showAds(!1);
}
};
return t = __decorate([ p ], t);
}(cc.Component));
o.default = h;
cc._RF.pop();
}, {
"../common/common/Script/ads/showLaodingMS": "showLaodingMS",
"../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"./ClickControllerMS": "ClickControllerMS",
"./DragController1MS": "DragController1MS",
"./RubControllerMS": "RubControllerMS",
"./SlapControllerMS": "SlapControllerMS",
"./addNew/NewDataCalMS": "NewDataCalMS"
} ],
PopupComponetCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1df021M/ipA4oiYvsfYxLve", "PopupComponetCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showPopup = function() {
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1)));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PopupComponetCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b145e1CiN9F+b6/PVk5wUfv", "PopupComponetCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isDestroy = !1;
return t;
}
t.prototype.showPopup = function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.active = !0;
this.node.zIndex = 99999;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1), cc.callFunc(function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !0);
}.bind(this))));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x") && this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.isDestroy ? this.node.destroy() : this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
__decorate([ c(Boolean) ], t.prototype, "isDestroy", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
PopupComponetCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22021M/ipA4oiYvsfYxLve", "PopupComponetCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showPopup = function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1), cc.callFunc(function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !0);
}.bind(this))));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PopupComponetFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21021M/ipA4oiYvsfYxLve", "PopupComponetFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showPopup = function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1), cc.callFunc(function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !0);
}.bind(this))));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PopupComponetGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1940XcrBVKxZa5ZSCkw0Jd", "PopupComponetGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isDestroy = !1;
return t;
}
t.prototype.showPopup = function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.active = !0;
this.node.zIndex = 99999;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1), cc.callFunc(function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !0);
}.bind(this))));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x") && this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.isDestroy ? this.node.destroy() : this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
__decorate([ c(cc.Boolean) ], t.prototype, "isDestroy", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
PopupComponetHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11021M/ipA4oiYvsfYxLve", "PopupComponetHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showPopup = function() {
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1)));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PopupComponetRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7740XcrBVKxZa5ZSCkw0Jd", "PopupComponetRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isDestroy = !1;
return t;
}
t.prototype.showPopup = function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.active = !0;
this.node.zIndex = 99999;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1), cc.callFunc(function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !0);
}.bind(this))));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x") && this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.isDestroy ? this.node.destroy() : this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
__decorate([ c(cc.Boolean) ], t.prototype, "isDestroy", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
PopupComponetRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12021M/ipA4oiYvsfYxLve", "PopupComponetRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showPopup = function() {
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1)));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PopupComponetSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13021M/ipA4oiYvsfYxLve", "PopupComponetSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.showPopup = function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1), cc.callFunc(function() {
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !0);
}.bind(this))));
};
t.prototype.hidePopup = function() {
this.node.getChildByName("btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("mask") && (this.node.getChildByName("mask").active = !1);
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this.node.active = !1;
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function() {
this.hidePopup();
this.callback && this.callback();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
PourControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22e4TxogBNcbery6/otP0b", "PourControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragCS"), c = e("../common/Script/codebase/TransitionSceneCS"), a = e("./PopupComponetCS"), s = e("../common/Script/codebase/utils/CocosHelperCS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("snowflake").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("snowflake").getComponent(i.default).enabled = !0;
this.node.getChildByName("tipMove").active = !0;
}.bind(this);
};
t.prototype.touchEnd = function() {
this.node.getChildByName("tipMove").active = !1;
this.node.getChildByName("snowflake").getComponent(i.default).enabled = !1;
this.node.getChildByName("snowflake").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-10, 250)), cc.callFunc(function() {
cc.find("Canvas/snowflake/snow").active = !0;
this.node.getChildByName("snowflake").getComponent(cc.AudioSource).play();
cc.find("Canvas/snowflake/snowflake").runAction(cc.fadeTo(4, 0));
cc.find("Canvas/slime/snow").runAction(cc.fadeTo(4, 255));
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
this.node.getChildByName("snowflake").getComponent(cc.AudioSource).stop();
cc.find("Canvas/snowflake/snow").active = !1;
cc.find("Canvas/slime").runAction(cc.spawn(cc.moveTo(1, cc.v2(0, 0)), cc.rotateTo(1, -45)));
}.bind(this)), cc.moveBy(.5, cc.v2(1e3, 0)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("pullSlime1CS");
}.bind(this))));
};
t.prototype.touchBackBtn = function() {
c.default.changeScene("pullSlime0CS");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
s.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(a.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(a.default).hidePopup();
}.bind(this))));
e ? t.getComponent(a.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(a.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/MoveInCS": "MoveInCS",
"../common/Script/codebase/SpriteDrag/SpriteDragCS": "SpriteDragCS",
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"./PopupComponetCS": "PopupComponetCS"
} ],
PourControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21e4TxogBNcbery6/otP0b", "PourControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragFS"), i = e("../common/Script/codebase/TransitionSceneFS"), c = e("./PopupComponetFS"), a = e("../common/Script/codebase/utils/CocosHelperFS"), s = e("../common/Script/compoent/MoveInFS"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("snowflake").getComponent(s.default).actionCallBack = function() {
this.node.getChildByName("snowflake").getComponent(n.default).enabled = !0;
this.node.getChildByName("tipMove").active = !0;
}.bind(this);
};
t.prototype.touchEnd = function() {
this.node.getChildByName("tipMove").active = !1;
this.node.getChildByName("snowflake").getComponent(n.default).enabled = !1;
this.node.getChildByName("snowflake").runAction(cc.sequence(cc.moveTo(.5, cc.v2(-10, 250)), cc.callFunc(function() {
cc.find("Canvas/snowflake/snow").active = !0;
this.node.getChildByName("snowflake").getComponent(cc.AudioSource).play();
cc.find("Canvas/snowflake/snowflake").runAction(cc.fadeTo(4, 0));
cc.find("Canvas/slime/snow").runAction(cc.fadeTo(4, 255));
}.bind(this)), cc.delayTime(4), cc.callFunc(function() {
this.node.getChildByName("snowflake").getComponent(cc.AudioSource).stop();
cc.find("Canvas/snowflake/snow").active = !1;
cc.find("Canvas/slime").runAction(cc.spawn(cc.moveTo(1, cc.v2(0, 0)), cc.rotateTo(1, -45)));
}.bind(this)), cc.moveBy(.5, cc.v2(1e3, 0)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
i.default.changeScene("pullSlime1");
}.bind(this))));
};
t.prototype.touchBackBtn = function() {
i.default.changeScene("pullSlime0FS");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
a.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(c.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(c.default).hidePopup();
}.bind(this))));
e ? t.getComponent(c.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(c.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/SpriteDrag/SpriteDragFS": "SpriteDragFS",
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"../common/Script/compoent/MoveInFS": "MoveInFS",
"./PopupComponetFS": "PopupComponetFS"
} ],
PullControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "804be6gU+BKM4yM7EgW4QtY", "PullControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCB"), i = e("./TipManagerCB"), c = e("./DragonCompoentCB"), a = e("../common/Script/codebase/TransitionSceneCB"), s = e("./DataConfigCB"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.index = null;
t._tempNodes = [];
t._armatureDisplay = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
var e = s.default.getInstance().getColors(), t = s.default.getInstance().getIndex();
e || (e = "blue");
t || (t = "7");
this.index = t;
this.dynamicCreate(e);
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_moregame").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_back").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 100;
};
t.prototype.dynamicCreate = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon");
this._armatureDisplay = t.getComponent(dragonBones.ArmatureDisplay);
var o = this;
cc.loader.loadRes("cakebatter/SlimePull/" + e + "/unicornSlimeRoll_ske", dragonBones.DragonBonesAsset, function(t, n) {
t && cc.error(t);
cc.loader.setAutoReleaseRecursively(n, !0);
o._armatureDisplay.dragonAsset = n;
cc.loader.loadRes("cakebatter/SlimePull/" + e + "/unicornSlimeRoll_tex", dragonBones.DragonBonesAtlasAsset, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoReleaseRecursively(t, !0);
o._armatureDisplay.dragonAtlasAsset = t;
o._armatureDisplay.armatureName = "Armature";
o.addHandCm();
}
});
});
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = t.getComponent(dragonBones.ArmatureDisplay), i = t.getComponent(dragonBones.ArmatureDisplay).armature(), a = 0; a < e.length; a++) {
var s = e[a], r = n.CocosHelper.findNode(cc.Canvas.instance.node, s), l = r.getComponent(c.default), d = r.getPosition(), u = d.add(cc.v2());
u.x = r.getParent().convertToNodeSpaceAR("left_hand0" == s ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
l.setStartPos(d);
l.setEndPos(u);
var p = "left_hand0" == s ? "slimel0" : "slimer0", h = i.getBone(p);
l.setMoveBone(h);
}
i.getBone("slimel0"), i.getBone("slimer0");
for (var f = 0; f <= 5; f++) {
console.log(f);
var g = i.getSlot("motion" + f + "_slime");
g.displayIndex = -1;
var m = i.getSlot("motion" + f + "_slime1");
if (m) {
m.displayIndex = -1;
console.log(m);
}
if (0 == f) {
g.displayIndex = 0;
m.displayIndex = 0;
}
dragonBones.CCFactory.getInstance().replaceSlotDisplay(o.getArmatureKey(), "Armature", "motion" + f + "_slime1", this.index, m);
}
var v = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log(v._loopSound);
cc.audioEngine.stopEffect(v._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(v.actionNode);
v.showParticle();
-1 == v._loopSound && cc.loader.loadRes("sound/lachang", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoReleaseRecursively(t, !0);
v._loopSound = cc.audioEngine.playEffect(t, !1);
setTimeout(function() {
v._loopSound = -1;
}, 1e3);
console.log("Pulling" + v._loopSound);
}
});
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(v.actionNode);
console.log(v._loopSound);
v.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(1.6 * (t + 1)), cc.callFunc(function() {
i.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) {
var o = e.getSlot("motion" + t + "_slime"), c = e.getSlot("motion" + (t + 1) + "_slime");
o && (o.displayIndex = -1);
c && (c.displayIndex = 0);
var a = e.getSlot("motion" + t + "_slime1"), s = e.getSlot("motion" + (t + 1) + "_slime1");
a && (a.displayIndex = -1);
s && (s.displayIndex = 0);
} else {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var r = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
r.active = !0;
r.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, c = 0; c < 6; c++) t(c);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
a.default.changeScene("clickSlimeCB");
};
t.prototype.touchBackBtn = function() {
a.default.changeScene("kneadSlimeCB");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"./DataConfigCB": "DataConfigCB",
"./DragonCompoentCB": "DragonCompoentCB",
"./TipManagerCB": "TipManagerCB"
} ],
PullControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22be6gU+BKM4yM7EgW4QtY", "PullControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCS"), i = e("./TipManagerCS"), c = e("./DragonCompoentCS"), a = e("../common/Script/codebase/TransitionSceneCS"), s = e("../common/Script/showLaodingCS"), r = e("./PopupComponetCS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.actionNode = null;
t.maxCount = null;
t.time = null;
t.isPulling = !0;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_back").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 100;
if ("pullSlime0CS" == cc.director.getScene().name) {
this.maxCount = 4;
this.time = 2;
} else {
this.maxCount = 2;
this.time = 3;
}
this.dynamicCreate();
};
t.prototype.dynamicCreate = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay);
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), i = 0; i < e.length; i++) {
var a = e[i], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(c.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 1; h <= this.maxCount; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log("PullTouch");
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
g.showParticle();
g.isPulling = !0;
cc.director.getActionManager().resumeTarget(g.actionNode);
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
g.isPulling = !1;
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
g.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.log(g.isPulling);
g.isPulling || g.hideParticle();
})));
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(o.time * (t + 1)), cc.callFunc(function() {
i.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (t != this.maxCount) {
var o = e.getSlot("motion" + t + "_slime"), c = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
c.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
a.active = !0;
a.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, c = 0; c <= this.maxCount; c++) t(c);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
if ("pullSlime0CS" == cc.director.getScene().name) {
s.default.getInstance().loadingDoneCallback = function() {
s.default.getInstance().loadingDoneCallback = null;
a.default.changeScene("pourSnowCS");
};
s.default.getInstance().showAds(!1);
} else a.default.changeScene("coilSlimeCS");
};
t.prototype.touchBackBtn = function() {
"pullSlime0CS" == cc.director.getScene().name ? a.default.changeScene("rubSlimeCS") : a.default.changeScene("pourSnowCS");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(r.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(r.default).hidePopup();
}.bind(this))));
e ? t.getComponent(r.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(r.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
__decorate([ u({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"../common/Script/showLaodingCS": "showLaodingCS",
"./DragonCompoentCS": "DragonCompoentCS",
"./PopupComponetCS": "PopupComponetCS",
"./TipManagerCS": "TipManagerCS"
} ],
PullControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21be6gU+BKM4yM7EgW4QtY", "PullControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperFS"), i = e("./TipManagerFS"), c = e("./DragonCompoentFS"), a = e("../common/Script/codebase/TransitionSceneFS"), s = e("./PopupComponetFS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.actionNode = null;
t.maxCount = null;
t.time = null;
t.isPulling = !0;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
console.log("!!@!@!@");
if ("pullSlime0FS" == cc.director.getScene().name) {
this.maxCount = 6;
this.time = 2;
} else {
this.maxCount = 2;
this.time = 3;
}
this.dynamicCreate();
};
t.prototype.dynamicCreate = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay);
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), i = 0; i < e.length; i++) {
var a = e[i], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(c.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
o.getSlot("motion0_slime").displayIndex = 0;
for (var h = 1; h < this.maxCount; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log("PullTouch");
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
g.showParticle();
g.isPulling = !0;
cc.director.getActionManager().resumeTarget(g.actionNode);
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
g.isPulling = !1;
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
g.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.log(g.isPulling);
g.isPulling || g.hideParticle();
})));
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(o.time * (t + 1)), cc.callFunc(function() {
i.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (t != this.maxCount - 1) {
var o = e.getSlot("motion" + t + "_slime"), c = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
c.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var a = cc.find("Canvas/button/next");
a.active = !0;
a.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, c = 0; c < this.maxCount; c++) t(c);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
"pullSlime0" == cc.director.getScene().name ? a.default.changeScene("pourSnow") : a.default.changeScene("coilSlime");
};
t.prototype.touchBackBtn = function() {
"pullSlime0" == cc.director.getScene().name ? a.default.changeScene("rubSlime") : a.default.changeScene("pourSnow");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(s.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(s.default).hidePopup();
}.bind(this))));
e ? t.getComponent(s.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(s.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
__decorate([ d({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"./DragonCompoentFS": "DragonCompoentFS",
"./PopupComponetFS": "PopupComponetFS",
"./TipManagerFS": "TipManagerFS"
} ],
PullControllerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3d135nsPMBABaE3BQ1Dl+Ao", "PullControllerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DataConfigMS"), i = e("../common/common/Script/codebase/utils/CocosHelperMS"), c = e("./DragonCompoentMS"), a = e("./TipManagerMS"), s = e("../common/common/Script/ads/showLaodingMS"), r = e("../common/common/Script/codebase/TransitionSceneMS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.colorName = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
var e = this;
setTimeout(function() {
e.dynamicCreate();
}, 1e3);
};
t.prototype.dynamicCreate = function() {
var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "dragon");
e.active = !0;
this.addHandCm();
e.runAction(cc.sequence(cc.moveTo(1, cc.v2(-9, -16)), cc.callFunc(function() {
cc.find("Canvas/arrow_right").active = !0;
cc.find("Canvas/arrow_left").active = !0;
})));
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), o = i.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), n = i.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), c = i.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
t.active = !0;
o.active = !0;
n.active = !0;
c.active = !0;
var a = t.position;
t.position = cc.v2(-600, 0);
var s = n.position;
n.position = cc.v2(-600, 0);
var r = o.position;
o.position = cc.v2(600, 0);
var l = c.position;
c.position = cc.v2(600, 0);
t.runAction(cc.moveTo(1, a));
n.runAction(cc.moveTo(1, s));
o.runAction(cc.moveTo(1, r));
c.runAction(cc.moveTo(1, l));
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = i.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), n = 0; n < e.length; n++) {
var a = e[n], s = i.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(c.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 1; h <= 5; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(2 * (t + 1)), cc.callFunc(function() {
a.default.getInstance().jumpTips();
i.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), i.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
i.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), i.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) {
var o = e.getSlot("motion" + t + "_slime"), n = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
n.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
i.CocosHelper.findNode(cc.Canvas.instance.node, "finish").getComponent(cc.ParticleSystem).resetSystem();
var c = i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
c.active = !0;
c.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, n = 0; n < 6; n++) t(n);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {};
t.prototype.hideParticle = function() {};
t.prototype.touchNextBtn = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
s.default.getInstance().showAds(!1);
s.default.getInstance().loadingDoneCallback = function() {
console.log("广告关闭");
s.default.getInstance().loadingDoneCallback = null;
cc.director.loadScene("selectSceneMS");
};
};
t.prototype.touchBackBtn = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
var t = cc.view.getVisibleSize().width, o = cc.view.getVisibleSize().height;
i.CocosHelper.captureNodeSize(cc.Canvas.instance.node, t, o).then(function(e) {
if (null == e) ; else {
n.default.getInstance().setPageTexture(e);
r.default.changeScene("play3SceneMS");
}
});
};
__decorate([ u({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../common/common/Script/ads/showLaodingMS": "showLaodingMS",
"../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"./DataConfigMS": "DataConfigMS",
"./DragonCompoentMS": "DragonCompoentMS",
"./TipManagerMS": "TipManagerMS"
} ],
PullControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12be6gU+BKM4yM7EgW4QtY", "PullControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperRS"), i = e("./TipManagerRS"), c = e("./DragonCompoentRS"), a = e("../common/Script/codebase/TransitionSceneRS"), s = e("../common/Script/showLaodingRS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
this.dynamicCreate();
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_moregame").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_back").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 100;
};
t.prototype.dynamicCreate = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay);
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), i = 0; i < e.length; i++) {
var a = e[i], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(c.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 1; h <= 5; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(2 * (t + 1)), cc.callFunc(function() {
i.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) {
var o = e.getSlot("motion" + t + "_slime"), c = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
c.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
a.active = !0;
a.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, c = 0; c < 6; c++) t(c);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
s.default.getInstance().loadingDoneCallback = function() {
a.default.changeScene("clickSlimeRS");
};
s.default.getInstance().showAds(!1);
};
t.prototype.touchBackBtn = function() {
a.default.changeScene("fuseSlimeRS");
};
__decorate([ d({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"../common/Script/codebase/utils/CocosHelperRS": "CocosHelperRS",
"../common/Script/showLaodingRS": "showLaodingRS",
"./DragonCompoentRS": "DragonCompoentRS",
"./TipManagerRS": "TipManagerRS"
} ],
PullControllerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13be6gU+BKM4yM7EgW4QtY", "PullControllerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperSD"), i = e("./TipManagerSD"), c = e("./DragonCompoentSD"), a = e("../common/Script/codebase/TransitionSceneSD"), s = e("../common/Script/showLaodingSD"), r = e("./DataConfigSD"), l = e("../common/Script/MoveInSD"), d = cc._decorator, u = d.ccclass, p = d.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.colorName = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
var e = r.default.getInstance().getColor();
this.colorName = e;
cc.loader.loadRes("slimedark/image/" + e, cc.SpriteFrame, function(e, t) {
this.node.getChildByName("slime").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("slimedark/image/motion1_1l1_" + e, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/left_hand1/shadow").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("slimedark/image/motion1_1r1_" + e, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/right_hand1/shadow").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
this.dynamicCreate();
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_moregame").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_back").zIndex = 100;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 100;
this.node.getChildByName("slime").getComponent(l.default).actionCallBack = function() {
this.node.getChildByName("bgMask").runAction(cc.fadeTo(2, 255));
cc.find("Canvas/dragon").runAction(cc.sequence(cc.fadeTo(2, 255), cc.callFunc(function() {
this.node.getChildByName("slime").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "arrow_right").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "arrow_left").active = !0;
}.bind(this))));
}.bind(this);
};
t.prototype.dynamicCreate = function() {
var e = this, t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay), o = this;
cc.loader.loadRes("slimedark/dragon/slime_" + this.colorName + "_ske", dragonBones.DragonBonesAsset, function(n, i) {
n && cc.error(n);
cc.loader.setAutoReleaseRecursively(i, !0);
t.dragonAsset = i;
cc.loader.loadRes("slimedark/dragon/slime_" + e.colorName + "_tex", dragonBones.DragonBonesAtlasAsset, function(e, n) {
if (e) console.log(e + ""); else {
cc.loader.setAutoReleaseRecursively(n, !0);
t.dragonAtlasAsset = n;
t.armatureName = "Armature";
o.addHandCm();
}
});
});
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), i = 0; i < e.length; i++) {
var a = e[i], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(c.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 1; h <= 5; h++) {
console.log(h);
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound && g.lachang) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(2 * (t + 1)), cc.callFunc(function() {
i.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) {
var o = e.getSlot("motion" + t + "_slime"), c = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
c.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
a.active = !0;
a.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}.bind(o))));
}, o = this, c = 0; c < 6; c++) t(c);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "colorBuble");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "colorBuble").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
cc.find("Canvas").targetOff(this);
s.default.getInstance().loadingDoneCallback = function() {
s.default.getInstance().loadingDoneCallback = null;
a.default.changeScene("kneadSlimeSD");
};
s.default.getInstance().showAds(!1);
};
t.prototype.touchBackBtn = function() {
a.default.changeScene("fuseSlime");
};
__decorate([ p({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ u ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../common/Script/MoveInSD": "MoveInSD",
"../common/Script/codebase/TransitionSceneSD": "TransitionSceneSD",
"../common/Script/codebase/utils/CocosHelperSD": "CocosHelperSD",
"../common/Script/showLaodingSD": "showLaodingSD",
"./DataConfigSD": "DataConfigSD",
"./DragonCompoentSD": "DragonCompoentSD",
"./TipManagerSD": "TipManagerSD"
} ],
RefrigeratorControllerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14fbcNmHpJpbJQDor3g1RL", "RefrigeratorControllerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.foodTouchStart = function() {};
t.prototype.foodTouchEnd = function() {};
t.prototype.drawerClick = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
RewardManagerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7b40b30v5pPdaGxNk4qL0W/", "RewardManagerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerCB"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "cakebatter/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
if (this.mapRewardItems.has(e)) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
}
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
var e = this;
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + t);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + o);
o != n.ADS_TYPE.kTypeInterstitialAds || e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsRewarded = function(t, o, n) {
e.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + e._waitingUnLockItemInfo.getKey());
if (n) e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey()); else {
e.unLockedByItem(e._waitingUnLockItemInfo);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
}
};
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
cc._RF.pop();
}, {
"./AdsManagerCB": "AdsManagerCB"
} ],
RewardManagerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14feD1at5JSLm2D6gDK4Ia", "RewardManagerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerCE"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "crazyemoji/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.isLockOther = function(e) {
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {}.bind(this);
n.default.getInstance().onAdsClicked = function(e) {}.bind(this);
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
}.bind(this);
n.default.getInstance().onAdsCollapsed = function(e) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + e);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsLoadFailed = function(e, t) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + t);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
t != n.ADS_TYPE.kTypeInterstitialAds || this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsRewarded = function(e, t, o) {
console.log(" RewardManager====>self.unLisenter()");
this.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + this._waitingUnLockItemInfo.getKey());
if (o) this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey()); else {
this.unLockedByItem(this._waitingUnLockItemInfo);
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}
}.bind(this);
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
o.RewardInfoItem = c;
cc._RF.pop();
}, {
"./AdsManagerCE": "AdsManagerCE"
} ],
RewardManagerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b220b30v5pPdaGxNk4qL0W/", "RewardManagerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerCS"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
if (this.mapRewardItems.has(e)) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
}
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
var e = this;
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + t);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + o);
o != n.ADS_TYPE.kTypeInterstitialAds || e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsRewarded = function(t, o, n) {
e.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + e._waitingUnLockItemInfo.getKey());
if (n) e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey()); else {
e.unLockedByItem(e._waitingUnLockItemInfo);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
}
};
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
cc._RF.pop();
}, {
"./AdsManagerCS": "AdsManagerCS"
} ],
RewardManagerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21feD1at5JSLm2D6gDK4Ia", "RewardManagerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerFS"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "flowerslime/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.isLockOther = function(e) {
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {}.bind(this);
n.default.getInstance().onAdsClicked = function(e) {}.bind(this);
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
}.bind(this);
n.default.getInstance().onAdsCollapsed = function(e) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + e);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsLoadFailed = function(e, t) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + t);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
t != n.ADS_TYPE.kTypeInterstitialAds || this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsRewarded = function(e, t, o) {
console.log(" RewardManager====>self.unLisenter()");
this.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + this._waitingUnLockItemInfo.getKey());
if (o) this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey()); else {
this.unLockedByItem(this._waitingUnLockItemInfo);
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}
}.bind(this);
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
o.RewardInfoItem = c;
cc._RF.pop();
}, {
"./AdsManagerFS": "AdsManagerFS"
} ],
RewardManagerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19feD1at5JSLm2D6gDK4Ia", "RewardManagerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerGL"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "galaxyslime/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.isLockOther = function(e) {
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {}.bind(this);
n.default.getInstance().onAdsClicked = function(e) {}.bind(this);
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
}.bind(this);
n.default.getInstance().onAdsCollapsed = function(e) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + e);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsLoadFailed = function(e, t) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + t);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
t != n.ADS_TYPE.kTypeInterstitialAds || this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsRewarded = function(e, t, o) {
console.log(" RewardManager====>self.unLisenter()");
this.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + this._waitingUnLockItemInfo.getKey());
if (o) this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey()); else {
this.unLockedByItem(this._waitingUnLockItemInfo);
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}
}.bind(this);
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
o.RewardInfoItem = c;
cc._RF.pop();
}, {
"./AdsManagerGL": "AdsManagerGL"
} ],
RewardManagerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2b008WcbHhDfJHlVOsIpNkH", "RewardManagerGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerGS"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "glitterslime/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) {
console.log("!this.mapRewardItems.has(key)");
return !1;
}
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
if (this.mapRewardItems.has(e)) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
}
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
var e = this;
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + t);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + o);
o != n.ADS_TYPE.kTypeInterstitialAds || e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsRewarded = function(t, o, n) {
e.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + e._waitingUnLockItemInfo.getKey());
if (n) e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey()); else {
e.unLockedByItem(e._waitingUnLockItemInfo);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
}
};
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
cc._RF.pop();
}, {
"./AdsManagerGS": "AdsManagerGS"
} ],
RewardManagerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b110b30v5pPdaGxNk4qL0W/", "RewardManagerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerHC"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "chocolateslime/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
if (this.mapRewardItems.has(e)) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
}
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
var e = this;
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + t);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + o);
o != n.ADS_TYPE.kTypeInterstitialAds || e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsRewarded = function(t, o, n) {
e.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + e._waitingUnLockItemInfo.getKey());
if (n) e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey()); else {
e.unLockedByItem(e._waitingUnLockItemInfo);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
}
};
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
cc._RF.pop();
}, {
"./AdsManagerHC": "AdsManagerHC"
} ],
RewardManagerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "494f8WrUwlJXr8rKyJJZ4pz", "RewardManagerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerMS"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "makeupms/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.isLockOther = function(e) {
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {}.bind(this);
n.default.getInstance().onAdsClicked = function(e) {}.bind(this);
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
}.bind(this);
n.default.getInstance().onAdsCollapsed = function(e) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + e);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsLoadFailed = function(e, t) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + t);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
t != n.ADS_TYPE.kTypeInterstitialAds || this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsRewarded = function(e, t, o) {
console.log(" RewardManager====>self.unLisenter()");
this.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + this._waitingUnLockItemInfo.getKey());
if (o) this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey()); else {
this.unLockedByItem(this._waitingUnLockItemInfo);
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}
}.bind(this);
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
o.RewardInfoItem = c;
cc._RF.pop();
}, {
"./AdsManagerMS": "AdsManagerMS"
} ],
RewardManagerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77feD1at5JSLm2D6gDK4Ia", "RewardManagerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerRP"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "rainbowpoop/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.isLockOther = function(e) {
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {}.bind(this);
n.default.getInstance().onAdsClicked = function(e) {}.bind(this);
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
}.bind(this);
n.default.getInstance().onAdsCollapsed = function(e) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + e);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsLoadFailed = function(e, t) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + t);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
t != n.ADS_TYPE.kTypeInterstitialAds || this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsRewarded = function(e, t, o) {
console.log(" RewardManager====>self.unLisenter()");
this.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + this._waitingUnLockItemInfo.getKey());
if (o) this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey()); else {
this.unLockedByItem(this._waitingUnLockItemInfo);
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}
}.bind(this);
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
o.RewardInfoItem = c;
cc._RF.pop();
}, {
"./AdsManagerRP": "AdsManagerRP"
} ],
RewardManagerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b120b30v5pPdaGxNk4qL0W/", "RewardManagerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerRS"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "rainbowslime/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
if (this.mapRewardItems.has(e)) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
}
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
var e = this;
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + t);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + o);
o != n.ADS_TYPE.kTypeInterstitialAds || e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsRewarded = function(t, o, n) {
e.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + e._waitingUnLockItemInfo.getKey());
if (n) e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey()); else {
e.unLockedByItem(e._waitingUnLockItemInfo);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
}
};
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
cc._RF.pop();
}, {
"./AdsManagerRS": "AdsManagerRS"
} ],
RewardManagerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b130b30v5pPdaGxNk4qL0W/", "RewardManagerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerSD"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "slimedark/content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
if (this.mapRewardItems.has(e)) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
}
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
var e = this;
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + t);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + o);
o != n.ADS_TYPE.kTypeInterstitialAds || e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
};
n.default.getInstance().onAdsRewarded = function(t, o, n) {
e.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + e._waitingUnLockItemInfo.getKey());
if (n) e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey()); else {
e.unLockedByItem(e._waitingUnLockItemInfo);
e.removeRewardLoadingCall && e.removeRewardLoadingCall(e._waitingUnLockItemInfo.getKey());
}
};
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
cc._RF.pop();
}, {
"./AdsManagerSD": "AdsManagerSD"
} ],
RewardManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "78ffeD1at5JSLm2D6gDK4Ia", "RewardManager");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManager"), i = function() {
function e() {
this.showCrossCount = 0;
this.mapRewardItems = new Map();
this.jsonPath = "content.json";
this.showCrossCount = 0;
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.loadConfig = function() {
var e = this;
cc.loader.loadRes(this.jsonPath, function(t, o) {
t ? cc.log("解析json文件失败" + t) : o.json.forEach(function(t) {
var o = t.Indexs.split(",");
if (0 != o.length) {
console.log(o);
for (var n = t.IAPID, i = t.ModuleName, a = t.Key, s = 0; s < o.length; s++) {
var r = new c(n, i, a, -1), l = o[s];
r.index = Number(l);
e.mapRewardItems.set(r.getKey(), r);
}
console.log(e.mapRewardItems);
}
});
});
};
e.prototype.getRewardInfoItem = function(e, t, o) {
var n = this.getItemKey(e, t, o);
return this.mapRewardItems.has(n) ? this.mapRewardItems.get(n) : null;
};
e.prototype.getItemKey = function(e, t, o) {
console.log(e + t + String(o));
return e + t + String(o);
};
e.prototype.isLocked = function(e) {
if (!this.mapRewardItems.has(e)) return !1;
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.isLockOther = function(e) {
var t = cc.sys.localStorage.getItem(e);
t || (t = 1);
cc.sys.localStorage.setItem(e, t);
return 1 == t;
};
e.prototype.showRewardAds = function(e) {
if (this.mapRewardItems.has(e) && this.isLocked(e)) {
console.log("显示reward,开始解锁" + e);
this.showRewardAdsByItem(this.mapRewardItems.get(e));
}
};
e.prototype.showRewardAdsByItem = function(e) {
if (jsToCPP.getInstance().checkNetworkAvailable()) {
cc.sys.isMobile && this.initLisenter();
if (n.default.getInstance().showReward()) {
this.s_showFullAds = !1;
this._waitingUnLockItemInfo = e;
this.showRewardLoadingCall && this.showRewardLoadingCall();
} else {
n.default.getInstance().preAdsByType(n.ADS_TYPE.kTypeRewardedAds);
if (!this.showRewardFailedHandleAndroid()) return;
console.log(e);
this._waitingUnLockItemInfo = e;
this.unLockedByItem(this._waitingUnLockItemInfo);
}
cc.log("要解锁的key", this._waitingUnLockItemInfo.getKey());
cc.log("=========onAdsCollapsed %d 1111=========", this.s_showFullAds);
} else {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
};
e.prototype.unLocked = function(e) {
cc.sys.localStorage.setItem(e, 0);
console.log("解锁成功" + e);
};
e.prototype.unLockedByItem = function(e) {
console.log("解锁" + e.getKey());
this.unLocked(e.getKey());
};
e.prototype.showRewardFailedHandleAndroid = function() {
var e, t = n.ADS_TYPE.kTypeInterstitialAds;
if (this.showCrossCount >= 2) {
this.showCrossCount = 0;
t = n.ADS_TYPE.kTypeCrosspromoAds;
}
this.showCrossCount++;
if (!(e = t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross())) {
jsToCPP.getInstance().popAlertDialog("there is problem with internet connection and try later");
this.showRewardFalseCall && this.showRewardFalseCall();
}
return e;
};
e.prototype.unLisenter = function() {
n.default.getInstance().onAdsLoaded = null;
n.default.getInstance().onAdsClicked = null;
n.default.getInstance().onAdsExpanded = null;
n.default.getInstance().onAdsCollapsed = null;
n.default.getInstance().onAdsLoadFailed = null;
n.default.getInstance().onAdsRewarded = null;
};
e.prototype.initLisenter = function() {
console.log(" RewardManager initLisenter");
n.default.getInstance().initLisenter();
n.default.getInstance().onAdsLoaded = function(e) {}.bind(this);
n.default.getInstance().onAdsClicked = function(e) {}.bind(this);
n.default.getInstance().onAdsExpanded = function(e) {
console.log(" RewardManager====>广告====>ID值" + e);
}.bind(this);
n.default.getInstance().onAdsCollapsed = function(e) {
console.log(" RewardManager====>onAdsCollapsed====>ID值" + e);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsLoadFailed = function(e, t) {
console.log(" RewardManager====>onAdsLoadFailed====>ID值" + t);
this.unLisenter();
console.log(" RewardManager====>self.unLisenter()");
t != n.ADS_TYPE.kTypeInterstitialAds || this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}.bind(this);
n.default.getInstance().onAdsRewarded = function(e, t, o) {
console.log(" RewardManager====>self.unLisenter()");
this.unLisenter();
console.log(" RewardManager====>onAdsRewarded-------" + this._waitingUnLockItemInfo.getKey());
if (o) this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey()); else {
this.unLockedByItem(this._waitingUnLockItemInfo);
this.removeRewardLoadingCall && this.removeRewardLoadingCall(this._waitingUnLockItemInfo.getKey());
}
}.bind(this);
};
return e;
}();
o.default = i;
var c = function() {
function e(e, t, o, n) {
this.index = 999;
this.iapId = e;
this.moduleName = t;
this.keyInModule = o;
this.index = n;
}
e.prototype.getKey = function() {
return this.moduleName + this.keyInModule + this.index;
};
e.prototype.isNull = function() {
return 999 == this.index;
};
return e;
}();
o.RewardInfoItem = c;
cc._RF.pop();
}, {
"./AdsManager": "AdsManager"
} ],
RotateCompoentCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1483z7d0tAc6TSC5OHBvgw", "RotateCompoentCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerCE"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.endRotate = 0;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = (this.getWordPos(e.getLocation()), 
this.getWordPos(e.getPreviousLocation()), e.getDelta().sub(t)), n = this.touchPrePos.sub(t), i = 180 * o.angle(n) / 3.1415926, c = this.node.rotation + 20 * i;
this.node.rotation = c;
if (c >= this.endRotate) {
this.node.rotation = this.endRotate;
this.enabled = !1;
for (var a = 0, s = this.eventTouchs.slice().reverse(); a < s.length; a++) {
if (s[a].emit("RotaEnd", e, this)) break;
}
}
};
t.prototype.touchStart = function(e) {
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
__decorate([ a({
type: [ n.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ a({
tooltip: "完成的角度"
}) ], t.prototype, "endRotate", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerCE": "EventListenerCE"
} ],
RotateCompoentFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2183z7d0tAc6TSC5OHBvgw", "RotateCompoentFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.endRotate = 0;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = (this.getWordPos(e.getLocation()), 
this.getWordPos(e.getPreviousLocation()), e.getDelta().sub(t)), n = this.touchPrePos.sub(t), i = 180 * o.angle(n) / 3.1415926, c = this.node.rotation + 20 * i;
this.node.rotation = c;
if (c >= this.endRotate) {
this.node.rotation = this.endRotate;
this.enabled = !1;
for (var a = 0, s = this.eventTouchs.slice().reverse(); a < s.length; a++) {
if (s[a].emit("RotaEnd", e, this)) break;
}
}
};
t.prototype.touchStart = function(e) {
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
__decorate([ a({
type: [ n.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ a({
tooltip: "完成的角度"
}) ], t.prototype, "endRotate", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerFS": "EventListenerFS"
} ],
RotateCompoentGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1983z7d0tAc6TSC5OHBvgw", "RotateCompoentGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.endRotate = 0;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = (this.getWordPos(e.getLocation()), 
this.getWordPos(e.getPreviousLocation()), e.getDelta().sub(t)), n = this.touchPrePos.sub(t), i = 180 * o.angle(n) / 3.1415926, c = this.node.rotation + 20 * i;
this.node.rotation = c;
if (c >= this.endRotate) {
this.node.rotation = this.endRotate;
this.enabled = !1;
for (var a = 0, s = this.eventTouchs.slice().reverse(); a < s.length; a++) {
if (s[a].emit("RotaEnd", e, this)) break;
}
}
};
t.prototype.touchStart = function(e) {
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
__decorate([ a({
type: [ n.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ a({
tooltip: "完成的角度"
}) ], t.prototype, "endRotate", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerGL": "EventListenerGL"
} ],
RotateCompoentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dc7ccqxPvVAsIn/mgeXiaKA", "RotateCompoentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.endRotate = 0;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = (this.getWordPos(e.getLocation()), 
this.getWordPos(e.getPreviousLocation()), e.getDelta().sub(t)), n = this.touchPrePos.sub(t), i = 180 * o.angle(n) / 3.1415926, c = this.node.rotation + 20 * i;
this.node.rotation = c;
if (c >= this.endRotate) {
this.node.rotation = this.endRotate;
this.enabled = !1;
for (var a = 0, s = this.eventTouchs.slice().reverse(); a < s.length; a++) {
if (s[a].emit("RotaEnd", e, this)) break;
}
}
};
t.prototype.touchStart = function(e) {
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
__decorate([ a({
type: [ n.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ a({
tooltip: "完成的角度"
}) ], t.prototype, "endRotate", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerMS": "EventListenerMS"
} ],
RotateCompoentRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7783z7d0tAc6TSC5OHBvgw", "RotateCompoentRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListenerRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.endRotate = 0;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = (this.getWordPos(e.getLocation()), 
this.getWordPos(e.getPreviousLocation()), e.getDelta().sub(t)), n = this.touchPrePos.sub(t), i = 180 * o.angle(n) / 3.1415926, c = this.node.rotation + 20 * i;
this.node.rotation = c;
if (c >= this.endRotate) {
this.node.rotation = this.endRotate;
this.enabled = !1;
for (var a = 0, s = this.eventTouchs.slice().reverse(); a < s.length; a++) {
if (s[a].emit("RotaEnd", e, this)) break;
}
}
};
t.prototype.touchStart = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit("RotaStart", e, this)) break;
}
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
__decorate([ a({
type: [ n.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ a({
tooltip: "完成的角度"
}) ], t.prototype, "endRotate", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListenerRP": "EventListenerRP"
} ],
RotateCompoent: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "66583z7d0tAc6TSC5OHBvgw", "RotateCompoent");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/EventListener"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.endRotate = 0;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = (this.getWordPos(e.getLocation()), 
this.getWordPos(e.getPreviousLocation()), e.getDelta().sub(t)), n = this.touchPrePos.sub(t), i = 180 * o.angle(n) / 3.1415926, c = this.node.rotation + 20 * i;
this.node.rotation = c;
if (c >= this.endRotate) {
this.node.rotation = this.endRotate;
this.enabled = !1;
for (var a = 0, s = this.eventTouchs.slice().reverse(); a < s.length; a++) {
if (s[a].emit("RotaEnd", e, this)) break;
}
}
};
t.prototype.touchStart = function(e) {
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
__decorate([ a({
type: [ n.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ a({
tooltip: "完成的角度"
}) ], t.prototype, "endRotate", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../codebase/EventListener": "EventListener"
} ],
RubControllerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2266q+CmBBFJIalbPwCcIe", "RubControllerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCS"), i = e("../common/Script/MoveInCS"), c = e("./HandTouchEventCS"), a = e("../common/Script/codebase/TransitionSceneCS"), s = e("./TipManagerCS"), r = e("./PopupComponetCS"), l = cc._decorator, d = l.ccclass, u = (l.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/hand_right/hand").getComponent(i.default).actionCallBack = function() {
cc.find("Canvas/hand_right/hand").getComponent(c.default).init();
cc.find("Canvas/hand_right/finger").active = !0;
}.bind(this);
cc.find("Canvas/hand_left/hand").getComponent(i.default).actionCallBack = function() {
cc.find("Canvas/hand_left/hand").getComponent(c.default).init();
cc.find("Canvas/hand_left/finger").active = !0;
}.bind(this);
};
t.prototype.mixFinish = function(e) {
s.default.getInstance().jumpTips();
var t = e.node, o = t.parent;
o.getChildByName("hand").getComponent(cc.Animation).stop();
o.getChildByName("hand").getComponent(c.default).destroyTouchEvent();
t.stopAllActions();
t.setScale(1);
o.getChildByName("hand").runAction(cc.moveBy(.5, cc.v2(0, -1e3)));
this.count = this.count + 1;
if (2 == this.count) {
cc.find("Canvas/hand_right").runAction(cc.moveTo(1, cc.v2(0, 70)));
cc.find("Canvas/hand_left").runAction(cc.sequence(cc.moveTo(1, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/hand_right").active = !1;
cc.find("Canvas/hand_left").opacity = 0;
cc.find("Canvas/mix").active = !0;
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
a.default.changeScene("pullSlime0CS");
}.bind(this))));
}
};
t.prototype.touchBackBtn = function() {
a.default.changeScene("addMaterialCS");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(r.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(r.default).hidePopup();
}.bind(this))));
e ? t.getComponent(r.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(r.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
return t = __decorate([ d ], t);
}(cc.Component));
o.default = u;
cc._RF.pop();
}, {
"../common/Script/MoveInCS": "MoveInCS",
"../common/Script/codebase/TransitionSceneCS": "TransitionSceneCS",
"../common/Script/codebase/utils/CocosHelperCS": "CocosHelperCS",
"./HandTouchEventCS": "HandTouchEventCS",
"./PopupComponetCS": "PopupComponetCS",
"./TipManagerCS": "TipManagerCS"
} ],
RubControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2166q+CmBBFJIalbPwCcIe", "RubControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperFS"), i = e("./HandTouchEventFS"), c = e("../common/Script/codebase/TransitionSceneFS"), a = e("./TipManagerFS"), s = e("./PopupComponetFS"), r = e("../common/Script/compoent/MoveInFS"), l = cc._decorator, d = l.ccclass, u = (l.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.count = 0;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.onLoad = function() {
cc.find("Canvas/hand_right/hand").getComponent(r.default).actionCallBack = function() {
cc.find("Canvas/hand_right/hand").getComponent(i.default).init();
cc.find("Canvas/hand_right/finger").active = !0;
}.bind(this);
cc.find("Canvas/hand_left/hand").getComponent(r.default).actionCallBack = function() {
cc.find("Canvas/hand_left/hand").getComponent(i.default).init();
cc.find("Canvas/hand_left/finger").active = !0;
}.bind(this);
};
t.prototype.mixFinish = function(e) {
a.default.getInstance().jumpTips();
var t = e.node, o = t.parent;
o.getChildByName("hand").getComponent(cc.Animation).stop();
o.getChildByName("hand").getComponent(i.default).destroyTouchEvent();
t.stopAllActions();
t.setScale(1);
o.getChildByName("hand").runAction(cc.moveBy(.5, cc.v2(0, -1e3)));
this.count = this.count + 1;
if (2 == this.count) {
cc.find("Canvas/hand_right").runAction(cc.moveTo(1, cc.v2(0, 70)));
cc.find("Canvas/hand_left").runAction(cc.sequence(cc.moveTo(1, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("Canvas/hand_right").active = !1;
cc.find("Canvas/hand_left").opacity = 0;
cc.find("Canvas/mix").active = !0;
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
c.default.changeScene("pullSlime0FS");
}.bind(this))));
}
};
t.prototype.touchBackBtn = function() {
c.default.changeScene("addMaterial");
};
t.prototype.camera = function() {
var e = this;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !1;
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(t) {
if (null != t) {
var o = new cc.SpriteFrame();
o.setTexture(t);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("photo", e.node).active = !0;
var n = cc.find("photo/mask", e.node), i = e.photoNode.getContentSize(), c = n.width, a = n.height, s = null, r = null;
if (c < i.width) {
s = c / i.width;
e.photoNode.setScale(s);
}
if (a < i.height) {
r = a / i.height;
e.photoNode.setScale(r);
}
s && r && (s > r ? e.photoNode.setScale(s) : e.photoNode.setScale(r));
n.addChild(e.photoNode);
cc.log(e.photoNode);
var l = t.readPixels(), d = t.width, u = t.height, p = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + p + ".png";
jsb.saveImageData(l, d, u, e.filePath) || (e.filePath = "");
}
});
this.node.getChildByName("btn_camera").getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = this.node.getChildByName("popup");
t.active = !0;
t.getComponent(s.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(s.default).hidePopup();
}.bind(this))));
e ? t.getComponent(s.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(s.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this)) : console.log("download failed!");
};
t.prototype.shareImage = function() {
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.photoNode.destroy();
cc.find("photo", this.node).active = !1;
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/btn_camera").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
this.node.getChildByName("photo").active = !1;
};
return t = __decorate([ d ], t);
}(cc.Component));
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../common/Script/codebase/utils/CocosHelperFS": "CocosHelperFS",
"../common/Script/compoent/MoveInFS": "MoveInFS",
"./HandTouchEventFS": "HandTouchEventFS",
"./PopupComponetFS": "PopupComponetFS",
"./TipManagerFS": "TipManagerFS"
} ],
RubControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19fagHQvVN+o7NRjczy9m5", "RubControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./HandTouchEventGL"), i = e("../common/Script/compoent/MoveInGL"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.init = function() {
this.node.getChildByName("finger").active = !1;
this.node.getChildByName("slime").stopAllActions();
this.node.getChildByName("slime").setScale(1);
this.node.getChildByName("slime").setPosition(cc.v2(0, 0));
this.node.getChildByName("slime").opacity = 0;
this.node.getChildByName("hand").opacity = 0;
this.node.getChildByName("hand").stopAllActions();
this.node.getChildByName("hand").setPosition(cc.v2(0, -110));
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).setCurrentTime(0);
this.node.getChildByName("hand").getComponent(n.default).destroyTouchEvent();
this.node.getChildByName("slime").getComponent(i.default).doShowAction();
this.node.getChildByName("hand").getComponent(i.default).doShowAction();
this.node.getChildByName("hand").getComponent(i.default).actionCallBack = function() {
this.node.getChildByName("hand").getComponent(n.default).registerTouchEvent();
this.node.getChildByName("finger").active = !0;
}.bind(this);
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./HandTouchEventGL": "HandTouchEventGL"
} ],
RubControllerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "219fagHQvVN+o7NRjczy9m5", "RubControllerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./HandTouchEventMS"), i = e("../common/common/Script/compoent/MoveInMS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.init = function() {
this.node.getChildByName("finger").active = !1;
this.node.getChildByName("slime").stopAllActions();
this.node.getChildByName("slime").setScale(1);
this.node.getChildByName("slime").setPosition(cc.v2(0, 0));
this.node.getChildByName("slime").opacity = 0;
this.node.getChildByName("hand").opacity = 0;
this.node.getChildByName("hand").stopAllActions();
this.node.getChildByName("hand").setPosition(cc.v2(0, -110));
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(cc.Animation).setCurrentTime(0);
this.node.getChildByName("hand").getComponent(n.default).destroyTouchEvent();
this.node.getChildByName("slime").getComponent(i.default).doShowAction();
this.node.getChildByName("hand").getComponent(i.default).doShowAction();
this.node.getChildByName("hand").getComponent(i.default).actionCallBack = function() {
this.node.getChildByName("hand").getComponent(n.default).registerTouchEvent();
this.node.getChildByName("finger").active = !0;
}.bind(this);
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./HandTouchEventMS": "HandTouchEventMS"
} ],
SavePhotoMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e45b1w+pjdBMoWY3+x4wf8X", "SavePhotoMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.btn = null;
t.photoNode = null;
t.filePath = "";
t.imagetexture = null;
return t;
}
t.prototype.start = function() {
var e = this;
cc.loader.loadRes("sound/button_camera", cc.AudioClip, function(e, t) {
if (!e) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.audioEngine.playEffect(t, !1);
}
});
var t = this.node.getChildByName("photo_mask");
n.CocosHelper.captureNode(cc.Canvas.instance.node).then(function(o) {
if (null != o) {
e.imagetexture = o;
var n = new cc.SpriteFrame();
n.setTexture(o);
e.photoNode = new cc.Node();
e.photoNode.addComponent(cc.Sprite).spriteFrame = n;
var i = e.photoNode.getContentSize(), c = e.node.width, a = e.node.height;
a < i.height && e.photoNode.setScale(a / i.height);
c < i.width && e.photoNode.setScale(c / i.width);
console.log(c);
console.log(i.width);
console.log(c / i.width);
t.addChild(e.photoNode);
cc.log(e.photoNode);
var s = o.readPixels(), r = o.width, l = o.height, d = Date.parse(new Date().toString());
e.filePath = jsb.fileUtils.getWritablePath() + d + ".png";
jsb.saveImageData(s, r, l, e.filePath) || (e.filePath = "");
}
});
};
t.prototype.touchDown = function(e) {
cc.audioEngine.playEffect(this.btn, !1);
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
if (null != this.imagetexture) if ("" != this.filePath) jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var o = this.node.getChildByName("popup_board");
o.active = !0;
o.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
o.active = !1;
t.getComponent(cc.Button).interactable = !0;
}.bind(this))));
o.getChildByName("label").getComponent(cc.Label).string = e ? "Photo downloaded successfully, please check in the album!" : "Picture download failed. Please check whether access to the album is open or not!";
}.bind(this)); else {
t.getComponent(cc.Button).interactable = !0;
console.log("download failed!");
} else t.getComponent(cc.Button).interactable = !0;
};
t.prototype.touchShare = function(e) {
cc.audioEngine.playEffect(this.btn, !1);
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
var o = this;
if ("" != this.filePath) {
jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("打开邮箱成功与否 " + e);
if (!e) {
console.log("打开邮箱失败");
var t = o.node.getChildByName("popup_tips");
t.active = !0;
t.scale = 0;
t.runAction(cc.scaleTo(.25, 1));
}
});
t.getComponent(cc.Button).interactable = !0;
} else {
console.log("download failed!");
t.getComponent(cc.Button).interactable = !0;
}
};
t.prototype.touchHide = function() {
cc.audioEngine.playEffect(this.btn, !1);
this.node.getChildByName("popup_tips").active = !1;
};
t.prototype.touchClose = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
this.node.removeFromParent();
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "btn", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS"
} ],
ScaleRootAdapterCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "45713LFgjNNRK2lJaIlI6GC", "ScaleRootAdapterCB");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1431Qom4pKPJyPMKM31OA1", "ScaleRootAdapterCE");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2213LFgjNNRK2lJaIlI6GC", "ScaleRootAdapterCS");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2131Qom4pKPJyPMKM31OA1", "ScaleRootAdapterFS");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1931Qom4pKPJyPMKM31OA1", "ScaleRootAdapterGL");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bbcad+X9fhNUruQKtQaGjuP", "ScaleRootAdapterGS");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1113LFgjNNRK2lJaIlI6GC", "ScaleRootAdapterHC");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "294c9G7z8hHtL87JnnTIebq", "ScaleRootAdapterMS");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7731Qom4pKPJyPMKM31OA1", "ScaleRootAdapterRP");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1213LFgjNNRK2lJaIlI6GC", "ScaleRootAdapterRS");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapterSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1313LFgjNNRK2lJaIlI6GC", "ScaleRootAdapterSD");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapter_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5b907LT8xVL4rzP91xpCYh2", "ScaleRootAdapter_my");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
ScaleRootAdapter: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "59031Qom4pKPJyPMKM31OA1", "ScaleRootAdapter");
cc.Class({
extends: cc.Component,
properties: {},
setUp: function() {
var e = cc.view.getFrameSize(), t = cc.Canvas.instance.designResolution, o = e.width / t.width, n = e.height / t.height, i = 1;
o > n ? i = n / o : n > o && (i = o / n);
this.node.scaleX = i;
this.node.scaleY = i;
},
start: function() {
this.setUp();
},
lateUpdate: function() {
0;
}
});
cc._RF.pop();
}, {} ],
SceneControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "30e09OxoYFNTo3pelgIlXHh", "SceneControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._backStack = [];
return t;
}
o = t;
t.prototype.onLoad = function() {
cc.game.addPersistRootNode(this.node);
this.node.getComponent(o).startTargetScene("make");
};
t.prototype.pushScene = function(e) {
if (e != this._backStack[this._backStack.length - 1]) {
this._backStack.push(e);
var t = cc.find("mask");
cc.director.preloadScene(e);
t.runAction(cc.sequence(cc.fadeTo(1, 200), cc.callFunc(function() {
cc.director.loadScene(e);
cc.find("mask").runAction(cc.fadeTo(1, 0));
}.bind(this), this)));
}
};
t.prototype.startTargetScene = function(e) {
this._backStack.push(e);
};
t.prototype.popScene = function() {
if (this._backStack.length > 1) {
var e = this._backStack.pop();
e = this._backStack.pop();
this.pushScene(e);
} else cc.error("已经回到第一个场景");
};
t.prototype.popToRootScene = function() {
if (!(this._backStack.length < 1)) {
for (;this._backStack.length > 1; ) this._backStack.pop();
var e = this._backStack.pop();
this.pushScene(e);
}
};
t.prototype.popTo = function(e) {
if (!(this._backStack.length < 1)) {
var t = !1;
do {
this._backStack.pop() == e && (t = !0);
} while (this._backStack.length > 0 && !t);
t && this.pushScene(e);
}
};
var o;
return t = o = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SceneControllerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1109OxoYFNTo3pelgIlXHh", "SceneControllerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._backStack = [];
return t;
}
o = t;
t.prototype.onLoad = function() {
cc.game.addPersistRootNode(this.node);
this.node.getComponent(o).startTargetScene("makeHC");
};
t.prototype.pushScene = function(e) {
if (e != this._backStack[this._backStack.length - 1]) {
this._backStack.push(e);
var t = cc.find("mask");
cc.director.preloadScene(e);
t.runAction(cc.sequence(cc.fadeTo(1, 200), cc.callFunc(function() {
cc.director.loadScene(e);
cc.find("mask").runAction(cc.fadeTo(1, 0));
}.bind(this), this)));
}
};
t.prototype.startTargetScene = function(e) {
this._backStack.push(e);
};
t.prototype.popScene = function() {
if (this._backStack.length > 1) {
var e = this._backStack.pop();
e = this._backStack.pop();
this.pushScene(e);
} else cc.error("已经回到第一个场景");
};
t.prototype.popToRootScene = function() {
if (!(this._backStack.length < 1)) {
for (;this._backStack.length > 1; ) this._backStack.pop();
var e = this._backStack.pop();
this.pushScene(e);
}
};
t.prototype.popTo = function(e) {
if (!(this._backStack.length < 1)) {
var t = !1;
do {
this._backStack.pop() == e && (t = !0);
} while (this._backStack.length > 0 && !t);
t && this.pushScene(e);
}
};
var o;
return t = o = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SetMixPicGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2fbf5pgmWVAsbqaDS4vAzAF", "SetMixPicGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../common/Script/CombinedComponent/MixComponentGS"), c = e("./DataConfigGS");
(function(e) {
e[e.left = 0] = "left";
e[e.right = 1] = "right";
e[e.up = 2] = "up";
e[e.down = 3] = "down";
})(n = o.Choose || (o.Choose = {}));
var a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixPaths = "";
t.choose = n.left;
t.backDuring = .4;
return t;
}
t.prototype.start = function() {
var e = this.node.getChildByName("bowl").getComponent(i.default), t = [];
if (0 == c.default.getInstance().getTag()) {
for (var o = 1; o < 6; ++o) t.push("glitterslime/bowl_blue_stir" + o);
cc.loader.loadResArray(t, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.setMixPahth(o);
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
} else if (1 == c.default.getInstance().getTag()) {
for (o = 1; o < 7; ++o) t.push("glitterslime/bowl_cyan_stir" + o);
cc.loader.loadResArray(t, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.setMixPahth(o);
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
} else if (2 == c.default.getInstance().getTag()) {
for (o = 1; o < 7; ++o) t.push("glitterslime/bowl_green_stir" + o);
cc.loader.loadResArray(t, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.setMixPahth(o);
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
} else if (3 == c.default.getInstance().getTag()) {
for (o = 1; o < 7; ++o) t.push("glitterslime/bowl_purple_stir" + o);
cc.loader.loadResArray(t, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.setMixPahth(o);
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
} else if (4 == c.default.getInstance().getTag()) {
for (o = 1; o < 7; ++o) t.push("glitterslime/bowl_red_stir" + o);
cc.loader.loadResArray(t, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.setMixPahth(o);
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
} else if (5 == c.default.getInstance().getTag()) {
for (o = 1; o < 7; ++o) t.push("glitterslime/bowl_yellow_stir" + o);
cc.loader.loadResArray(t, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
e.setMixPahth(o);
cc.loader.setAutoRelease(o, !0);
}
}.bind(this));
}
};
__decorate([ r() ], t.prototype, "mixPaths", void 0);
__decorate([ r({
type: cc.Enum(n)
}) ], t.prototype, "choose", void 0);
__decorate([ r({
tooltip: "效果时间",
visible: function() {
return this.choose == n.left;
}
}) ], t.prototype, "backDuring", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentGS": "MixComponentGS",
"./DataConfigGS": "DataConfigGS"
} ],
ShaderHelperCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1430LDfCBPRLICTgiHgOZt", "ShaderHelperCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderHelperCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b220auleM9GkaUgf+inMFoR", "ShaderHelperCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderHelperFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2130LDfCBPRLICTgiHgOZt", "ShaderHelperFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderHelperGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1930LDfCBPRLICTgiHgOZt", "ShaderHelperGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderHelperMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "49d0auleM9GkaUgf+inMFoR", "ShaderHelperMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderHelperRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7730LDfCBPRLICTgiHgOZt", "ShaderHelperRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "df530LDfCBPRLICTgiHgOZt", "ShaderHelper");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = n.executeInEditMode, s = function() {
function e() {
this.key = "";
this.value = 0;
}
__decorate([ c({
readonly: !0
}) ], e.prototype, "key", void 0);
__decorate([ c(cc.Float) ], e.prototype, "value", void 0);
return e = __decorate([ i("ShaderProperty") ], e);
}();
o.ShaderProperty = s;
var r = cc.Enum({}), l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._program = 0;
t._props = [];
t.material = null;
return t;
}
o = t;
Object.defineProperty(t.prototype, "program", {
get: function() {
return this._program;
},
set: function(e) {
if (this._program !== e) {
this._program = e;
this.applyEffect();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "props", {
get: function() {
return this._props;
},
set: function(e) {
this._props = e;
this.applyEffect();
},
enumerable: !0,
configurable: !0
});
t.prototype.start = function() {
this.applyEffect();
};
t.prototype.applyEffect = function() {
var e = this.node.getComponent(cc.Sprite);
if (e) {
var t = o.effectAssets[this.program], n = new cc.Material();
!!t.shaders.find(function(e) {
return e.defines.find(function(e) {
return "USE_TEXTURE" === e.name;
});
}) && n.define("USE_TEXTURE", !0);
n.effectAsset = t;
n.name = t.name;
e.setMaterial(0, n);
this.material = e.getMaterial(0);
this.setProperty(t);
this.node.emit("effect-changed", this, this.material);
}
};
t.prototype.setProperty = function(e) {
var t = this;
this._props.length && this._props.forEach(function(e) {
return e.key && t.material.setProperty(e.key, e.value || 0);
});
cc.Class.Attr.setClassAttr(o, "props", "visible", !!this._props.length);
};
t.prototype.next = function() {
this.program = (this.program + 1) % o.effectAssets.length;
};
t.prototype.prev = function() {
0 !== this.program ? this.program = (this.program - 1) % o.effectAssets.length : this.program = o.effectAssets.length - 1;
};
var o;
t.effectAssets = null;
__decorate([ c ], t.prototype, "_program", void 0);
__decorate([ c({
type: r
}) ], t.prototype, "program", null);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "_props", void 0);
__decorate([ c({
type: [ s ]
}) ], t.prototype, "props", null);
return t = o = __decorate([ i, a ], t);
}(cc.Component);
o.default = l;
cc.game.on(cc.game.EVENT_ENGINE_INITED, function() {
cc.dynamicAtlasManager.enabled = !1;
cc.loader.loadResDir("effect", cc.EffectAsset, function(e, t) {
l.effectAssets = t;
var o = l.effectAssets.map(function(e, t) {
return {
name: e._name,
value: t
};
});
cc.Class.Attr.setClassAttr(l, "program", "enumList", o);
});
});
cc._RF.pop();
}, {} ],
ShaderMouseCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2233CpyjtM9bwxXlpRQ676", "ShaderMouseCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executeInEditMode, a = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = this;
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.on("effect-changed", function(t, o) {
if (o.effect._properties.iResolution) {
var n = e.node.getBoundingBox().size;
o.effect.setProperty("iResolution", cc.v2(n.width, n.height));
e._material = o;
} else e._material = null;
}, this);
};
t.prototype.onDestroy = function() {
this.node.targetOff(this);
};
t.prototype._onTouchMove = function(e) {
this._material && this._material.effect.setProperty("mouse", e.getLocation());
};
return t = __decorate([ i, c ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderMouseMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6a433CpyjtM9bwxXlpRQ676", "ShaderMouseMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.executeInEditMode, a = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = this;
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.on("effect-changed", function(t, o) {
if (o.effect._properties.iResolution) {
var n = e.node.getBoundingBox().size;
o.effect.setProperty("iResolution", cc.v2(n.width, n.height));
e._material = o;
} else e._material = null;
}, this);
};
t.prototype.onDestroy = function() {
this.node.targetOff(this);
};
t.prototype._onTouchMove = function(e) {
this._material && this._material.effect.setProperty("mouse", e.getLocation());
};
return t = __decorate([ i, c ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderNameLabelCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b220ffQe75Ddod5dqnEgLHx", "ShaderNameLabelCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./ShaderHelperCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = i.executeInEditMode, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.shaderHelper = null;
return t;
}
t.prototype.start = function() {
var e = this;
this.shaderHelper && setTimeout(function() {
var t = n.default.effectAssets[e.shaderHelper.program];
e.getComponent(cc.Label).string = t.name;
}, 1e3);
};
__decorate([ a(n.default) ], t.prototype, "shaderHelper", void 0);
return t = __decorate([ c, s ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"./ShaderHelperCS": "ShaderHelperCS"
} ],
ShaderNameLabelMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4cd0ffQe75Ddod5dqnEgLHx", "ShaderNameLabelMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./ShaderHelperMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = i.executeInEditMode, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.shaderHelper = null;
return t;
}
t.prototype.start = function() {
var e = this;
this.shaderHelper && setTimeout(function() {
var t = n.default.effectAssets[e.shaderHelper.program];
e.getComponent(cc.Label).string = t.name;
}, 1e3);
};
__decorate([ a(n.default) ], t.prototype, "shaderHelper", void 0);
return t = __decorate([ c, s ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"./ShaderHelperMS": "ShaderHelperMS"
} ],
ShaderTimeCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1457JsFrRPcY1lr+MiJP52", "ShaderTimeCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderTimeCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b226cn/yXtO664c25gnwSdk", "ShaderTimeCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderTimeFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2157JsFrRPcY1lr+MiJP52", "ShaderTimeFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderTimeGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1957JsFrRPcY1lr+MiJP52", "ShaderTimeGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderTimeMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5866cn/yXtO664c25gnwSdk", "ShaderTimeMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderTimeRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7757JsFrRPcY1lr+MiJP52", "ShaderTimeRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
ShaderTime: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "30c57JsFrRPcY1lr+MiJP52", "ShaderTime");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._max = 65535;
t.step = .01;
t._start = 0;
return t;
}
Object.defineProperty(t.prototype, "max", {
get: function() {
return this._max;
},
set: function(e) {
this._max = e;
},
enumerable: !0,
configurable: !0
});
t.prototype.update = function(e) {
this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];
this.node.active && this._material && this._material.effect._properties.time && this._setShaderTime(e);
};
t.prototype._setShaderTime = function(e) {
var t = this._start;
t > this.max && (t = 0);
t += this.step;
this._material.effect.setProperty("time", t);
this._start = t;
};
__decorate([ c ], t.prototype, "_max", void 0);
__decorate([ c ], t.prototype, "step", void 0);
__decorate([ c ], t.prototype, "max", null);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
SlapControllerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1950aC9ARMKL6BovgwhZUY", "SlapControllerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneGL"), i = e("../common/Script/codebase/utils/CocosHelperGL"), c = e("./TipManagerGL"), a = e("../common/Script/compoent/MoveInGL"), s = e("./DataConfigGL"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("btns").children.forEach(function(e) {
"slap" == e.name ? e.getChildByName("yes").active = !0 : e.getChildByName("yes").active = !1;
});
this.init();
};
t.prototype.init = function() {
this.node.getChildByName("slime").getComponent(a.default).actionCallBack = function() {
cc.log(this.node.getChildByName("slime").position);
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
s.default.getInstance().setSlap(!1);
if (!(s.default.getInstance().getDrag() || s.default.getInstance().getClick() || s.default.getInstance().getPlay() || s.default.getInstance().getSlap())) {
i.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
}
};
t.prototype.onTouchStart = function(e) {
this.node.getChildByName("tipClick").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = cc.find("slime/slime", this.node).convertToNodeSpaceAR(t[0].getStartLocation()), i = cc.find("slime/slime", this.node).getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(n, i.points)) {
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.touchNum % 3 == 0 && c.default.getInstance().jumpTips();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, o), cc.callFunc(function() {
this.node.getChildByName("slime").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
this.node.getChildByName("slime").getComponent(cc.AudioSource).play();
var e = cc.instantiate(cc.find("slime/slime/hand_shadow", this.node));
e.active = !0;
e.name = "shadow";
e.parent = this.node.getChildByName("slime").getChildByName("slime");
e.setPosition(n);
e.runAction(cc.fadeTo(4, 0));
}.bind(this)), cc.moveTo(.5, cc.v2(0, -400)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("slime").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("slime").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.enterNextScence = function() {
s.default.getInstance().setClick(!0);
s.default.getInstance().setDrag(!0);
s.default.getInstance().setSlap(!0);
s.default.getInstance().setPlay(!0);
n.default.changeScene("packSlimeGL");
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneGL": "TransitionSceneGL",
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL",
"../common/Script/compoent/MoveInGL": "MoveInGL",
"./DataConfigGL": "DataConfigGL",
"./TipManagerGL": "TipManagerGL"
} ],
SlapControllerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0f850aC9ARMKL6BovgwhZUY", "SlapControllerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/compoent/MoveInMS"), i = e("./TipManagerMS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
t.touchNum = 0;
return t;
}
t.prototype.onLoad = function() {
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.init();
}.bind(this))));
};
t.prototype.init = function() {
this.destroyTouchEvent();
this.touchNum = 0;
this.node.getChildByName("slime").stopAllActions();
this.node.getChildByName("slime").setScale(1);
this.node.getChildByName("slime").setPosition(cc.v2(0, 0));
this.node.getChildByName("slime").opacity = 0;
this.node.getChildByName("slime").getComponent(n.default).enabled = !0;
this.node.getChildByName("slime").getComponent(n.default).doShowAction();
this.node.getChildByName("tipClick").active = !1;
cc.find("slime/slime", this.node).children.forEach(function(e) {
"shadow" == e.name && e.destroy();
});
this.node.getChildByName("slime").getComponent(n.default).actionCallBack = function() {
cc.log(this.node.getChildByName("slime").position);
this.registerTouchEvent();
this.node.getChildByName("tipClick").active = !0;
}.bind(this);
};
t.prototype.onTouchStart = function(e) {
this.node.getChildByName("tipClick").active = !1;
var t = e.getTouches(), o = this.node.convertToNodeSpaceAR(t[0].getStartLocation()), n = cc.find("slime/slime", this.node).convertToNodeSpaceAR(t[0].getStartLocation()), c = cc.find("slime/slime", this.node).getComponent(cc.PolygonCollider);
if (cc.Intersection.pointInPolygon(n, c.points)) {
this.touchNum = this.touchNum + 1;
this.destroyTouchEvent();
this.touchNum % 3 == 0 && i.default.getInstance().jumpTips();
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, o), cc.callFunc(function() {
this.node.getChildByName("slime").runAction(cc.sequence(cc.scaleTo(.1, 1.05, .95), cc.scaleTo(.1, .95, 1.05), cc.scaleTo(.1, 1.02, .98), cc.scaleTo(.1, .98, 1.02), cc.scaleTo(.1, 1, 1)));
this.node.getChildByName("slime").getComponent(cc.AudioSource).play();
var e = cc.instantiate(cc.find("slime/slime/hand_shadow", this.node));
e.active = !0;
e.name = "shadow";
e.parent = this.node.getChildByName("slime").getChildByName("slime");
e.setPosition(n);
e.runAction(cc.fadeTo(4, 0));
}.bind(this)), cc.moveTo(.5, cc.v2(0, -400)), cc.callFunc(function() {
this.registerTouchEvent();
}.bind(this))));
}
};
t.prototype.destroyTouchEvent = function() {
this.node.getChildByName("slime").off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
t.prototype.registerTouchEvent = function() {
this.node.getChildByName("slime").on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./TipManagerMS": "TipManagerMS"
} ],
SlimeSprinkleCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "44830lorMNEzqeGtiuXf+oa", "SlimeSprinkleCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t._spinkles = [];
t._sprinkleContainer = null;
t._moveBone = null;
t._slot = null;
t._sprinklePath = null;
return t;
}
t.prototype.start = function() {};
t.prototype.onAdd = function() {
this.startChanger();
};
t.prototype.startChanger = function() {
this.schedule(function() {
this.changPos(0);
}.bind(this), .02);
};
t.prototype.changPos = function(e) {
var t = this._moveBone.offset.x;
console.log(this._moveBone.offset.x);
var o = Math.abs(t);
console.log(o);
var n = .5 * this._slotSize.width * this._scaleX;
if (o > 40) {
o -= 1 - this._moveBone.offset.scaleX;
this._sprinkleContainer.scaleX = (n + o) / (.5 * this._slotSize.width);
this._sprinkleContainer.scaleY = this._moveBone.offset.scaleY;
} else {
this._sprinkleContainer.scaleX = (n + o) * this._moveBone.offset.scaleX / (.5 * this._slotSize.width);
this._sprinkleContainer.scaleY = this._moveBone.offset.scaleY;
}
for (var i = 0, c = this._spinkles; i < c.length; i++) {
var a = c[i];
a.setScale(1 / a.getParent().scaleX, 1 / a.getParent().scaleY);
}
};
t.prototype.createContainer = function() {
console.log("111111");
if (null == this._sprinkleContainer) {
console.log("66666");
this._slotPos = cc.v2(0, -0);
console.log("77777");
this._scaleX = 1;
console.log("22222");
this._slotSize = cc.size(300, 300);
console.log("33333");
this._sprinkleContainer = new cc.Node();
this._sprinkleContainer.setPosition(this._slotPos);
this._sprinkleContainer.setContentSize(this._slotSize);
this._sprinkleContainer.setScale(this._scaleX, 1);
this.node.addChild(this._sprinkleContainer);
}
console.log("44444");
};
t.prototype.setMoveBone = function(e) {
this._moveBone = e;
};
t.prototype.setSlotBoneslot = function(e) {
this._slot = e;
};
t.prototype.setSprinklePath = function(e) {
console.log("setSprinklePath" + e.length);
this._sprinklePath = e;
};
t.prototype.addSprinkle = function(e) {
console.log("addSprinkle" + e.length);
for (var t = function(e) {
var t = new cc.Node(), n = o._sprinklePath[Math.floor(Math.random() * o._sprinklePath.length)];
console.log(n);
cc.loader.loadRes(n, cc.SpriteFrame, function(e, o) {
cc.loader.setAutoReleaseRecursively(o, !0);
t.addComponent(cc.Sprite).spriteFrame = o;
});
t.position = e;
console.log("this._sprinkleContainer.addChild");
o._sprinkleContainer.addChild(t, .6 * Math.random());
o._spinkles.push(t);
}, o = this, n = 0, i = e; n < i.length; n++) {
t(i[n]);
}
};
__decorate([ c(cc.Label) ], t.prototype, "label", void 0);
__decorate([ c ], t.prototype, "text", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
SlimeTouchEventCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2ecd7DTCt9LmZqfP+w1Y72x", "SlimeTouchEventCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.firstPlay = !0;
return t;
}
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.find("Canvas/arrow_top").active = !1;
cc.find("Canvas/arrow_bottom").active = !1;
this.node.getComponent(cc.AudioSource).play();
if (this.firstPlay) {
if (this.node.getComponent(cc.Animation).getAnimationState("play0").isPaused) {
this.node.getComponent(cc.Animation).resume();
cc.find("Canvas/progress").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("play0");
cc.find("Canvas/progress").getComponent(cc.Animation).play("grow0");
}
} else {
if (this.node.getComponent(cc.Animation).getAnimationState("play1").isPaused) {
this.node.getComponent(cc.Animation).resume();
cc.find("Canvas/progress").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("play1");
cc.find("Canvas/progress").getComponent(cc.Animation).play("grow1");
}
}
};
t.prototype.onTouchMove = function(e) {};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.AudioSource).stop();
this.node.getComponent(cc.Animation).pause();
cc.find("Canvas/progress").getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SlimeTouchEventCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2268vdNSJEGq1JFpHlbHlN", "SlimeTouchEventCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
cc.find("Canvas/hint").active = !1;
var t = this.node.getComponent(cc.Animation).getAnimationState("coilSlime");
t.isPlaying && this.node.getComponent(cc.Animation).pause();
console.log(t.isPaused);
t.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("coilSlime");
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/hint").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SlimeTouchEventFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2168vdNSJEGq1JFpHlbHlN", "SlimeTouchEventFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
cc.find("Canvas/hint").active = !1;
var t = this.node.getComponent(cc.Animation).getAnimationState("coilSlime");
t.isPlaying && this.node.getComponent(cc.Animation).pause();
console.log(t.isPaused);
t.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("coilSlime");
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/hint").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SlimeTouchEventGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1968vdNSJEGq1JFpHlbHlN", "SlimeTouchEventGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.firstPlay = !0;
return t;
}
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.find("Canvas/arrow_top").active = !1;
cc.find("Canvas/arrow_bottom").active = !1;
this.node.getComponent(cc.AudioSource).play();
if (this.firstPlay) {
if (this.node.getComponent(cc.Animation).getAnimationState("play0").isPaused) {
this.node.getComponent(cc.Animation).resume();
cc.find("Canvas/progress").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("play0");
cc.find("Canvas/progress").getComponent(cc.Animation).play("grow0");
}
} else {
if (this.node.getComponent(cc.Animation).getAnimationState("play1").isPaused) {
this.node.getComponent(cc.Animation).resume();
cc.find("Canvas/progress").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("play1");
cc.find("Canvas/progress").getComponent(cc.Animation).play("grow1");
}
}
};
t.prototype.onTouchMove = function(e) {};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.AudioSource).stop();
this.node.getComponent(cc.Animation).pause();
cc.find("Canvas/progress").getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SlimeTouchEventHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11d7DTCt9LmZqfP+w1Y72x", "SlimeTouchEventHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.firstPlay = !0;
return t;
}
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {
cc.find("Canvas/arrow_top").active = !1;
cc.find("Canvas/arrow_bottom").active = !1;
this.node.getComponent(cc.AudioSource).play();
if (this.firstPlay) {
if (this.node.getComponent(cc.Animation).getAnimationState("play0").isPaused) {
this.node.getComponent(cc.Animation).resume();
cc.find("Canvas/progress").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("play0");
cc.find("Canvas/progress").getComponent(cc.Animation).play("grow0");
}
} else {
if (this.node.getComponent(cc.Animation).getAnimationState("play1").isPaused) {
this.node.getComponent(cc.Animation).resume();
cc.find("Canvas/progress").getComponent(cc.Animation).resume();
} else {
this.node.getComponent(cc.Animation).play("play1");
cc.find("Canvas/progress").getComponent(cc.Animation).play("grow1");
}
}
};
t.prototype.onTouchMove = function(e) {};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.AudioSource).stop();
this.node.getComponent(cc.Animation).pause();
cc.find("Canvas/progress").getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SlimeTouchEventMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c3f74MfnpNFPrPByEEgiuVa", "SlimeTouchEventMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.firstPlay = !0;
return t;
}
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function() {};
t.prototype.onTouchMove = function(e) {};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.AudioSource).stop();
this.node.getComponent(cc.Animation).pause();
cc.find("Canvas/playLayer5/progress").getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SlimeTouchEventRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1268vdNSJEGq1JFpHlbHlN", "SlimeTouchEventRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
cc.find("Canvas/hint").active = !1;
var t = this.node.getComponent(cc.Animation).getAnimationState("coilSlime");
t.isPlaying && this.node.getComponent(cc.Animation).pause();
console.log(t.isPaused);
t.isPaused ? this.node.getComponent(cc.Animation).resume() : this.node.getComponent(cc.Animation).play("coilSlime");
};
t.prototype.onTouchMove = function(e) {
cc.find("Canvas/hint").active = !1;
};
t.prototype.onTouchEnd = function() {
this._touchEnd();
};
t.prototype.onTouchCancle = function() {
this._touchEnd();
};
t.prototype._touchEnd = function() {
this.node.getComponent(cc.Animation).pause();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SplitControllerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1266q+CmBBFJIalbPwCcIe", "SplitControllerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperRS"), i = e("./DragonCompoentRS"), c = e("../common/Script/MoveInRS"), a = e("./HandTouchEventRS"), s = e("../common/Script/codebase/TransitionSceneRS"), r = e("./TipManagerRS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.pullFinish = !1;
t.initLeftPos = null;
t.initRightPos = null;
t.isFirst = null;
t.isFirstSplit = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.onLoad = function() {
this.isFirst = !0;
this.node.getChildByName("hand").getComponent(c.default).actionCallBack = function() {
this.node.getChildByName("hand").getComponent(a.default).init(this.node.getChildByName("slime"));
this.node.getChildByName("finger").active = !0;
}.bind(this);
this.isFirstSplit = !0;
};
t.prototype.mixFinish = function() {
r.default.getInstance().jumpTips();
this.node.getChildByName("hand").getComponent(cc.Animation).stop();
this.node.getChildByName("hand").getComponent(cc.AudioSource).stop();
this.showDragon();
};
t.prototype.showDragon = function() {
cc.find("Canvas/slime").active = !1;
cc.find("Canvas/slime1").active = !1;
cc.find("Canvas/hand").active = !1;
cc.find("Canvas/left_hand0").active = !0;
cc.find("Canvas/left_hand1").active = !0;
cc.find("Canvas/right_hand0").active = !0;
cc.find("Canvas/right_hand1").active = !0;
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
if (this.isFirst) {
cc.find("Canvas/arrow_right0").active = !0;
cc.find("Canvas/arrow_left0").active = !0;
} else cc.find("Canvas/arrow").active = !0;
this.dynamicCreate();
};
t.prototype.showSlime = function() {
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/slime1").active = !0;
cc.find("Canvas/hand").active = !0;
cc.find("Canvas/hand").getComponent(a.default).init(cc.find("Canvas/slime1"));
cc.find("Canvas/dragon").active = !1;
cc.find("Canvas/left_hand0").active = !1;
cc.find("Canvas/left_hand1").active = !1;
cc.find("Canvas/right_hand0").active = !1;
cc.find("Canvas/right_hand1").active = !1;
cc.find("Canvas/arrow_right0").active = !1;
cc.find("Canvas/arrow_left0").active = !1;
};
t.prototype.dynamicCreate = function() {
if (this.isFirst) {
n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").active = !0;
this.addHandCm();
this.isFirst = !1;
} else {
n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon1").active = !0;
this.addHandCm1();
}
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature());
this.initLeftPos = n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0").getPosition();
this.initRightPos = n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0").getPosition();
for (var c = 0; c < e.length; c++) {
var a = e[c], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(i.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 2; h <= 2; h++) {
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
if (!this.pullFinish) {
var n = cc.find("Canvas/left_hand0").getPosition(), i = cc.find("Canvas/right_hand0").getPosition();
console.log(Math.abs(n.x - this.initLeftPos.x));
console.log(Math.abs(i.x - this.initRightPos.x));
var c = Math.abs(n.x - this.initLeftPos.x) > 10, a = Math.abs(i.x - this.initRightPos.x) > 10;
c && (cc.find("Canvas/arrow_left0").active = !1);
a && (cc.find("Canvas/arrow_right0").active = !1);
}
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
}.bind(this));
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
var n = cc.find("Canvas/left_hand0").getPosition(), c = cc.find("Canvas/right_hand0").getPosition(), a = Math.abs(n.x - this.initLeftPos.x) < 2, s = Math.abs(c.x - this.initRightPos.x) < 2;
if (this.pullFinish) if (a && s) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
this.pullFinish = !1;
this.showSlime();
} else if (a && !s) {
cc.find("Canvas/arrow_right").active = !0;
cc.find("Canvas/arrow_left").active = !1;
} else if (!a && s) {
cc.find("Canvas/arrow_left").active = !0;
cc.find("Canvas/arrow_right").active = !1;
} else if (!a && !s) {
cc.find("Canvas/arrow_left").active = !0;
cc.find("Canvas/arrow_right").active = !0;
}
cc.find("Canvas/right_hand0").getComponent(i.default).getEndPos();
g.hideParticle();
}.bind(this));
this.startAction();
};
t.prototype.addHandCm1 = function() {
var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon1"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature());
this.initLeftPos = n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0").getPosition();
n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1").active = !1;
this.node.getChildByName("handRight").active = !0;
for (var c = 0; c < e.length; c++) {
var a = e[c], r = n.CocosHelper.findNode(cc.Canvas.instance.node, a), l = r.getComponent(i.default), d = r.getPosition(), u = d.add(cc.v2());
u.x = "left_hand0" == a ? r.getParent().convertToNodeSpaceAR(cc.v2(0, 0)).x : d.x;
l.setStartPos(d);
l.setEndPos(u);
var p = "left_hand0" == a ? "slimel0" : "slimer0", h = o.getBone(p);
l.setMoveBone(h);
}
if (this.isFirstSplit) {
o.getSlot("motion1_slime").displayIndex = 0;
o.getSlot("motion2_slime").displayIndex = -1;
}
var f = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
console.log(f._loopSound);
cc.audioEngine.stopEffect(f._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, i) {
var c = cc.find("Canvas/left_hand0").getPosition(), a = Math.abs(c.x - this.initLeftPos.x) > 100;
console.log(Math.abs(c.x - this.initLeftPos.x));
if (a) {
cc.find("Canvas").off("Pulling");
cc.find("Canvas/arrow").active = !1;
f.hideParticle();
if (this.isFirstSplit) {
o.getSlot("motion1_slime").displayIndex = -1;
o.getSlot("motion2_slime").displayIndex = 0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1").active = !1;
this.node.getChildByName("handLeft").active = !0;
this.node.getChildByName("slime2").active = !0;
this.node.getChildByName("handLeft").setPosition(this.node.getChildByName("slime2").getPosition());
this.node.getChildByName("handLeft").runAction(cc.moveBy(.5, cc.v2(-100, 0)));
this.node.getChildByName("slime2").runAction(cc.moveBy(.5, cc.v2(-100, 0)));
this.node.getChildByName("handRight").runAction(cc.moveBy(.5, cc.v2(250, 0)));
this.node.getChildByName("dragon1").runAction(cc.sequence(cc.moveBy(.5, cc.v2(250, 0)), cc.callFunc(function() {
cc.find("Canvas/slime2/motion4_slime").active = !0;
this.node.getChildByName("handLeft").active = !1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0");
e.active = !0;
var t = e.x + 450;
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1").active = !0;
e.setPosition(cc.v2(t, e.y));
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1").setPosition(cc.v2(t, e.y));
this.isFirstSplit = !1;
this.addHandCm1();
}.bind(this))));
} else {
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1").active = !1;
this.node.getChildByName("handLeft").active = !0;
this.node.getChildByName("slime3").active = !0;
this.node.getChildByName("handLeft").setPosition(this.node.getChildByName("slime3").getPosition());
this.node.getChildByName("slime4").active = !0;
this.node.getChildByName("handRight").setPosition(this.node.getChildByName("slime4").getPosition());
this.node.getChildByName("slime3").runAction(cc.moveBy(.5, cc.v2(-50, 0)));
this.node.getChildByName("handLeft").runAction(cc.sequence(cc.moveBy(.5, cc.v2(-50, 0)), cc.callFunc(function() {
cc.find("Canvas/slime3/motion4_slime").active = !0;
cc.find("Canvas/slime4/motion4_slime").active = !0;
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("handLeft").runAction(cc.moveBy(.5, cc.v2(900, 0)));
this.node.getChildByName("handRight").runAction(cc.moveBy(.5, cc.v2(900, 0)));
this.node.getChildByName("slime3").runAction(cc.moveBy(.5, cc.v2(900, 0)));
this.node.getChildByName("slime4").runAction(cc.moveBy(.5, cc.v2(900, 0)));
this.node.getChildByName("slime2").runAction(cc.moveTo(.5, cc.v2(0, 0)));
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
s.default.changeScene("dyeSlimeRS");
}.bind(this))));
this.node.getChildByName("dragon1").active = !1;
}
}
if (-1 == f._loopSound) {
f._loopSound = cc.audioEngine.playEffect(f.lachang, !1);
setTimeout(function() {
f._loopSound = -1;
}, 1500);
}
}.bind(this));
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(f.actionNode);
cc.find("Canvas/left_hand0").getPosition(), cc.find("Canvas/right_hand0").getPosition();
cc.find("Canvas/right_hand0").getComponent(i.default).getEndPos();
f.hideParticle();
}.bind(this));
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(3 * (t + 1)), cc.callFunc(function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (2 != t) {
var o = e.getSlot("motion" + t + "_slime"), i = e.getSlot("motion" + (t + 1) + "_slime");
console.log("motion2_slime" + (t + 1));
i.displayIndex = 0;
console.log("motion1_slime" + t);
o.displayIndex = -1;
} else {
cc.find("Canvas/arrow_right0").active = !1;
cc.find("Canvas/arrow_left0").active = !1;
this.pullFinish = !0;
}
}.bind(o))));
}, o = this, i = 1; i < 3; i++) t(i);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.backLastScence = function() {
s.default.changeScene("addMaterialRS");
};
__decorate([ u({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../common/Script/MoveInRS": "MoveInRS",
"../common/Script/codebase/TransitionSceneRS": "TransitionSceneRS",
"../common/Script/codebase/utils/CocosHelperRS": "CocosHelperRS",
"./DragonCompoentRS": "DragonCompoentRS",
"./HandTouchEventRS": "HandTouchEventRS",
"./TipManagerRS": "TipManagerRS"
} ],
SpoonTouchEventCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22e8fnOtdKAbzfVHE81AEo", "SpoonTouchEventCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentCS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixNode = null;
return t;
}
t.prototype.spoonTouchStart = function() {
this.node.parent.getChildByName("tipRotate").active = !1;
this.node.getChildByName("spoon0").active = !1;
this.mixNode.getComponent(n.default).startMix();
var e = cc.scaleTo(.5, 1.05, .95), t = cc.scaleTo(.5, .95, 1.05);
this.mixNode.runAction(cc.repeatForever(cc.sequence(e, t)));
this.mixNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.spoonTouchEnd = function() {
this.node.getChildByName("spoon0").active = !0;
this.mixNode.getComponent(n.default).stopMix();
this.mixNode.stopAllActions();
};
__decorate([ a(cc.Node) ], t.prototype, "mixNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentCS": "MixComponentCS"
} ],
SpoonTouchEventFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21e8fnOtdKAbzfVHE81AEo", "SpoonTouchEventFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/CombinedComponent/MixComponentFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixNode = null;
return t;
}
t.prototype.spoonTouchStart = function() {
this.node.parent.getChildByName("tipRotate").active = !1;
this.node.getChildByName("spoon0").active = !1;
this.mixNode.getComponent(n.default).startMix();
var e = cc.scaleTo(.5, 1.05, .95), t = cc.scaleTo(.5, .95, 1.05);
this.mixNode.runAction(cc.repeatForever(cc.sequence(e, t)));
this.mixNode.runAction(cc.repeatForever(cc.rotateBy(20, 360)));
};
t.prototype.spoonTouchEnd = function() {
this.node.getChildByName("spoon0").active = !0;
this.mixNode.getComponent(n.default).stopMix();
this.mixNode.stopAllActions();
};
__decorate([ a(cc.Node) ], t.prototype, "mixNode", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentFS": "MixComponentFS"
} ],
SprinkleTouchEventRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77494GcKROa4uHjh08EsO+", "SprinkleTouchEventRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.sprinkleNode = null;
return t;
}
t.prototype.init = function(e) {
this.sprinkleNode = e;
this.registerTouchEvent();
};
t.prototype.registerTouchEvent = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.destroyTouchEvent = function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);
};
t.prototype.onTouchStart = function(e) {
cc.find("Canvas/tipClick").active = !1;
cc.find("Canvas/poop/decorate/glitter").active = !0;
this.node.getComponent(cc.AudioSource).play();
var t = e.getTouches()[0].getLocation();
if (this.node.getBoundingBoxToWorld().contains(t)) {
var o = cc.instantiate(this.sprinkleNode);
o.parent = this.node;
o.setPosition(cc.v2(0, 0));
o.height = this.node.height;
o.width = this.node.width;
o.children.forEach(function(e) {
var t = Math.random() * o.height - o.height / 2, n = Math.random() * o.width - o.width / 2;
e.setScale(.5 * Math.random() + .6);
e.setPosition(cc.v2(n, t));
var i = 30 * -Math.random() - 10;
e.runAction(cc.moveBy(1, cc.v2(0, i)));
});
}
};
t.prototype.onTouchMove = function(e) {};
t.prototype.onTouchEnd = function() {};
t.prototype.onTouchCancle = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
SpriteDragCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "76990jMdfdKLqhZrVxAECPV", "SpriteDragCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilCB"), c = e("./DragEventListenerCB"), a = e("../utils/NodeCompCB");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragCB"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompCB": "NodeCompCB",
"./DragEventListenerCB": "DragEventListenerCB",
"./DragUtilCB": "DragUtilCB"
} ],
SpriteDragCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14e2qzvQNOm57kCQf9YyHr", "SpriteDragCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilCE"), c = e("./DragEventListenerCE"), a = e("../utils/NodeCompCE");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = -this.node.angle);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getScreenToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = -this.moveNode.angle, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragCE"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompCE": "NodeCompCE",
"./DragEventListenerCE": "DragEventListenerCE",
"./DragUtilCE": "DragUtilCE"
} ],
SpriteDragCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2290jMdfdKLqhZrVxAECPV", "SpriteDragCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilCS"), c = e("./DragEventListenerCS"), a = e("../utils/NodeCompCS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragCS"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompCS": "NodeCompCS",
"./DragEventListenerCS": "DragEventListenerCS",
"./DragUtilCS": "DragUtilCS"
} ],
SpriteDragEventManagerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b5108P1XgJDJ7et8X1tmjJO", "SpriteDragEventManagerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompCB"), c = e("./DragUtilCB"), a = e("./DragEventListenerCB");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompCB": "NodeCompCB",
"./DragEventListenerCB": "DragEventListenerCB",
"./DragUtilCB": "DragUtilCB"
} ],
SpriteDragEventManagerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b146cIDKGVDOaIx+OwlOYgh", "SpriteDragEventManagerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompCE"), c = e("./DragUtilCE"), a = e("./DragEventListenerCE");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompCE": "NodeCompCE",
"./DragEventListenerCE": "DragEventListenerCE",
"./DragUtilCE": "DragUtilCE"
} ],
SpriteDragEventManagerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2208P1XgJDJ7et8X1tmjJO", "SpriteDragEventManagerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompCS"), c = e("./DragUtilCS"), a = e("./DragEventListenerCS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompCS": "NodeCompCS",
"./DragEventListenerCS": "DragEventListenerCS",
"./DragUtilCS": "DragUtilCS"
} ],
SpriteDragEventManagerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b216cIDKGVDOaIx+OwlOYgh", "SpriteDragEventManagerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompFS"), c = e("./DragUtilFS"), a = e("./DragEventListenerFS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompFS": "NodeCompFS",
"./DragEventListenerFS": "DragEventListenerFS",
"./DragUtilFS": "DragUtilFS"
} ],
SpriteDragEventManagerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b196cIDKGVDOaIx+OwlOYgh", "SpriteDragEventManagerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompGL"), c = e("./DragUtilGL"), a = e("./DragEventListenerGL");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompGL": "NodeCompGL",
"./DragEventListenerGL": "DragEventListenerGL",
"./DragUtilGL": "DragUtilGL"
} ],
SpriteDragEventManagerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bfb346R6ClF9a6Hcmc2NNj7", "SpriteDragEventManagerGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompGS"), c = e("./DragUtilGS"), a = e("./DragEventListenerGS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompGS": "NodeCompGS",
"./DragEventListenerGS": "DragEventListenerGS",
"./DragUtilGS": "DragUtilGS"
} ],
SpriteDragEventManagerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1108P1XgJDJ7et8X1tmjJO", "SpriteDragEventManagerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompHC"), c = e("./DragUtilHC"), a = e("./DragEventListenerHC");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompHC": "NodeCompHC",
"./DragEventListenerHC": "DragEventListenerHC",
"./DragUtilHC": "DragUtilHC"
} ],
SpriteDragEventManagerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "10f44hDMrxPjI6t/hCoOqNP", "SpriteDragEventManagerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompMS"), c = e("./DragUtilMS"), a = e("./DragEventListenerMS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompMS": "NodeCompMS",
"./DragEventListenerMS": "DragEventListenerMS",
"./DragUtilMS": "DragUtilMS"
} ],
SpriteDragEventManagerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b776cIDKGVDOaIx+OwlOYgh", "SpriteDragEventManagerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompRP"), c = e("./DragUtilRP"), a = e("./DragEventListenerRP");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompRP": "NodeCompRP",
"./DragEventListenerRP": "DragEventListenerRP",
"./DragUtilRP": "DragUtilRP"
} ],
SpriteDragEventManagerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1208P1XgJDJ7et8X1tmjJO", "SpriteDragEventManagerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompRS"), c = e("./DragUtilRS"), a = e("./DragEventListenerRS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompRS": "NodeCompRS",
"./DragEventListenerRS": "DragEventListenerRS",
"./DragUtilRS": "DragUtilRS"
} ],
SpriteDragEventManagerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1308P1XgJDJ7et8X1tmjJO", "SpriteDragEventManagerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeCompSD"), c = e("./DragUtilSD"), a = e("./DragEventListenerSD");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeCompSD": "NodeCompSD",
"./DragEventListenerSD": "DragEventListenerSD",
"./DragUtilSD": "DragUtilSD"
} ],
SpriteDragEventManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9686cIDKGVDOaIx+OwlOYgh", "SpriteDragEventManager");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("../utils/NodeComp"), c = e("./DragUtil"), a = e("./DragEventListener");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = (s.menu, 
s.executeInEditMode), h = s.requireComponent, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = c.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(c.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var o = this.node;
t.type = SpriteDrag.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
o.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return c.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (c.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (c.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(a.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (c.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(a.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), i = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(i.sub(a));
this.isMoveOut && c.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = i.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(i, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = i;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = i.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = i;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(SpriteDrag.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(SpriteDrag.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ a.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(c.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = __decorate([ r, d(1), u(), p(), h(i) ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../utils/NodeComp": "NodeComp",
"./DragEventListener": "DragEventListener",
"./DragUtil": "DragUtil"
} ],
SpriteDragFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21e2qzvQNOm57kCQf9YyHr", "SpriteDragFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilFS"), c = e("./DragEventListenerFS"), a = e("../utils/NodeCompFS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = -this.node.angle);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getScreenToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = -this.moveNode.angle, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragFS"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompFS": "NodeCompFS",
"./DragEventListenerFS": "DragEventListenerFS",
"./DragUtilFS": "DragUtilFS"
} ],
SpriteDragGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19e2qzvQNOm57kCQf9YyHr", "SpriteDragGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilGL"), c = e("./DragEventListenerGL"), a = e("../utils/NodeCompGL");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = -this.node.angle);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getScreenToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = -this.moveNode.angle, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragGL"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompGL": "NodeCompGL",
"./DragEventListenerGL": "DragEventListenerGL",
"./DragUtilGL": "DragUtilGL"
} ],
SpriteDragGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a12ffb/wGRJZIxWuJbo3Uzb", "SpriteDragGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilGS"), c = e("./DragEventListenerGS"), a = e("../utils/NodeCompGS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragGS"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompGS": "NodeCompGS",
"./DragEventListenerGS": "DragEventListenerGS",
"./DragUtilGS": "DragUtilGS"
} ],
SpriteDragHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1190jMdfdKLqhZrVxAECPV", "SpriteDragHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilHC"), c = e("./DragEventListenerHC"), a = e("../utils/NodeCompHC");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragHC"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompHC": "NodeCompHC",
"./DragEventListenerHC": "DragEventListenerHC",
"./DragUtilHC": "DragUtilHC"
} ],
SpriteDragMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1b7e26x1WJDpaWmf03OoDFR", "SpriteDragMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilMS"), c = e("./DragEventListenerMS"), a = e("../utils/NodeCompMS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null != this.dragScale && 0 != this.dragScale.x || (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) {
var o = t.getScreenToWorldPoint(e, void 0);
return cc.v2(o.x, o.y);
}
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
type: cc.Vec2,
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragMS"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompMS": "NodeCompMS",
"./DragEventListenerMS": "DragEventListenerMS",
"./DragUtilMS": "DragUtilMS"
} ],
SpriteDragRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77e2qzvQNOm57kCQf9YyHr", "SpriteDragRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilRP"), c = e("./DragEventListenerRP"), a = e("../utils/NodeCompRP");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = -this.node.angle);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getScreenToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = -this.moveNode.angle, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragRP"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompRP": "NodeCompRP",
"./DragEventListenerRP": "DragEventListenerRP",
"./DragUtilRP": "DragUtilRP"
} ],
SpriteDragRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1290jMdfdKLqhZrVxAECPV", "SpriteDragRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilRS"), c = e("./DragEventListenerRS"), a = e("../utils/NodeCompRS");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragRS"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompRS": "NodeCompRS",
"./DragEventListenerRS": "DragEventListenerRS",
"./DragUtilRS": "DragUtilRS"
} ],
SpriteDragSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1390jMdfdKLqhZrVxAECPV", "SpriteDragSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtilSD"), c = e("./DragEventListenerSD"), a = e("../utils/NodeCompSD");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = this.node.rotation);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = this.moveNode.rotation;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = this.moveNode.rotation, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.setRotation(i);
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDragSD"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeCompSD": "NodeCompSD",
"./DragEventListenerSD": "DragEventListenerSD",
"./DragUtilSD": "DragUtilSD"
} ],
SpriteDragSetGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "277f5ipex9H6bcCI5IzSO+V", "SpriteDragSetGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
if (this.node.getChildByName("bg")) {
var e = this.node.getChildByName("borax_fall");
e.getComponent(n.default).actionCallBack = function() {
e.getComponent(i.default).enabled = !0;
};
}
if (this.node.getChildByName("cup").getChildByName("kettle")) {
var t = this.node.getChildByName("cup").getChildByName("kettle");
t.getComponent(n.default).actionCallBack = function() {
t.getComponent(i.default).enabled = !0;
};
}
if (this.node.getChildByName("cup").getChildByName("spoon3")) {
var o = this.node.getChildByName("cup").getChildByName("spoon3");
o.getComponent(n.default).actionCallBack = function() {
o.getComponent(i.default).enabled = !0;
};
}
if (this.node.getChildByName("cup")) this.node.getChildByName("cup").getComponent(n.default);
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS"
} ],
SpriteDrag: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f39e2qzvQNOm57kCQf9YyHr", "SpriteDrag");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = e("./DragUtil"), c = e("./DragEventListener"), a = e("../utils/NodeComp");
(function(e) {
e[e.EndInTouchPos = 0] = "EndInTouchPos";
e[e.BackToStart = 1] = "BackToStart";
e[e.LimitInTarget = 2] = "LimitInTarget";
})(n = o.DragType || (o.DragType = {}));
var s = cc._decorator, r = s.ccclass, l = s.property, d = s.executionOrder, u = s.disallowMultiple, p = s.menu, h = s.executeInEditMode, f = s.requireComponent, g = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.eventTouchs = [];
t.targetCollider = [];
t.touch_collider = null;
t.moveNode = null;
t.self_collider = null;
t.isSwallowTouches = !0;
t.isDragOriginPoint = !1;
t.dragOffset = cc.Vec2.ZERO;
t.isDragToTop = !1;
t.dragScale = null;
t.dragRotate = null;
t.dragType = n.EndInTouchPos;
t.backDuring = .4;
t.backEasingType = i.TweenType.backOut;
t.isTouch = !1;
t.isDraging = !1;
t.isCanDrag = !0;
t.m_dragMoveDamp = 0;
t.backTween = null;
t._listener = null;
t._lisCancele = null;
t._moveDeta = cc.Vec2.ZERO;
t.isMoveOut = !1;
return t;
}
o = t;
t.prototype.initData = function() {
cc.director.getCollisionManager().enabled = !0;
if (null == this.touch_collider) {
var e = this.node.addComponent(cc.BoxCollider), t = this.node.getAnchorPoint(), o = this.node.getContentSize();
e.offset = new cc.Vec2((.5 - t.x) * o.width, (.5 - t.y) * o.height);
e.size = this.node.getContentSize();
this.touch_collider = e;
}
null == this.self_collider && (this.self_collider = this.touch_collider);
null == this.moveNode && (this.moveNode = this.node);
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
null == this.dragScale && (this.dragScale = this.m_originalScale);
null == this.dragRotate && (this.dragRotate = this.m_originalRotate);
this.backEasing = Object.keys(i.TweenType)[this.backEasingType];
};
t.prototype.cancle = function(e, t) {
var n = this.node;
t.type = o.OnApplicationFocus;
t.touch = e;
t.bubbles = !0;
n.dispatchEvent(t);
};
t.prototype.hitTest = function(e, t) {
if (null != t) {
if (null == this._listener) {
this._listener = t;
this._lisCancele = t.onTouchCancelled;
}
t.onTouchCancelled = this.cancle.bind(this);
}
return i.DragUtil.pointInCollide(this.getWordPos(e), this.touch_collider);
};
t.prototype.initDataInEDITOR = function() {
null == this.dragScale && (this.dragScale = new cc.Vec2(this.node.scaleX, this.node.scaleY));
null == this.dragRotate && (this.dragRotate = -this.node.angle);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getScreenToWorldPoint(e, void 0);
}
return e;
};
t.prototype.geOriginalPos = function() {
return this.m_originalPos;
};
t.prototype.saveOrignialTransfor = function() {
if (null != this.moveNode) {
this.m_originalPos = this.moveNode.position;
this.m_originalScale = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY);
this.m_originalRotate = -this.moveNode.angle;
this.m_originalSiblingIndex = this.moveNode.getSiblingIndex();
}
};
t.prototype.getInTargetIndex = function(e, t) {
void 0 === e && (e = cc.Vec2.ZERO);
void 0 === t && (t = cc.Vec2.ZERO);
for (var o = 0; o < this.targetCollider.length; o++) {
var n = this.targetCollider[o];
if (i.DragUtil.collideInCollie(this.self_collider, n, e, t)) return o;
}
return -1;
};
t.prototype.getOnTargetIndex = function() {
for (var e = 0; e < this.targetCollider.length; e++) {
var t = this.targetCollider[e];
if (i.DragUtil.collideOnCollie(this.self_collider, t)) return e;
}
return -1;
};
t.prototype.backToOriginal = function(e) {
var t = this;
if (null != this.moveNode) {
null != this.backTween ? this.backTween.stop() : this.backTween = new cc.Tween();
this.backTween.target(this.moveNode).to(this.backDuring, {
position: this.m_originalPos,
scaleX: this.m_originalScale.x,
scaleY: this.m_originalScale.y,
rotation: this.m_originalRotate
}, {
progress: null,
easing: this.backEasing
}).call(function() {
t.backTween = null;
t.isCanDrag = !0;
t.isDragToTop && null != t.moveNode && t.moveNode.setSiblingIndex(t.m_originalSiblingIndex);
if (null != t.eventTouchs) for (var o = 0, n = t.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchCancle, e, t)) break;
}
}).start();
}
};
t.prototype.onDragBegin = function(e) {
if (null != this.backTween) {
this.backTween.stop();
this.backTween = null;
}
this.m_dragMoveDamp = .3;
this.isDragToTop && this.moveNode.setSiblingIndex(500);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.DragBegin, e, this)) break;
}
};
t.prototype.onDrag = function(e) {
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.Draging, e, this)) break;
}
};
t.prototype.onTouchCancle = function(e) {
if (this.isDraging && this.dragType == n.BackToStart) this.backToOriginal(e); else {
this.isCanDrag = !0;
this.isDragToTop && this.isDraging && this.moveNode.setSiblingIndex(this.m_originalSiblingIndex);
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchCancle, e, this)) break;
}
}
};
t.prototype.onTouchEnd = function(e) {
this.isCanDrag = !0;
for (var t = 0, o = this.eventTouchs.slice().reverse(); t < o.length; t++) {
if (o[t].emit(c.DragEventType.TouchEnd, e, this)) break;
}
};
t.prototype.touchStart = function(e) {
if (this.isCanDrag) {
var t = this.getWordPos(e.getLocation());
if (i.DragUtil.pointInCollide(t, this.touch_collider)) {
this._moveDeta = cc.Vec2.ZERO;
this.isMoveOut = !1;
this.isDraging = !1;
this.isTouch = !0;
this.isCanDrag = !0;
if (this.isSwallowTouches) {
e.stopPropagation();
for (var o = 0, n = this.eventTouchs.slice().reverse(); o < n.length; o++) {
if (n[o].emit(c.DragEventType.TouchDown, e, this)) break;
}
}
}
}
};
t.prototype.touchMove = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isSwallowTouches && e.stopPropagation();
var t = this.getWordPos(e.getLocation()), o = this.getWordPos(e.getPreviousLocation()), c = this.moveNode.parent.convertToNodeSpaceAR(t), a = this.moveNode.parent.convertToNodeSpaceAR(o);
if (this.dragType == n.LimitInTarget) {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this._moveDeta.addSelf(c.sub(a));
this.isMoveOut && i.DragUtil.pointInCollide(t, this.touch_collider) && (this.m_dragOffset = c.sub(this.moveNode.position));
var s = this.moveNode.position.add(this.m_dragOffset), r = this.moveNode.position.add(this.m_dragOffset).lerp(c, this.m_dragMoveDamp);
if (-1 != this.getInTargetIndex(r.sub(s))) {
this._moveDeta = cc.Vec2.ZERO;
this.cacheMoveToPos = c;
this.isMoveOut = !1;
} else {
this.cacheMoveToPos = s;
this.isMoveOut = !0;
}
} else {
if (!this.isDraging) {
this.m_dragOffset = cc.Vec2.ZERO;
this.isDragOriginPoint ? this.m_dragOffset = this.dragOffset : this.m_dragOffset = c.sub(this.moveNode.position);
this.onDragBegin(e);
this.isDraging = !0;
}
this.cacheMoveToPos = c;
}
this.onDrag(e);
}
};
t.prototype.touchEnd = function(e) {
if (this.isTouch && this.isCanDrag && null != this.moveNode) {
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
switch (this.dragType) {
case n.BackToStart:
-1 == this.getOnTargetIndex() ? this.onTouchCancle(e) : this.onTouchEnd(e);
break;

case n.EndInTouchPos:
this.onTouchEnd(e);
break;

default:
this.onTouchEnd(e);
}
this.isDraging = !1;
}
};
t.prototype.touchCancel = function(e) {
if (this.isTouch && this.isCanDrag) {
cc.log(o.OnApplicationFocus);
this.isTouch = !1;
this.isSwallowTouches && e.stopPropagation();
this.onTouchCancle(e);
this.isDraging = !1;
}
};
t.prototype.disposeLis = function() {
if (null != this._listener && null != this._lisCancele) {
this._listener.onTouchCancelled = this._lisCancele;
this._listener = null;
this._lisCancele = null;
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onDisable = function() {
this.isTouch = !1;
this.disposeLis();
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.off(o.OnApplicationFocus, this.touchCancel, this);
};
t.prototype.onLoad = function() {
this.initData();
};
t.prototype.start = function() {
this.initData();
};
t.prototype.destroy = function() {
this.disposeLis();
return e.prototype.destroy.call(this);
};
t.prototype.onDestroy = function() {
this.disposeLis();
};
t.prototype.update = function(e) {
if (1 == this.isDraging && 1 == this.isTouch) {
this.m_dragMoveDamp < 1 && (this.m_dragMoveDamp += .01);
var t = this.moveNode.position.add(this.m_dragOffset).lerp(this.cacheMoveToPos, this.m_dragMoveDamp);
this.moveNode.setPosition(t.sub(this.m_dragOffset));
var o = new cc.Vec2(this.moveNode.scaleX, this.moveNode.scaleY).lerp(this.dragScale, this.m_dragMoveDamp);
this.moveNode.setScale(o.x, o.y);
var n = -this.moveNode.angle, i = cc.misc.lerp(n, this.dragRotate, this.m_dragMoveDamp);
this.moveNode.angle = -i;
}
};
var o;
t.OnApplicationFocus = "OnApplicationFocus";
__decorate([ l({
type: [ c.default ],
tooltip: "监听事件"
}) ], t.prototype, "eventTouchs", void 0);
__decorate([ l({
type: [ cc.Collider ],
tooltip: "拖动到的目标区域"
}) ], t.prototype, "targetCollider", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应TOUCH_START的范围,默认为结点自身大小,超过节点自身大小无用"
}) ], t.prototype, "touch_collider", void 0);
__decorate([ l({
type: cc.Node,
tooltip: "拖动的结点，默认为当前结点"
}) ], t.prototype, "moveNode", void 0);
__decorate([ l({
type: cc.Collider,
tooltip: "节点响应与目标区域\b碰撞的范围,默认touch_collider"
}) ], t.prototype, "self_collider", void 0);
__decorate([ l({}) ], t.prototype, "isSwallowTouches", void 0);
__decorate([ l({
tooltip: "在拖动时是否固定moveNode的原点"
}) ], t.prototype, "isDragOriginPoint", void 0);
__decorate([ l({
tooltip: "拖动时的偏移值",
visible: function() {
return this.isDragOriginPoint;
}
}) ], t.prototype, "dragOffset", void 0);
__decorate([ l({
tooltip: "拖动时是否显示到最上层"
}) ], t.prototype, "isDragToTop", void 0);
__decorate([ l({
tooltip: "拖动时的缩放,默认为节点当前scale"
}) ], t.prototype, "dragScale", void 0);
__decorate([ l({
tooltip: "拖动时的旋转,默认为节点当前Rotation"
}) ], t.prototype, "dragRotate", void 0);
__decorate([ l({
type: cc.Enum(n),
tooltip: "返回时效果"
}) ], t.prototype, "dragType", void 0);
__decorate([ l({
tooltip: "效果时间",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backDuring", void 0);
__decorate([ l({
type: cc.Enum(i.TweenType),
tooltip: "返回时Easing效果",
visible: function() {
return this.dragType == n.BackToStart;
}
}) ], t.prototype, "backEasingType", void 0);
return t = o = __decorate([ r, d(1), u(), p("common/SpriteDrag"), h(), f(a) ], t);
}(cc.Component);
o.default = g;
cc._RF.pop();
}, {
"../utils/NodeComp": "NodeComp",
"./DragEventListener": "DragEventListener",
"./DragUtil": "DragUtil"
} ],
StickControllerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cf8eb2AUGtMka9N1j5lRbQD", "StickControllerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInCB"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragCB"), c = e("./HandTouchEventCB"), a = e("../common/Script/codebase/utils/CocosHelperCB"), s = e("./DragonCompoentCB"), r = e("./TipManagerCB"), l = e("../common/Script/codebase/TransitionSceneCB"), d = e("./DataConfigCB"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.pullFinish = !1;
t.initLeftPos = null;
t.initRightPos = null;
t.color = null;
t.foam = null;
t.index = null;
t.isFirst = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.onLoad = function() {
this.node.getChildByName("dragon").position = cc.v2(1e4, 1e4);
this.node.getChildByName("foam").getComponent(n.default).actionCallBack = function() {
this.node.getChildByName("foam").getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
this.node.getChildByName("btn_back").active = !0;
}.bind(this);
cc.find("box/slime", this.node).getComponent(n.default).actionCallBack = function() {
cc.find("box/slime", this.node).getComponent(i.default).enabled = !0;
this.node.getChildByName("finger1").active = !0;
}.bind(this);
this.dynamicLoadPicture();
this.isFirst = !0;
};
t.prototype.dynamicLoadPicture = function() {
var e = d.default.getInstance().getColors(), t = d.default.getInstance().getFoam(), o = d.default.getInstance().getIndex();
e || (e = "blue");
t || (t = "foam3");
o || (o = "3");
this.color = e;
this.foam = t;
this.index = o;
cc.loader.loadRes("cakebatter/image/foam/box_" + t, cc.SpriteFrame, function(e, t) {
cc.find("Canvas/box/box_foam").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/foam1/" + t, cc.SpriteFrame, function(e, t) {
cc.find("box/slime/foam1", this.node).getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/foam0/" + t, cc.SpriteFrame, function(e, t) {
cc.find("box/slime/foam0", this.node).getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
cc.loader.loadRes("cakebatter/image/foam/" + t, cc.SpriteFrame, function(e, t) {
cc.find("foam/beadMask/foam_bead", this.node).getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoReleaseRecursively(t, !0);
}.bind(this));
"foam9" != t && cc.loader.loadRes("cakebatter/image/foam/" + t + "_fall", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("foam/fallBead", this.node).getComponent(cc.ParticleSystem).spriteFrame = t;
cc.find("box/monochromeBead0", this.node).getComponent(cc.ParticleSystem).spriteFrame = t;
cc.find("box/monochromeBead1", this.node).getComponent(cc.ParticleSystem).spriteFrame = t;
}.bind(this));
cc.loader.loadRes("cakebatter/image/slime/" + e, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
cc.find("Canvas/box/slime").getComponent(cc.Sprite).spriteFrame = t;
}.bind(this));
var n = a.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay);
cc.loader.loadRes("cakebatter/SlimeRoll/" + e + "/unicornSlimeRoll_ske", dragonBones.DragonBonesAsset, function(t, o) {
if (t) console.log(t + ""); else {
cc.loader.setAutoReleaseRecursively(o, !0);
n.dragonAsset = o;
cc.loader.loadRes("cakebatter/SlimeRoll/" + e + "/unicornSlimeRoll_tex", dragonBones.DragonBonesAtlasAsset, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoReleaseRecursively(t, !0);
n.dragonAtlasAsset = t;
n.armatureName = "Armature";
}
});
}
});
};
t.prototype.foamTouchStart = function() {
this.node.getChildByName("finger1").active = !1;
};
t.prototype.foamTouchEnd = function() {
this.node.getChildByName("foam").getComponent(i.default).enabled = !1;
this.node.getChildByName("foam").runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, -90), cc.moveTo(.5, cc.v2(-20, 200))), cc.callFunc(function() {
cc.find("foam/foam0", this.node).active = !1;
cc.find("foam/foam1", this.node).active = !1;
cc.find("foam/foam_fall0", this.node).active = !0;
cc.find("foam/foam_fall1", this.node).active = !0;
if ("foam9" == this.foam) {
cc.find("foam/fallColourBead", this.node).active = !0;
cc.find("foam/fallColourBead", this.node).getComponent(cc.AudioSource).play();
cc.find("box/colourBead0", this.node).active = !0;
} else {
cc.find("foam/fallBead", this.node).active = !0;
cc.find("foam/fallBead", this.node).getComponent(cc.AudioSource).play();
cc.find("box/monochromeBead0", this.node).active = !0;
}
cc.find("box/box_foam", this.node).runAction(cc.fadeTo(4, 255));
cc.find("foam/beadMask/foam_bead", this.node).runAction(cc.moveTo(5, cc.v2(-230, 250)));
}.bind(this)), cc.delayTime(5), cc.callFunc(function() {
if ("foam9" == this.foam) {
cc.find("foam/fallColourBead", this.node).getComponent(cc.AudioSource).play();
cc.find("foam/fallColourBead", this.node).active = !1;
cc.find("box/colourBead0", this.node).active = !1;
} else {
cc.find("foam/fallBead", this.node).getComponent(cc.AudioSource).play();
cc.find("foam/fallBead", this.node).active = !1;
cc.find("box/monochromeBead0", this.node).active = !1;
}
cc.find("box/slime", this.node).getComponent(n.default).doShowAction();
}.bind(this)), cc.spawn(cc.rotateTo(.5, 0), cc.moveBy(.5, cc.v2(600, 0)))));
};
t.prototype.slimeTouchEnd = function() {
cc.find("box/slime", this.node).getComponent(i.default).enabled = !1;
cc.find("box/slime", this.node).runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, 0)), cc.callFunc(function() {
cc.find("box/slime", this.node).getComponent(cc.AudioSource).play();
"foam9" == this.foam ? cc.find("box/colourBead1", this.node).active = !0 : cc.find("box/monochromeBead1", this.node).active = !0;
}.bind(this)), cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1), cc.delayTime(1), cc.callFunc(function() {
"foam9" == this.foam ? cc.find("box/colourBead1", this.node).active = !1 : cc.find("box/monochromeBead1", this.node).active = !1;
this.node.getChildByName("box").runAction(cc.spawn(cc.moveTo(.5, cc.v2(0, 0)), cc.scaleTo(.5, 1)));
this.node.getChildByName("hand").runAction(cc.sequence(cc.moveTo(.5, cc.v2(0, -280)), cc.callFunc(function() {
this.node.getChildByName("hand").getComponent(c.default).init();
cc.log(cc.find("box/slime", this.node).scale);
this.node.getChildByName("finger").active = !0;
}.bind(this))));
}.bind(this))));
};
t.prototype.showDragon = function() {
cc.find("Canvas/box/slime").active = !1;
cc.find("Canvas/hand").active = !1;
cc.find("Canvas/left_hand0").active = !0;
cc.find("Canvas/left_hand1").active = !0;
cc.find("Canvas/right_hand0").active = !0;
cc.find("Canvas/right_hand1").active = !0;
cc.find("Canvas/arrow_right0").active = !0;
cc.find("Canvas/arrow_left0").active = !0;
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
this.isFirst ? this.dynamicCreate() : this.dragonReset();
};
t.prototype.showSlime = function() {
cc.find("Canvas/finger").active = !0;
cc.find("Canvas/box/slime").active = !0;
cc.find("Canvas/hand").active = !0;
cc.find("Canvas/hand").getComponent(c.default).init();
cc.find("Canvas/dragon").active = !1;
cc.find("Canvas/left_hand0").active = !1;
cc.find("Canvas/left_hand1").active = !1;
cc.find("Canvas/right_hand0").active = !1;
cc.find("Canvas/right_hand1").active = !1;
cc.find("Canvas/arrow_right0").active = !1;
cc.find("Canvas/arrow_left0").active = !1;
};
t.prototype.dragonReset = function() {
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "dragon");
e.active = !0;
this.node.getChildByName("dragon").position = cc.v2(0, 0);
var t = e.getComponent(dragonBones.ArmatureDisplay), o = e.getComponent(dragonBones.ArmatureDisplay).armature();
o.getSlot("motion1_slime").displayIndex = 0;
var n = o.getSlot("motion1_slime2");
dragonBones.CCFactory.getInstance().replaceSlotDisplay(t.getArmatureKey(), "Armature", "motion1_slime2", this.index, n);
n.displayIndex = 0;
for (var i = 1; i <= 5; i++) {
o.getSlot("motion" + i + "_slime1").displayIndex = -1;
}
for (i = 2; i <= 5; i++) {
o.getSlot("motion" + i + "_slime").displayIndex = -1;
var c = o.getSlot("motion" + i + "_slime2");
c.displayIndex = -1;
dragonBones.CCFactory.getInstance().replaceSlotDisplay(t.getArmatureKey(), "Armature", "motion" + i + "_slime1", this.index, c);
}
this.startAction();
};
t.prototype.dynamicCreate = function() {
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "dragon");
e.active = !0;
this.node.getChildByName("dragon").position = cc.v2(0, 0);
e.getComponent(dragonBones.ArmatureDisplay);
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
var e = [ "left_hand0", "right_hand0" ], t = a.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = t.getComponent(dragonBones.ArmatureDisplay), n = t.getComponent(dragonBones.ArmatureDisplay).armature();
this.initLeftPos = a.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0").getPosition();
this.initRightPos = a.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0").getPosition();
for (var i = 0; i < e.length; i++) {
var c = e[i], r = a.CocosHelper.findNode(cc.Canvas.instance.node, c), l = r.getComponent(s.default), d = r.getPosition(), u = d.add(cc.v2());
u.x = r.getParent().convertToNodeSpaceAR("left_hand0" == c ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
l.setStartPos(d);
l.setEndPos(u);
var p = "left_hand0" == c ? "slimel0" : "slimer0", h = n.getBone(p);
l.setMoveBone(h);
}
for (var f = 1; f <= 5; f++) {
(m = n.getSlot("motion" + f + "_slime2")).displayIndex = -1;
}
n.getSlot("motion1_slime").displayIndex = 0;
var g = n.getSlot("motion1_slime1");
dragonBones.CCFactory.getInstance().replaceSlotDisplay(o.getArmatureKey(), "Armature", "motion1_slime1", this.index, g);
g.displayIndex = 0;
for (f = 2; f <= 5; f++) {
console.log(f);
var m, v = n.getSlot("motion" + f + "_slime");
v.displayIndex = -1;
(m = n.getSlot("motion" + f + "_slime1")) && (m.displayIndex = -1);
if (0 == f) {
v.displayIndex = 0;
m.displayIndex = 0;
}
dragonBones.CCFactory.getInstance().replaceSlotDisplay(o.getArmatureKey(), "Armature", "motion" + f + "_slime1", this.index, m);
}
var C = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
console.log(C._loopSound);
cc.audioEngine.stopEffect(C._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
if (!this.pullFinish) {
var n = cc.find("Canvas/left_hand0").getPosition(), i = cc.find("Canvas/right_hand0").getPosition();
console.log(Math.abs(n.x - this.initLeftPos.x));
console.log(Math.abs(i.x - this.initRightPos.x));
var c = Math.abs(n.x - this.initLeftPos.x) > 10, a = Math.abs(i.x - this.initRightPos.x) > 10;
c && (cc.find("Canvas/arrow_left0").active = !1);
a && (cc.find("Canvas/arrow_right0").active = !1);
}
cc.director.getActionManager().resumeTarget(C.actionNode);
C.showParticle();
-1 == C._loopSound && cc.loader.loadRes("sound/lachang", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
if (e) console.log(e + ""); else {
C._loopSound = cc.audioEngine.playEffect(t, !1);
setTimeout(function() {
C._loopSound = -1;
}, 1e3);
console.log("Pulling" + C._loopSound);
}
});
}.bind(this));
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(C.actionNode);
var n = cc.find("Canvas/left_hand0").getPosition(), i = cc.find("Canvas/right_hand0").getPosition(), c = Math.abs(n.x - this.initLeftPos.x) < 5, a = Math.abs(i.x - this.initRightPos.x) < 5;
if (this.pullFinish) if (c && a) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
this.pullFinish = !1;
this.showSlime();
} else if (c && !a) {
cc.find("Canvas/arrow_right").active = !0;
cc.find("Canvas/arrow_left").active = !1;
} else if (!c && a) {
cc.find("Canvas/arrow_left").active = !0;
cc.find("Canvas/arrow_right").active = !1;
} else if (!c && !a) {
cc.find("Canvas/arrow_left").active = !0;
cc.find("Canvas/arrow_right").active = !0;
}
cc.find("Canvas/right_hand0").getComponent(s.default).getEndPos();
C.hideParticle();
}.bind(this));
this.startAction();
};
t.prototype.startAction = function() {
for (var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(1.5 * (t + 1)), cc.callFunc(function() {
r.default.getInstance().playAudioEffect();
a.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), a.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
a.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), a.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) if (this.isFirst) {
console.log(this.isFirst);
var o = e.getSlot("motion" + t + "_slime"), n = e.getSlot("motion" + (t + 1) + "_slime");
o && (o.displayIndex = -1);
n && (n.displayIndex = 0);
var i = e.getSlot("motion" + t + "_slime1"), c = e.getSlot("motion" + (t + 1) + "_slime1");
i && (i.displayIndex = -1);
c && (c.displayIndex = 0);
} else {
console.log(this.isFirst);
o = e.getSlot("motion" + t + "_slime"), n = e.getSlot("motion" + (t + 1) + "_slime");
o && (o.displayIndex = -1);
n && (n.displayIndex = 0);
i = e.getSlot("motion" + t + "_slime2"), c = e.getSlot("motion" + (t + 1) + "_slime2");
i && (i.displayIndex = -1);
c && (c.displayIndex = 0);
} else {
cc.find("Canvas/arrow_right0").active = !1;
cc.find("Canvas/arrow_left0").active = !1;
if (this.isFirst) {
this.pullFinish = !0;
this.isFirst = !1;
} else {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
var s = a.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
s.active = !0;
s.runAction(cc.repeat(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)), 2));
}
}
}.bind(o))));
}, o = this, n = 1; n < 6; n++) t(n);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = a.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
a.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
l.default.changeScene("kneadSlimeCB");
};
t.prototype.touchBackBtn = function() {
l.default.changeScene("makeActivatorCB");
};
return t = __decorate([ p ], t);
}(cc.Component));
o.default = h;
cc._RF.pop();
}, {
"../common/Script/MoveInCB": "MoveInCB",
"../common/Script/codebase/SpriteDrag/SpriteDragCB": "SpriteDragCB",
"../common/Script/codebase/TransitionSceneCB": "TransitionSceneCB",
"../common/Script/codebase/utils/CocosHelperCB": "CocosHelperCB",
"./DataConfigCB": "DataConfigCB",
"./DragonCompoentCB": "DragonCompoentCB",
"./HandTouchEventCB": "HandTouchEventCB",
"./TipManagerCB": "TipManagerCB"
} ],
SubgameManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "783d6BV5LxEFbFggjjch+MU", "SubgameManager");
var n = {
_storagePath: [],
_getfiles: function(e, t, o, n) {
this._storagePath[e] = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "SlimeMakeNew/" + e;
this._downloadCallback = o;
this._finishCallback = n;
this._fileName = e;
var i = "http://youngcnfoodhall.top/SlimeMakeNew/" + e;
this.check_before(e);
var c = this._storagePath[e] + "/project.manifest";
this.manifestUrl = c;
var a = JSON.stringify({
packageUrl: i,
remoteManifestUrl: i + "/project.manifest",
remoteVersionUrl: i + "/version.manifest",
version: "0.8",
assets: {},
searchPaths: []
});
this._am = new jsb.AssetsManager("", this._storagePath[e], function(e, t) {
for (var o = e.split("."), n = t.split("."), i = 0; i < o.length; ++i) {
var c = parseInt(o[i]), a = parseInt(n[i] || 0);
if (c !== a) return c - a;
}
return n.length > o.length ? -1 : 0;
});
this._am.setVerifyCallback(function(e, t) {
t.compressed;
return !0;
});
cc.sys.os === cc.sys.OS_ANDROID && this._am.setMaxConcurrentTask(2);
1 === t ? this._am.setEventCallback(this._updateCb.bind(this)) : 2 == t ? this._am.setEventCallback(this._checkCb.bind(this)) : this._am.setEventCallback(this._needUpdate.bind(this));
if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
console.log(a);
if (jsb.fileUtils.isFileExist(c)) {
console.log("加载本地Manifest");
this._am.loadLocalManifest(this.manifestUrl);
} else {
console.log("加载网络Manifest");
var s = new jsb.Manifest(a, this._storagePath);
this._am.loadLocalManifest(s, this._storagePath);
}
}
if (1 === t) {
this._am.update();
this._failCount = 0;
} else this._am.checkUpdate();
this._updating = !0;
console.log("更新文件:" + c);
},
check_before: function(e) {
var t = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "SlimeMakeNew/" + e + "/project.manifest.temp";
if (jsb.fileUtils.isFileExist(t)) {
var o = jsb.fileUtils.getStringFromFile(t);
"" == o && (o = "{}");
JSON.parse(o).module != this.file_module && console.log("remove temp file:" + jsb.fileUtils.removeFile(t));
}
},
_updateCb: function(e) {
var t = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
console.log("updateCb本地没有配置文件");
t = !0;
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
console.log("updateCb下载配置文件错误");
t = !0;
break;

case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
console.log("updateCb解析文件错误");
t = !0;
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
console.log("updateCb发现新的更新");
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
console.log("updateCb已经是最新的");
t = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
console.log(e.getPercentByFile());
this._downloadCallback && this._downloadCallback(e.getPercent());
break;

case jsb.EventAssetsManager.ASSET_UPDATED:
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
console.log("updateCb更新错误");
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
var o = jsb.fileUtils.getSearchPaths(), n = this._am.getLocalManifest().getSearchPaths();
Array.prototype.unshift(o, n);
cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(o));
jsb.fileUtils.setSearchPaths(o);
this._finishCallback && this._finishCallback(!0);
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
this._failCount++;
if (this._failCount <= 3) {
this._am.downloadFailedAssets();
console.log("updateCb更新失败" + this._failCount + " 次");
} else {
console.log("updateCb失败次数过多");
this._failCount = 0;
t = !0;
this._updating = !1;
}
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
console.log("updateCb解压失败");
}
if (t) {
cc.eventManager.removeListener(this._updateListener);
this._updating = !1;
this._finishCallback && this._finishCallback(!1);
}
},
stopDown: function() {
self._updating = !1;
this._am.setEventCallback(null);
},
_checkCb: function(e) {
var t = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
console.log("checkCb本地没有配置文件");
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
console.log("checkCb下载配置文件错误");
t = !0;
break;

case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
console.log("checkCb解析文件错误");
t = !0;
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
this._getfiles(this._fileName, 1, this._downloadCallback, this._finishCallback);
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
console.log("checkCb已经是最新的");
this._finishCallback && this._finishCallback(!0);
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
case jsb.EventAssetsManager.ASSET_UPDATED:
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
console.log("checkCb更新错误");
t = !0;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
console.log("checkCb更新完成");
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
console.log("checkCb更新失败");
t = !0;
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
console.log("checkCb解压失败");
}
this._updating = !1;
t && this._finishCallback && this._finishCallback(!1);
},
_needUpdate: function(e) {
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
console.log("子游戏已经是最新的，不需要更新");
this._finishCallback && this._finishCallback(!1);
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
console.log("子游戏需要更新");
this._finishCallback && this._finishCallback(!0);
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
case jsb.EventAssetsManager.ERROR_UPDATING:
case jsb.EventAssetsManager.UPDATE_FAILED:
this._downloadCallback();
}
},
downloadSubgame: function(e, t, o) {
this._getfiles(e, 2, t, o);
},
enterSubgame: function(e) {
if (this._storagePath[e]) {
console.log("enterSubgame: require " + this._storagePath[e] + "/src/main.js");
window.require(this._storagePath[e] + "/src/main.js");
} else this.downloadSubgame(e);
},
isSubgameDownLoad: function(e) {
var t = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "SlimeMakeNew/" + e + "/project.manifest";
console.log(t);
return !!jsb.fileUtils.isFileExist(t);
},
needUpdateSubgame: function(e, t, o) {
this._getfiles(e, 3, o, t);
},
setManifest: function(e) {
this._manifestUrl = e;
},
setLogLabel: function(e) {
this._label = e;
}
};
t.exports = n;
cc._RF.pop();
}, {} ],
TipManagerCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9254d1L1QxOSJwyeYkN545A", "TipManagerCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = [ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ], o = new cc.Node(), n = o.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (n.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(o);
var i = 200 - 400 * Math.random(), c = cc.v2(i, 100 * Math.random() + 100);
o.setPosition(cc.v2(0, 0));
o.setScale(0);
o.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, c, 150, 1), cc.scaleTo(.5, [ .8, 1, 1, 1, 1, 1 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {
cc.loader.loadRes(t[e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14aex27fZAtaFxgjGqJ80b", "TipManagerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b224d1L1QxOSJwyeYkN545A", "TipManagerCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b214d1L1QxOSJwyeYkN545A", "TipManagerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/niceFS", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b195cd5ELRDC5/33g+1FzhH", "TipManagerGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "889ee5xoflAg5XhROF1f5tT", "TipManagerGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = [ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ], o = new cc.Node(), n = o.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (n.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(o);
var i = 200 - 400 * Math.random(), c = cc.v2(i, 100 * Math.random() + 100);
o.setPosition(cc.v2(0, 0));
o.setScale(0);
o.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, c, 150, 1), cc.scaleTo(.5, [ .8, 1, 1, 1, 1, 1 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {
cc.loader.loadRes(t[e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b114d1L1QxOSJwyeYkN545A", "TipManagerHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 100 * Math.random() + 100);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
if (!e) {
cc.audioEngine.playEffect(t, !1);
cc.loader.setAutoReleaseRecursively(t, !0);
}
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .8, 1, 1, 1, 1, 1 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c0df1dBsFVMzak6gJSEqlIS", "TipManagerMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {
this.showIndex = 0;
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
this.showIndex = this.showIndex + 1;
var e = this.showIndex % 4, t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e], cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.zIndex = 100;
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic", "sound/Nice", "sound/great", "sound/great" ][e], cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e ? console.log(e + "") : cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b775cd5ELRDC5/33g+1FzhH", "TipManagerRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b124d1L1QxOSJwyeYkN545A", "TipManagerRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 100 * Math.random() + 100);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .8, 1, 1, 1, 1, 1 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TipManagerSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b134d1L1QxOSJwyeYkN545A", "TipManagerSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function() {
function e() {}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.jumpTips = function() {
var e = Math.floor(4 * Math.random()), t = new cc.Node(), o = t.addComponent(cc.Sprite);
cc.loader.loadRes([ "tips/fantastic", "tips/nice", "tips/great", "tips/great" ][e] + "", cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || (o.spriteFrame = t);
});
cc.Canvas.instance.node.addChild(t);
var n = 200 - 400 * Math.random(), i = cc.v2(n, 50 * Math.random() + 170);
t.setPosition(cc.v2(0, 0));
t.setScale(0);
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/great.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(.5, i, 150, 1), cc.scaleTo(.5, [ .6, .8, .8, .8, .8, .8 ][e]), cc.rotateBy(.5, 360)), cc.callFunc(function() {}), cc.delayTime(1), cc.removeSelf()));
};
e.prototype.playAudioEffect = function() {
var e = Math.floor(5 * Math.random());
cc.loader.loadRes([ "sound/fatanstic.mp3", "sound/good.mp3", "sound/Nice.mp3", "sound/great.mp3", "sound/well done.mp3", "sound/well done.mp3" ][e] + "", cc.AudioClip, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
e || cc.audioEngine.playEffect(t, !1);
});
};
var t;
return e = t = __decorate([ i ], e);
}());
o.default = c;
cc._RF.pop();
}, {} ],
TouchBtn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "82905gbWMxJ7auOQhPbIH5N", "TouchBtn");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.touchMoreGame = function() {
console.log("touchMoreGame");
jsToCPP.getInstance().showMoreGame();
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9f09fYOO2pB6JzNY/KdRcry", "TouchComponentCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1459GPzTNLHb4fBVQcPFl1", "TouchComponentCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b229fYOO2pB6JzNY/KdRcry", "TouchComponentCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2159GPzTNLHb4fBVQcPFl1", "TouchComponentFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1959GPzTNLHb4fBVQcPFl1", "TouchComponentGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4d5a7H0tGxGnas4yc0kLYax", "TouchComponentGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b119fYOO2pB6JzNY/KdRcry", "TouchComponentHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cd0cbPoRt1O/bAri/+TxItO", "TouchComponentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7759GPzTNLHb4fBVQcPFl1", "TouchComponentRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b129fYOO2pB6JzNY/KdRcry", "TouchComponentRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponentSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b139fYOO2pB6JzNY/KdRcry", "TouchComponentSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchComponent: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1af59GPzTNLHb4fBVQcPFl1", "TouchComponent");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
TouchMoveCard: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "08b59SLfMlMk5gGHztglUYo", "TouchMoveCard");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.oldPostion = cc.v2();
t.scoreAudio = null;
t.touchPrePos = cc.v2(0, 0);
return t;
}
t.prototype.start = function() {
this.initLisenter();
this.oldPostion = this.node.getPosition();
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
};
t.prototype.onDisable = function() {
this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
};
t.prototype.touchMove = function(e) {
this.node.getContentSize();
var t = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), o = e.getDelta().sub(t), n = this.touchPrePos.sub(t), i = -180 * o.signAngle(n) / 3.1415926;
console.log(o.signAngle(n));
var c = this.node.rotation + .5 * i;
this.node.rotation = c;
this.node.getPosition();
var a = e.getDelta(), s = this.node.getPosition().add(cc.v2(.05 * a.x, a.y));
this.node.setPosition(s);
};
t.prototype.touchStart = function(e) {
this.touchPrePos = cc.v2(0, 0);
};
t.prototype.touchEnd = function(e) {
var t = this.node.position, o = t.sub(this.oldPostion).mag();
console.log(o);
this.enabled = !1;
if (o > 150) {
var n = t.y >= this.oldPostion.y ? 1 : -1;
this.moveOut(n, .25);
} else {
var i = this;
this.node.runAction(cc.sequence(cc.spawn(cc.rotateTo(.25, 0), cc.moveTo(.25, this.oldPostion)), cc.callFunc(function() {
i.enabled = !0;
})));
}
};
t.prototype.moveOut = function(e, t) {
var o = this;
cc.audioEngine.play(o.scoreAudio, !1, 1);
this.node.runAction(cc.sequence(cc.moveBy(t, cc.v2(0, 1e3 * e)), cc.callFunc(function() {
o.touchCallBack && o.touchCallBack(e);
})));
};
t.prototype.initLisenter = function() {
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
cc.find("Canvas").emit("PullTouch");
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
this.node.getPosition();
var t = e.getDelta();
this._isTouchMove = Math.sqrt(t.x * t.x + t.y * t.y) > 4;
}, this);
};
t.prototype.getWordPos = function(e) {
if (null != this.node) {
var t = cc.Camera.findCamera(this.node);
if (null != t) return t.getCameraToWorldPoint(e, void 0);
}
return e;
};
__decorate([ c(cc.AudioClip) ], t.prototype, "scoreAudio", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
TransformRecordCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2e1d1uhzoFG2JCsl/d7lgCU", "TransformRecordCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompCB"), i = e("../codebase/utils/NodeTransformCB"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompCB": "NodeCompCB",
"../codebase/utils/NodeTransformCB": "NodeTransformCB"
} ],
TransformRecordCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b140aBScjlEQoJmcSPhbvEM", "TransformRecordCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompCE"), i = e("../codebase/utils/NodeTransformCE"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompCE": "NodeCompCE",
"../codebase/utils/NodeTransformCE": "NodeTransformCE"
} ],
TransformRecordCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22d1uhzoFG2JCsl/d7lgCU", "TransformRecordCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompCS"), i = e("../codebase/utils/NodeTransformCS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompCS": "NodeCompCS",
"../codebase/utils/NodeTransformCS": "NodeTransformCS"
} ],
TransformRecordFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b210aBScjlEQoJmcSPhbvEM", "TransformRecordFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompFS"), i = e("../codebase/utils/NodeTransformFS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompFS": "NodeCompFS",
"../codebase/utils/NodeTransformFS": "NodeTransformFS"
} ],
TransformRecordGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b190aBScjlEQoJmcSPhbvEM", "TransformRecordGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompGL"), i = e("../codebase/utils/NodeTransformGL"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompGL": "NodeCompGL",
"../codebase/utils/NodeTransformGL": "NodeTransformGL"
} ],
TransformRecordGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "62590ZCj3VE+aOzaZD7pUAs", "TransformRecordGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompGS"), i = e("../codebase/utils/NodeTransformGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompGS": "NodeCompGS",
"../codebase/utils/NodeTransformGS": "NodeTransformGS"
} ],
TransformRecordHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11d1uhzoFG2JCsl/d7lgCU", "TransformRecordHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompHC"), i = e("../codebase/utils/NodeTransformHC"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompHC": "NodeCompHC",
"../codebase/utils/NodeTransformHC": "NodeTransformHC"
} ],
TransformRecordMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "70997w3z4dIBocPcwJZRsOF", "TransformRecordMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompMS"), i = e("../codebase/utils/NodeTransformMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompMS": "NodeCompMS",
"../codebase/utils/NodeTransformMS": "NodeTransformMS"
} ],
TransformRecordRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b770aBScjlEQoJmcSPhbvEM", "TransformRecordRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompRP"), i = e("../codebase/utils/NodeTransformRP"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompRP": "NodeCompRP",
"../codebase/utils/NodeTransformRP": "NodeTransformRP"
} ],
TransformRecordRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12d1uhzoFG2JCsl/d7lgCU", "TransformRecordRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompRS"), i = e("../codebase/utils/NodeTransformRS"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompRS": "NodeCompRS",
"../codebase/utils/NodeTransformRS": "NodeTransformRS"
} ],
TransformRecordSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13d1uhzoFG2JCsl/d7lgCU", "TransformRecordSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeCompSD"), i = e("../codebase/utils/NodeTransformSD"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeCompSD": "NodeCompSD",
"../codebase/utils/NodeTransformSD": "NodeTransformSD"
} ],
TransformRecord: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2fa0aBScjlEQoJmcSPhbvEM", "TransformRecord");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../codebase/utils/NodeComp"), i = e("../codebase/utils/NodeTransform"), c = cc._decorator, a = c.ccclass, s = c.property, r = c.requireComponent, l = c.disallowMultiple, d = c.executeInEditMode, u = function() {
function e() {
this.key = "";
this.value = new i.default();
}
__decorate([ s() ], e.prototype, "key", void 0);
__decorate([ s(i.default) ], e.prototype, "value", void 0);
return e = __decorate([ a("NodeTransformKey") ], e);
}();
o.NodeTransformKey = u;
var p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.transforems = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.getTransform = function(e) {
for (var t = 0, o = this.transforems; t < o.length; t++) {
var n = o[t];
if (n.key == e) return n.value;
}
return null;
};
__decorate([ s([ u ]) ], t.prototype, "transforems", void 0);
return t = __decorate([ a, r(n), l(), d() ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../codebase/utils/NodeComp": "NodeComp",
"../codebase/utils/NodeTransform": "NodeTransform"
} ],
TransitionSceneCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5a21fljKQVPoZCdFbnZ2AdW", "TransitionSceneCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./utils/ColorRectCB");
var n = e("./utils/CocosHelperCB"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./utils/CocosHelperCB": "CocosHelperCB",
"./utils/ColorRectCB": "ColorRectCB"
} ],
TransitionSceneCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b144ct9dVBNL4lmyJRr6Vxp", "TransitionSceneCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./utils/CocosHelperCE"), i = (e("./effect/ShaderTimeCE"), e("./effect/ShaderHelperCE"), 
cc._decorator), c = i.ccclass, a = (i.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = 0);
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./effect/ShaderHelperCE": "ShaderHelperCE",
"./effect/ShaderTimeCE": "ShaderTimeCE",
"./utils/CocosHelperCE": "CocosHelperCE"
} ],
TransitionSceneCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b221fljKQVPoZCdFbnZ2AdW", "TransitionSceneCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./utils/ColorRectCS");
var n = e("./utils/CocosHelperCS"), i = (e("../../../components/ShaderHelperCS"), 
e("../../../components/ShaderTimeCS"), cc._decorator), c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../../../components/ShaderHelperCS": "ShaderHelperCS",
"../../../components/ShaderTimeCS": "ShaderTimeCS",
"./utils/CocosHelperCS": "CocosHelperCS",
"./utils/ColorRectCS": "ColorRectCS"
} ],
TransitionSceneFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b214ct9dVBNL4lmyJRr6Vxp", "TransitionSceneFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./utils/CocosHelperFS"), i = (e("./effect/ShaderTimeFS"), e("./effect/ShaderHelperFS"), 
cc._decorator), c = i.ccclass, a = (i.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = 0);
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./effect/ShaderHelperFS": "ShaderHelperFS",
"./effect/ShaderTimeFS": "ShaderTimeFS",
"./utils/CocosHelperFS": "CocosHelperFS"
} ],
TransitionSceneGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b194ct9dVBNL4lmyJRr6Vxp", "TransitionSceneGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./utils/CocosHelperGL"), i = (e("./effect/ShaderTimeGL"), e("./effect/ShaderHelperGL"), 
cc._decorator), c = i.ccclass, a = (i.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = 0);
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./effect/ShaderHelperGL": "ShaderHelperGL",
"./effect/ShaderTimeGL": "ShaderTimeGL",
"./utils/CocosHelperGL": "CocosHelperGL"
} ],
TransitionSceneGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "06b159mdE5KY7GtdrF0szL1", "TransitionSceneGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./utils/ColorRectGS");
var n = e("./utils/CocosHelperGS"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./utils/CocosHelperGS": "CocosHelperGS",
"./utils/ColorRectGS": "ColorRectGS"
} ],
TransitionSceneHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b111fljKQVPoZCdFbnZ2AdW", "TransitionSceneHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./utils/ColorRectHC");
var n = e("./utils/CocosHelperHC"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./utils/CocosHelperHC": "CocosHelperHC",
"./utils/ColorRectHC": "ColorRectHC"
} ],
TransitionSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "67001pLkMlOcYCs8I4qMnzN", "TransitionSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./utils/CocosHelperMS"), i = (e("../../../../Script/tool/components/ShaderHelperMS"), 
e("../../../../Script/tool/components/ShaderTimeMS"), cc._decorator), c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = 0);
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"../../../../Script/tool/components/ShaderHelperMS": "ShaderHelperMS",
"../../../../Script/tool/components/ShaderTimeMS": "ShaderTimeMS",
"./utils/CocosHelperMS": "CocosHelperMS"
} ],
TransitionSceneRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b774ct9dVBNL4lmyJRr6Vxp", "TransitionSceneRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./utils/CocosHelperRP"), i = (e("./effect/ShaderTimeRP"), e("./effect/ShaderHelperRP"), 
cc._decorator), c = i.ccclass, a = (i.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = 0);
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./effect/ShaderHelperRP": "ShaderHelperRP",
"./effect/ShaderTimeRP": "ShaderTimeRP",
"./utils/CocosHelperRP": "CocosHelperRP"
} ],
TransitionSceneRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b121fljKQVPoZCdFbnZ2AdW", "TransitionSceneRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./utils/ColorRectRS");
var n = e("./utils/CocosHelperRS"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./utils/CocosHelperRS": "CocosHelperRS",
"./utils/ColorRectRS": "ColorRectRS"
} ],
TransitionSceneSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b131fljKQVPoZCdFbnZ2AdW", "TransitionSceneSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./utils/ColorRectSD");
var n = e("./utils/CocosHelperSD"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./utils/CocosHelperSD": "CocosHelperSD",
"./utils/ColorRectSD": "ColorRectSD"
} ],
TransitionScene_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f0cbbe7smJKtL0Vt4L7hVyT", "TransitionScene_my");
Object.defineProperty(o, "__esModule", {
value: !0
});
e("./ColorRect_my");
var n = e("./CocosHelper_my"), i = cc._decorator, c = i.ccclass, a = (i.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = "codebase/TransitionScen");
cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ c ], t);
}(cc.Component));
o.default = a;
cc._RF.pop();
}, {
"./CocosHelper_my": "CocosHelper_my",
"./ColorRect_my": "ColorRect_my"
} ],
TransitionScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4164ct9dVBNL4lmyJRr6Vxp", "TransitionScene");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./utils/CocosHelper"), i = e("./effect/ShaderTime"), c = e("./effect/ShaderHelper"), a = cc._decorator, s = a.ccclass, r = (a.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.newSceneName = null;
return t;
}
o = t;
t.changeScene = function(e, t) {
void 0 === t && (t = 0);
1 == t || 7 == t || 12 == t ? n.CocosHelper.captureNodeSize(cc.find("Canvas"), cc.visibleRect.width, cc.visibleRect.height).then(function(o) {
if (null == o) cc.director.loadScene(e); else {
cc.director.loadScene(e);
cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, function() {
var e = cc.director.getScene().getChildByName("Canvas"), n = new cc.Node();
n.setPosition(cc.v2(0, 0));
n.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(o);
n.addComponent(c.default).program = t;
n.addComponent(i.default);
e.addChild(n);
cc.director.off(cc.Director.EVENT_AFTER_SCENE_LAUNCH);
});
}
}) : cc.director.loadScene(e);
};
t.prototype.startChange = function() {
var e = this;
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitiOnExit;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
this.node.opacity = 0;
this.node.stopAllActions();
var t = cc.callFunc(function() {
null != e.newSceneName && cc.director.preloadScene(e.newSceneName, function() {
cc.director.loadScene(e.newSceneName, function() {
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && (n.hasTransition = !0);
}
});
var e = cc.find("TransitionSceneNode");
if (null != e) {
var t = cc.callFunc(function() {
cc.game.removePersistRootNode(this);
this.destroy();
n.CocosHelper.visitNode(cc.director.getScene(), function(e) {
for (var t = 0, o = e.getComponents(cc.Component); t < o.length; t++) {
var n = o[t], i = n.transitionOnEnter;
void 0 != i && i instanceof Function && i.bind(n)();
}
});
}, e);
e.runAction(cc.sequence(cc.fadeOut(.6), t));
}
});
e.newSceneName = null;
});
}, this);
this.node.runAction(cc.sequence(cc.fadeIn(.6), t));
};
t.prototype.onDestroy = function() {
o.currentChangeName = "";
};
t.prototype.start = function() {
"" != o.currentChangeName && cc.error("scene:" + o.currentChangeName + " isChanging, don`t change " + this.newSceneName);
o.currentChangeName = this.newSceneName;
this.startChange();
};
var o;
t.currentChangeName = "";
return t = o = __decorate([ s ], t);
}(cc.Component));
o.default = r;
cc._RF.pop();
}, {
"./effect/ShaderHelper": "ShaderHelper",
"./effect/ShaderTime": "ShaderTime",
"./utils/CocosHelper": "CocosHelper"
} ],
VersionMG: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cbfd9KQjSVHaKuEdRPPl67F", "VersionMG");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./HttpUtils"), i = cc._decorator, c = i.ccclass, a = (i.property, function() {
function e() {
this.startVersionNum = "versionLocal";
this.showPopSceneName = "hall";
this.startVersion = 10;
this.androidV = 13;
this.iosV = 12;
this.isShowPop = !1;
cc.sys.platform == cc.sys.ANDROID ? this.startVersion = this.androidV : this.startVersion = this.iosV;
cc.sys.localStorage.setItem(this.startVersionNum, this.startVersion);
}
t = e;
e.getInstance = function() {
null == t._instance && (t._instance = new t());
return t._instance;
};
e.prototype.initVersion = function() {
var e = cc.sys.localStorage.getItem(this.startVersionNum);
e || (e = this.startVersion);
cc.sys.localStorage.setItem(this.startVersionNum, this.startVersion);
};
e.prototype.getVersion = function() {
var e = cc.sys.localStorage.getItem(this.startVersionNum);
e || (e = this.startVersion);
return e;
};
e.prototype.calIsToPopVerDialog = function() {
var e = this;
n.default.getInstance().httpGet("http://youngcnfoodhall.top/SlimeMakeNew/version.json", function(t) {
if (t) {
console.log("网络json");
try {
var o = JSON.parse(t)[0];
if (o) {
var n = 0, i = "android";
if (cc.sys.platform == cc.sys.ANDROID) {
n = Number(o.androidNewVersion);
i = "android";
} else {
n = Number(o.androidVersion);
i = "ios";
}
var c = e.getVersion(), a = cc.director.getScene().name;
console.log("平台 ： " + i);
console.log("本地版本" + c);
console.log("网络版本" + n);
console.log("当前场景名" + a);
console.log("是否弹过 " + e.isShowPop);
var s = (r = jsToCPP.getInstance()).getArray();
if (0 == Number(s.length) && n > e.getVersion() && a == e.showPopSceneName) {
console.log("显示弹框");
e.showPopDialogToMarket();
e.isShowPop = !0;
var r;
(r = jsToCPP.getInstance()).setArray("ont");
r.setArray("two");
r.setArray("three");
}
}
} catch (e) {
console.log("网络json错误 加载本地json");
}
} else ;
});
};
e.prototype.showPopDialogToMarket = function() {
cc.loader.loadRes("pop_market", cc.Prefab, function(e, t) {
if (e) console.log(e + ""); else {
var o = cc.instantiate(t);
o.parent = cc.Canvas.instance.node;
o.position = cc.v2(0, 0);
o.zIndex = 100;
}
});
};
var t;
return e = t = __decorate([ c ], e);
}());
o.default = a;
cc._RF.pop();
}, {
"./HttpUtils": "HttpUtils"
} ],
ViewSizeAdapterCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "857180w+FdDvrxIhiymzoFp", "ViewSizeAdapterCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterCB") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b147d2nwwROGpKmriVd8Vua", "ViewSizeAdapterCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterCE") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b22180w+FdDvrxIhiymzoFp", "ViewSizeAdapterCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterCS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b217d2nwwROGpKmriVd8Vua", "ViewSizeAdapterFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterFS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b197d2nwwROGpKmriVd8Vua", "ViewSizeAdapterGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterGL") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b59e5Jp7GRJ07bVLj4b9n7m", "ViewSizeAdapterGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterGS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b11180w+FdDvrxIhiymzoFp", "ViewSizeAdapterHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterHC") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "84127JALlxJuKPl8X+F6n5v", "ViewSizeAdapterMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterMS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b777d2nwwROGpKmriVd8Vua", "ViewSizeAdapterRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterRP") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b12180w+FdDvrxIhiymzoFp", "ViewSizeAdapterRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterRS") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapterSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b13180w+FdDvrxIhiymzoFp", "ViewSizeAdapterSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapterSD") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapter_my: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1f8aIugDRAkJxwcKb0maG+", "ViewSizeAdapter_my");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/viewadapter/ViewSizeAdapter") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
ViewSizeAdapter: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d257d2nwwROGpKmriVd8Vua", "ViewSizeAdapter");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, n.disallowMultiple), a = n.menu, s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setup = function() {
var e = cc.view.getFrameSize();
cc.log(" fx == " + e.width + " fy ==" + e.height);
var t, o = cc.Canvas.instance.designResolution, n = e.width / o.width, i = e.height / o.height;
t = n > i ? i : n;
cc.log("scaleX == " + n + " y ==" + i);
cc.log(" minScale == " + t);
cc.log(" Rx == " + e.width / t + " Ry ==" + e.height / t);
cc.view.setDesignResolutionSize(e.width / t, e.height / t, cc.ResolutionPolicy.NO_BORDER);
cc.Canvas.instance.alignWithScreen();
};
t.prototype.onLoad = function() {
var e = this;
this.setup();
cc.view.setResizeCallback(function() {
e.setup();
cc.director.dispatchEvent(new cc.Event.EventCustom("ResizeFrame", !0));
});
};
return t = __decorate([ i, c(), a("common/ViewSizeAdapter") ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
WrapUpControllerCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b149b227N9NWb061bLgfuLv", "WrapUpControllerCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DataConfigCE"), i = e("./HandTouchEventCE"), c = e("../common/Script/CombinedComponent/MixComponentCE"), a = e("../common/Script/codebase/TransitionSceneCE"), s = e("../common/Script/ads/showLaodingCE"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = n.default.getInstance().getTexture();
if (e) {
var t = new cc.Node();
t.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e);
cc.find("Canvas/slime/color").addChild(t);
t.setScale(1.3);
}
cc.find("Canvas/slime/slime0/slime1").getChildByName("hand0").runAction(cc.moveBy(.5, cc.v2(300, 0)));
cc.find("Canvas/slime/slime0/slime1").getChildByName("hand1").runAction(cc.sequence(cc.moveBy(.5, cc.v2(300, 0)), cc.callFunc(function() {
cc.find("Canvas/slime/slime0/slime0").active = !1;
cc.find("Canvas/slime/slime0/slime1").getChildByName("slime").active = !0;
cc.find("Canvas/slime/slime0/slime1").getChildByName("hand1").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/tipClick").active = !0;
}.bind(this))));
var o = n.default.getInstance().getCandys();
o || (o = [ "star" ]);
o.forEach(function(e) {
cc.find("Canvas/decorate/" + e).active = !0;
});
var i = n.default.getInstance().getColors();
i || (i = [ "red", "brown" ]);
var a = "brown";
if (2 == i.length) a = "red" == i[0] && "yellow" == i[1] ? "orange" : "red" == i[1] && "yellow" == i[0] ? "orange" : "blue" == i[1] && "yellow" == i[0] ? "green" : "blue" == i[0] && "yellow" == i[1] ? "green" : "red" == i[0] && "red" == i[1] ? "pink" : "yellow" == i[0] && "yellow" == i[1] ? "orange" : "green" == i[0] && "green" == i[1] ? "green" : "brown"; else if (i.length >= 3) {
a = "rainbow";
for (var s = 0; s < i.length; s++) if ("brown" == i[s]) {
a = i[s];
break;
}
}
cc.log(a);
n.default.getInstance().setColor(a);
this.node.getChildByName("slime").getComponent(c.default).mixPaths = [];
cc.loader.loadRes("crazyemoji/image/color/slime9_" + a, cc.SpriteFrame, function(e, t) {
cc.log(e);
cc.loader.setAutoReleaseRecursively(t, !0);
this.node.getChildByName("slime").getComponent(c.default).mixPaths.push(t);
cc.loader.loadRes("crazyemoji/image/color/slime10_" + a, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
this.node.getChildByName("slime").getComponent(c.default).mixPaths.push(t);
cc.loader.loadRes("crazyemoji/image/color/slime11_" + a, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
this.node.getChildByName("slime").getComponent(c.default).mixPaths.push(t);
cc.loader.loadRes("crazyemoji/image/color/slime12_" + a, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
this.node.getChildByName("slime").getComponent(c.default).mixPaths.push(t);
cc.loader.loadRes("crazyemoji/image/color/slime13_" + a, cc.SpriteFrame, function(e, t) {
cc.loader.setAutoReleaseRecursively(t, !0);
this.node.getChildByName("slime").getComponent(c.default).mixPaths.push(t);
}.bind(this));
}.bind(this));
}.bind(this));
}.bind(this));
}.bind(this));
};
t.prototype.mixFinish = function() {
cc.find("Canvas/heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
cc.find("Canvas/slime").stopAllActions();
cc.find("Canvas/decorate").stopAllActions();
cc.find("Canvas/slime").setScale(1);
cc.find("Canvas/decorate").setScale(1.2);
cc.find("Canvas/hand").active = !1;
cc.find("Canvas/hand").getComponent(i.default).destroyTouchEvent();
cc.find("Canvas/hand").getComponent(cc.AudioSource).stop();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.node.getChildByName("finish").getComponent(cc.ParticleSystem).resetSystem();
this.node.getChildByName("finish").getComponent(cc.AudioSource).play();
}.bind(this)), cc.delayTime(.5), cc.callFunc(function() {
s.default.getInstance().loadingDoneCallback = function() {
s.default.getInstance().loadingDoneCallback = null;
a.default.changeScene("playSlimeCE", 12);
};
s.default.getInstance().showAds(!1);
}.bind(this))));
};
return t = __decorate([ l ], t);
}(cc.Component));
o.default = d;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/MixComponentCE": "MixComponentCE",
"../common/Script/ads/showLaodingCE": "showLaodingCE",
"../common/Script/codebase/TransitionSceneCE": "TransitionSceneCE",
"./DataConfigCE": "DataConfigCE",
"./HandTouchEventCE": "HandTouchEventCE"
} ],
boraxGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "202daUFeA1FJLkkbret9/E2", "boraxGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), c = e("../common/Script/codebase/utils/CocosHelperGS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.boraxAudio = null;
t.audioId = -1;
return t;
}
t.prototype.start = function() {};
t.prototype.touchStart = function() {
cc.find("Canvas/finger").stopAllActions();
cc.find("Canvas/finger").active = !1;
};
t.prototype.touchEnd = function() {
this.node.getComponent(i.default).enabled = !1;
var e = cc.find("Canvas/scoop0");
e.getComponent(cc.Animation).play("scoop");
this.node.getComponent(cc.Animation).play();
this.scheduleOnce(function() {
var t = cc.moveBy(3, cc.v2(0, 70));
this.audioId = cc.audioEngine.play(this.boraxAudio, !0, .5);
e.getChildByName("scoop2_").runAction(t);
}, 1);
this.scheduleOnce(function() {
cc.audioEngine.stop(this.audioId);
}, 5);
this.scheduleOnce(function() {
var e = cc.moveBy(1, cc.v2(-cc.view.getVisibleSize().width, 0));
this.node.runAction(e);
}, 5.5);
this.scheduleOnce(function() {
e.getComponent(cc.Animation).play("scoop2");
}, 6.2);
this.scheduleOnce(function() {
var e = cc.find("Canvas/cup");
cc.find("Canvas/scoop0");
e.getComponent(n.default).enabled = !0;
}, 7.2);
this.scheduleOnce(function() {
var e = cc.find("Canvas/cup"), t = cc.find("Canvas/scoop0"), o = t.convertToWorldSpaceAR(cc.v2(-480, -320)), n = cc.find("Canvas/finger");
n.active = !0;
n.setPosition(o);
c.CocosHelper.showHand(n, t, t, e);
t.getComponent(i.default).enabled = !0;
}, 8);
};
t.prototype.touchCancle = function() {};
__decorate([ r(cc.AudioClip) ], t.prototype, "boraxAudio", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"../common/Script/codebase/utils/CocosHelperGS": "CocosHelperGS"
} ],
buttonFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2146FBTVlLK73QLd0ZWrEl", "buttonFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MyCocosHelperFS"), i = e("./DataConfigFS"), c = e("./homeFS"), a = e("../common/Script/codebase/TransitionSceneFS"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {};
t.prototype.touchHome = function(e, t) {
cc.loader.loadRes("flowerslime/home", cc.Prefab, function(t, o) {
if (t) console.log(t + ""); else {
cc.loader.setAutoRelease(o, !1);
var n = cc.instantiate(o);
cc.find("Canvas").addChild(n);
n.getComponent(c.default).setNode(e.target);
n.getComponent(c.default).showPopup();
}
});
cc.loader.loadRes("flowerslime/choose", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoRelease(t, !1);
cc.audioEngine.play(t, !1, .5);
}
});
};
t.prototype.touchMoreGame = function(e, t) {
jsToCPP.getInstance().showMoreGame();
};
t.prototype.touchNext = function(e, t) {
if ("eat" == t) {
e.target.getComponent(cc.Button).interactable = !1;
n.MyCocosHelper.captureNodeSize(cc.find("Canvas/cake"), cc.visibleRect.width, cc.visibleRect.height).then(function(e) {
null == e ? console.log("texture == null") : i.default.getInstance().setTexture(e);
});
} else "pull" == t ? a.default.changeScene("pullSlime0FS", 7) : "click" == t ? a.default.changeScene("clickSlimeFS", 12) : "add" == t && a.default.changeScene("addMatrialFS", 0);
};
t.prototype.touchRestart = function(e, t) {
e.target.getComponent(cc.Button).ineractable = !1;
a.default.changeScene(t, 0);
};
t.prototype.touchBack = function(e, t) {
e.target.getComponent(cc.Button).ineractable = !1;
a.default.changeScene(t, 0);
};
return t = __decorate([ r ], t);
}(cc.Component));
o.default = l;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"./DataConfigFS": "DataConfigFS",
"./MyCocosHelperFS": "MyCocosHelperFS",
"./homeFS": "homeFS"
} ],
buttonGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3c82faJ78dCbb1LNC2IHBwS", "buttonGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/TransitionSceneGS"), i = e("../common/Script/showLaodingGS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {};
t.prototype.backToHall = function() {
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
t.prototype.touchHome = function(e, t) {
e.target.getComponent(cc.Button).interactable = !1;
console.log("touchHome");
this.backToHall();
};
t.prototype.touchMoreGame = function() {
jsToCPP.getInstance().showMoreGame();
};
t.prototype.touchNext = function(e, t) {
console.log("touchNext");
e.target.getComponent(cc.Button).interactable = !1;
if ("backToHall" == t) this.backToHall(); else if ("gameScene5GS" == t) {
i.default.getInstance().loadingDoneCallback = function() {
n.default.changeScene(t, "111");
};
i.default.getInstance().showAds(!0);
} else n.default.changeScene(t, "111");
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneGS": "TransitionSceneGS",
"../common/Script/showLaodingGS": "showLaodingGS"
} ],
chooseGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "938326n+OZAeZJiUaoSp7FU", "chooseGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("./DataConfigGS"), c = e("../common/Script/codebase/TransitionSceneGS"), a = e("../common/Script/IconItemGS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.DelayTime = 0;
t.JumpAudio = null;
t.ChooseAudio = null;
t.tag = 0;
return t;
}
t.prototype.onLoad = function() {
this.scheduleOnce(this.Jump, this.DelayTime);
this.scheduleOnce(function() {
this.node.getComponent(n.default).enabled = !0;
this.node.getChildByName("Button").getComponent(cc.Button).enabled = !0;
0 == this.node.parent.getComponent(cc.ScrollView).enabled && (this.node.parent.getComponent(cc.ScrollView).enabled = !0);
var e = this.node.parent.getChildByName("boraxParticle"), t = this.node.parent.getChildByName("boraxParticle1");
e.active = !0;
t.active = !0;
var o = this.node.parent.convertToNodeSpaceAR(cc.v2(cc.view.getVisibleSize().width / 2, cc.view.getVisibleSize().height / 2));
e.setPosition(cc.v2(o.x + 20, o.y + 20));
t.setPosition(cc.v2(o.x - 20, o.y + 10));
}, 11);
};
t.prototype.start = function() {};
t.prototype.Jump = function() {
var e = cc.view.getVisibleSize(), t = cc.jumpTo(1.1, cc.v2(e.width / 4, 0), 180, 1), o = cc.jumpTo(.55, cc.v2(e.width / 1.4, 0), 180, 1), n = cc.moveTo(.3, cc.v2(e.width + this.node.getContentSize().width, 0)), i = cc.callFunc(function() {
cc.audioEngine.play(this.JumpAudio, !1, .5);
}.bind(this)), c = cc.scaleTo(.1, 1, .9), s = cc.scaleTo(.1, 1, 1), r = cc.scaleTo(.11, .82, 1), l = cc.scaleTo(.1, 1, .86), d = cc.scaleTo(.09, .88, 1), u = cc.scaleTo(.08, 1, .89), p = cc.scaleTo(.07, 1), h = cc.delayTime(.5), f = cc.delayTime(.2), g = this, m = cc.sequence(t, c, s, f, i, o, r, l, d, u, p, h, n, cc.callFunc(function() {
console.log("IconItem");
var e = g.node.getComponent(a.default);
e && e.init();
}), h);
this.node.runAction(m);
};
t.prototype.choose = function(e, t) {
for (var o = function(e) {
var o = n.node.parent.children, a = o[e].getChildByName("Button");
a && (a.getComponent(cc.Button).interactable = !1);
if (o[e].getComponent("chooseGS").tag != t) {
var s = cc.moveBy(.7, cc.v2(0, cc.view.getVisibleSize().height));
o[e].runAction(s);
} else {
i.default.getInstance().setTag(e);
switch (e) {
case 0:
i.default.getInstance().setName("bowl_blue_stir");
i.default.getInstance().setBodyName("blue");
break;

case 1:
i.default.getInstance().setName("bowl_cyan_stir");
i.default.getInstance().setBodyName("cyan");
break;

case 2:
i.default.getInstance().setName("bowl_green_stir");
i.default.getInstance().setBodyName("green");
break;

case 3:
i.default.getInstance().setName("bowl_purple_stir");
i.default.getInstance().setBodyName("purple");
break;

case 4:
i.default.getInstance().setName("bowl_red_stir");
i.default.getInstance().setBodyName("red");
break;

case 5:
i.default.getInstance().setName("bowl_yellow_stir");
i.default.getInstance().setBodyName("yellow");
}
n.scheduleOnce(function() {
var t = this.node.parent.convertToNodeSpaceAR(cc.v2(cc.view.getVisibleSize().width / 2, cc.view.getVisibleSize().height / 2)), n = cc.jumpTo(1, t, 150, 1), i = cc.scaleTo(.3, 1, .9), a = cc.scaleTo(.3, 1, 1), s = cc.scaleTo(.11, .82, 1), r = cc.scaleTo(.1, 1, .86), l = cc.scaleTo(.09, .88, 1), d = cc.scaleTo(.08, 1, .89), u = cc.scaleTo(.07, 1), p = cc.callFunc(function() {
cc.audioEngine.play(this.ChooseAudio, !1, .5);
this.node.getChildByName("star").active = !0;
}.bind(this)), h = cc.delayTime(1.5), f = cc.callFunc(function() {
c.default.changeScene("gameSceneGS", "111");
}), g = cc.sequence(i, a, n, s, r, l, d, u, p, h, f);
o[e].runAction(g);
}, 1);
}
}, n = this, a = 0; a < this.node.parent.children.length; ++a) o(a);
};
__decorate([ l({
type: Number
}) ], t.prototype, "DelayTime", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "JumpAudio", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "ChooseAudio", void 0);
__decorate([ l() ], t.prototype, "tag", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/Script/IconItemGS": "IconItemGS",
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/TransitionSceneGS": "TransitionSceneGS",
"./DataConfigGS": "DataConfigGS"
} ],
chooseMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d95f5vQ4kxLVpu6ykzWFRuf", "chooseMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../common/common/Script/compoent/MoveInMS"), c = e("./DataConfigMS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.fly = null;
t.choose = null;
return t;
}
t.prototype.start = function() {
var e = this, t = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0");
t.active = !0;
t.opacity = 0;
t.runAction(cc.sequence(cc.fadeIn(1.5), cc.callFunc(function() {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "star11");
t.active = !0;
t.getComponent(cc.ParticleSystem).resetSystem();
e.show();
}), cc.spawn(cc.jumpBy(1.5, cc.v2(0, 0), 100, 2), cc.rotateBy(1.5, 360))));
};
t.prototype.show = function() {
for (var e = this, t = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0"), o = [ "slime1", "slime2", "slime3", "slime4", "slime5" ], c = function(c) {
var a = o[c], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.position;
s.position = t.position;
s.scale = 0;
s.active = !0;
s.runAction(cc.sequence(cc.delayTime(.5 + .25 * c), cc.callFunc(function() {
s.position = t.position;
cc.audioEngine.playEffect(e.fly, !1);
3 == c && setTimeout(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "font2"), t = e.getComponent(i.default);
e.active = !0;
t.enabled = !0;
t.actionCallBack = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
};
}, 1e3);
}), cc.spawn(cc.moveTo(1.5, r).easing(cc.easeElasticOut(.5)), cc.scaleTo(1, 1))));
}, a = 0; a < o.length; a++) c(a);
};
t.prototype.touchSlime = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
cc.audioEngine.playEffect(this.choose, !1);
if ("slime0" == o.name) {
var n = o.rotation;
n = 0 == n ? 45 : 0;
o.runAction(cc.sequence(cc.rotateTo(.5, n), cc.callFunc(function() {
o.getComponent(cc.Button).interactable = !0;
})));
} else {
var i = o.scale, c = cc.scaleTo(.132, .82 * i, i), a = cc.scaleTo(.12, i, .86 * i), s = cc.scaleTo(.108, .88 * i, i), r = cc.scaleTo(.096, i, .89 * i), l = cc.scaleTo(.084, i), d = cc.callFunc(function() {
o.getComponent(cc.Button).interactable = !0;
}, this), u = cc.sequence(c, a, s, r, l, d);
o.runAction(u);
}
};
t.prototype.touchNet = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
var t = cc.view.getVisibleSize().width, o = cc.view.getVisibleSize().height;
n.CocosHelper.captureNodeSize(cc.Canvas.instance.node, t, o).then(function(e) {
if (null == e) ; else {
c.default.getInstance().setPageTexture(e);
cc.director.loadScene("make1SceneMS");
}
});
};
__decorate([ r(cc.Label) ], t.prototype, "label", void 0);
__decorate([ r ], t.prototype, "text", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "fly", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "choose", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./DataConfigMS": "DataConfigMS"
} ],
chooseNew: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4a24ddn3QJG4oUM3K474e4t", "chooseNew");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/TransitionScene_my"), i = e("../common/Script/codebase/utils/CocosHelper"), c = e("../cakebatter/common/Script/MoveInCB"), a = e("../common/Script/ads/showLaoding"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.choose = null;
t.buttonArray = [ "batter_slime", "craxy_emoji_slime", "makeup_slime" ];
return t;
}
t.prototype.start = function() {
var e = this, t = this.buttonArray[0];
i.CocosHelper.findNode(cc.Canvas.instance.node, t).getComponent(c.default).actionCallBack = function() {
for (var t = function(t) {
var o = e.buttonArray[t], n = i.CocosHelper.findNode(cc.Canvas.instance.node, o), c = n.getChildByName("light");
c && c.runAction(cc.repeatForever(cc.rotateBy(.5, 100 * Math.random())));
var a = n.getChildByName(n.name + "_logo");
if (a) {
a.active = !0;
a.scale = 0;
var s = t % 2 == 0 ? 1 : -1;
a.runAction(cc.sequence(cc.spawn(cc.rotateBy(.5, 360 * s), cc.scaleTo(.5, 1)), cc.callFunc(function() {
-1 == s ? a.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1.2, cc.v2(0, -10)), cc.moveBy(1.2, cc.v2(0, 10))))) : a.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1.5, 1.2), cc.scaleTo(1.5, 1))));
})));
}
}, o = 0; o < e.buttonArray.length; o++) t(o);
};
};
t.prototype.chooseItemBtn = function(e) {
var t = this;
cc.audioEngine.playEffect(this.choose, !1);
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
for (var n = 0; n < this.buttonArray.length; n++) {
var c = this.buttonArray[n], s = i.CocosHelper.findNode(cc.Canvas.instance.node, c), r = o.getComponent(cc.Button);
r && (r.interactable = !1);
c != o.name && s.runAction(cc.fadeOut(1));
}
o.runAction(cc.sequence(cc.spawn(cc.jumpTo(1, cc.v2(0, -30), 50, 1), cc.scaleTo(1, 1.2)), cc.delayTime(1), cc.callFunc(function() {
cc.audioEngine.stopMusic();
a.default.getInstance().showAds(!1);
a.default.getInstance().loadingDoneCallback = function() {
a.default.getInstance().loadingDoneCallback = null;
t.goToNext(o.name);
};
})));
};
t.prototype.touchHome = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
cc.sys.localStorage.setItem("fromHall", 11);
cc.sys.garbageCollect();
cc.game.restart();
};
t.prototype.goToNext = function(e) {
if ("chiristmas_slime" == e) {
n.default.changeScene("mainCS", "ttt");
!0;
}
if ("makeup_slime" == e) {
n.default.changeScene("homeSceneMS", "ttt");
!0;
}
if ("batter_slime" == e) {
n.default.changeScene("batter_slime", "ttt");
!0;
}
if ("glitter_slime" == e) {
n.default.changeScene("glitter_slime", "ttt");
!0;
}
if ("chocolate_slime" == e) {
n.default.changeScene("chocolate_slime", "ttt");
!0;
}
if ("rainbow_slime" == e) {
n.default.changeScene("rainbow_slime", "ttt");
!0;
}
if ("dark_slime" == e) {
n.default.changeScene("dark_slime", "ttt");
!0;
}
if ("craxy_emoji_slime" == e) {
n.default.changeScene("homeCE", "ttt");
!0;
}
if ("flower_slime" == e) {
n.default.changeScene("homeFS", "ttt");
!0;
}
if ("galaxy_slime" == e) {
n.default.changeScene("homeGL", "ttt");
!0;
}
if ("rainbowpoop_slime" == e) {
n.default.changeScene("homeRP", "ttt");
!0;
}
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "choose", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../cakebatter/common/Script/MoveInCB": "MoveInCB",
"../common/Script/ads/showLaoding": "showLaoding",
"../common/Script/codebase/utils/CocosHelper": "CocosHelper",
"../common/uitls/TransitionScene_my": "TransitionScene_my"
} ],
cupGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ea04faRIIVNv40RQD4clF73", "cupGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), i = e("../common/Script/MoveInGS"), c = e("../common/Script/CombinedComponent/MixComponentGS"), a = e("../common/Script/CombinedComponent/BlenderMixGS"), s = e("../common/Script/codebase/TransitionSceneGS"), r = e("../common/Script/codebase/utils/CocosHelperGS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mixCom = null;
t.addWater = null;
t.win = null;
t.spoon = null;
t.audioId = -1;
t.audioId2 = -1;
t.index = 0;
t.nextCount = 0;
t.nextCount1 = t.nextCount + 1;
t.currntTime = 0;
t.delayPerUnit = 2.3;
t.isEnter = !1;
return t;
}
t.prototype.start = function() {};
t.prototype.update = function(e) {
this.ListenCount(e);
};
t.prototype.touchStart = function() {
cc.find("Canvas/finger").stopAllActions();
cc.find("Canvas/finger").active = !1;
};
t.prototype.spoonTouchStart = function() {
cc.find("Canvas/bowl/node/star").active = !0;
this.audioId2 = cc.audioEngine.play(this.spoon, !0, .5);
};
t.prototype.spoonTouchEnd = function() {
cc.audioEngine.stop(this.audioId2);
};
t.prototype.sceneEnd = function() {
cc.audioEngine.stop(this.audioId2);
cc.audioEngine.play(this.win, !1, .5);
cc.find("Canvas/bowl/node/star").active = !1;
cc.find("Canvas/bowl/node/star1").active = !0;
cc.find("Canvas/bowl").runAction(cc.moveTo(.5, cc.v2(0, 0)));
var e = cc.moveBy(.5, cc.v2(2 * cc.view.getVisibleSize().width, 0)), t = cc.callFunc(function() {
if (!this.isEnter) {
this.isEnter = !0;
s.default.changeScene("gameScene4GS", "111");
}
}.bind(this)), o = cc.delayTime(.5), n = cc.sequence(e, o, t);
this.node.runAction(n);
};
t.prototype.moveEnd = function() {
this.node.getComponent(n.default).enabled = !1;
var e = cc.moveTo(1.5, cc.v2(-147, 236)), t = cc.rotateTo(1.5, -120), o = cc.callFunc(function() {
this.audioId = cc.audioEngine.play(this.addWater, !0, .5);
this.node.getChildByName("Particle").active = !0;
}.bind(this)), s = cc.callFunc(function() {
this.node.getChildByName("cup_shadow").active = !1;
}.bind(this));
this.node.runAction(e);
var r = cc.sequence(s, t, o);
this.node.runAction(r);
this.scheduleOnce(function() {
cc.find("Canvas/bowl/node").getChildByName("water").runAction(cc.fadeIn(1));
var e = cc.scaleBy(1.5, .99, .85);
this.node.getChildByName("cup_water_mix2").runAction(e);
}, 2.5);
this.scheduleOnce(function() {
cc.audioEngine.stop(this.audioId);
this.node.getChildByName("Particle").active = !1;
var e = cc.moveTo(.8, cc.v2(294, -40)), t = cc.rotateTo(.8, 0), o = cc.callFunc(function() {
this.node.getChildByName("cup_shadow").active = !0;
if (0 == this.index) {
cc.find("Canvas/spoon").getComponent(i.default).enabled = !0;
this.index += 1;
} else {
cc.find("Canvas/spoon").getComponent(n.default).enabled = !0;
cc.find("Canvas/bowl/node").getComponent(c.default).enabled = !0;
cc.find("Canvas/spoon").getComponent(a.default).touchUpBlender();
}
}.bind(this)), s = cc.sequence(t, o);
this.node.runAction(s);
this.node.runAction(e);
}.bind(this), 4.5);
};
t.prototype.ListenCount = function(e) {
if (this.mixCom.count % 2 == 0) {
console.log("assdas");
if (0 == this.mixCom.count || this.nextCount == this.mixCom.count) return;
if (this.mixCom.count >= this.mixCom.mixPaths.length) {
cc.find("Canvas/spoon").getComponent("moveBackGS").enabled = !0;
this.node.getComponent("moveBackGS").enabled = !0;
return;
}
var t = this.node.convertToWorldSpaceAR(cc.v2(-480, -320)), o = cc.find("Canvas/finger");
o.active = !0;
o.setPosition(t);
r.CocosHelper.showHand(o, this.node, this.node, cc.find("Canvas/bowl"));
cc.audioEngine.stop(this.audioId2);
this.nextCount = this.mixCom.count;
cc.find("Canvas/cup").getComponent(n.default).enabled = !0;
cc.find("Canvas/bowl/node").stopAllActions();
cc.find("Canvas/spoon").getComponent(n.default).enabled = !1;
cc.find("Canvas/spoon").getComponent(a.default).enabled = !1;
this.mixCom.enabled = !1;
}
};
t.prototype.opacityFadeOut = function() {
cc.find("Canvas/bowl/node").getChildByName("water").opacity -= 1;
};
__decorate([ u(c.default) ], t.prototype, "mixCom", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "addWater", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "win", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "spoon", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../common/Script/CombinedComponent/BlenderMixGS": "BlenderMixGS",
"../common/Script/CombinedComponent/MixComponentGS": "MixComponentGS",
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"../common/Script/codebase/TransitionSceneGS": "TransitionSceneGS",
"../common/Script/codebase/utils/CocosHelperGS": "CocosHelperGS"
} ],
fallSpriteCompoentMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ec736kV8RxKqYctv4T+pisw", "fallSpriteCompoentMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i, c = e("../common/common/Script/codebase/utils/CocosHelperMS"), a = cc._decorator, s = a.ccclass, r = a.property;
(function(e) {
e[e.eFallSprite = 0] = "eFallSprite";
e[e.eFallParticle = 1] = "eFallParticle";
})(n = o.nodefallType || (o.nodefallType = {}));
(function(e) {
e[e.eInMask = 0] = "eInMask";
e[e.eInSprite = 1] = "eInSprite";
})(i = o.nodeInType || (o.nodeInType = {}));
var l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spritePaths = [];
t.fallBowlInPaths = [];
t.nodeFallType = n.eFallSprite;
t.nodeInType = i.eInMask;
t.rotate = 0;
t.bowlNode = null;
t.isFallMove = !1;
t.nodeInGoodsSpriteFrame = null;
t.nodechangeSpriteFrame = null;
t.offect = cc.v2(0, 0);
t.moveoffect = cc.v2(0, 0);
t.totalTime = 3;
t.audioFall = null;
t.bowlInFall = null;
t.current = -1;
t._blendaction = null;
return t;
}
t.prototype.start = function() {
var e = this, t = (this.node.name, this.bowlNode.convertToWorldSpaceAR(cc.v2(0, 0))), o = cc.v2(this.offect.x + t.x, this.offect.y + t.y), a = this.node.parent.convertToNodeSpaceAR(o), s = this;
this.rotate = -this.rotate;
new cc.Tween().target(this.node).to(1, {
position: a,
rotation: this.rotate
}, null).call(function() {
if (0 != s.fallBowlInPaths.length) {
if (s.bowlInFall) {
s.bowlInFall.active = !0;
s.bowlInFall.opacity = 0;
s.bowlInFall.runAction(cc.sequence(cc.fadeIn(1), cc.callFunc(function() {
for (var e = s.bowlInFall.getComponent(cc.Sprite), t = [], o = function(o) {
t.push(cc.callFunc(function() {
e.spriteFrame = o;
}));
t.push(cc.delayTime(.5));
}, n = 0, i = s.fallBowlInPaths; n < i.length; n++) {
o(i[n]);
}
var c = cc.sequence(t);
s.bowlInFall.runAction(c);
})));
}
} else if (s.bowlInFall) {
s.bowlInFall.active = !0;
s.bowlInFall.opacity = 0;
s.bowlInFall.runAction(cc.sequence(cc.delayTime(.5), cc.fadeIn(e.totalTime - .5)));
}
if (e.nodechangeSpriteFrame) {
(u = e.node.getComponent(cc.Sprite)).spriteFrame = e.nodechangeSpriteFrame;
}
s.actionStartCallBack && s.actionStartCallBack();
e.audioFall && (e.current = cc.audioEngine.play(e.audioFall, !0, 1));
if (e.nodeFallType == n.eFallSprite && null == e._blendaction) {
(d = c.CocosHelper.findNode(e.node, e.node.name + "_fall")).active = !0;
for (var t = d.getComponent(cc.Sprite), o = [], a = function(e) {
o.push(cc.callFunc(function() {
t.spriteFrame = e;
}));
o.push(cc.delayTime(.15));
}, r = 0, l = e.spritePaths; r < l.length; r++) {
a(l[r]);
}
e._blendaction = cc.repeatForever(cc.sequence(o));
d.runAction(e._blendaction);
}
if (e.nodeFallType == n.eFallParticle) {
var d;
(d = c.CocosHelper.findNode(e.node, e.node.name + "_p")).active = !0;
d.getComponent(cc.ParticleSystem).resetSystem();
if (h = c.CocosHelper.findNode(e.node, e.node.name + "_in")) {
h.active = !0;
var u = h.getComponent(cc.Sprite);
if (e.nodeInGoodsSpriteFrame) {
u.spriteFrame = e.nodeInGoodsSpriteFrame;
var p = cc.fadeOut(e.totalTime + .5);
h.runAction(p);
} else {
p = cc.fadeOut(e.totalTime + .5);
h.runAction(p);
}
}
}
if (e.nodeInType == i.eInSprite) {
var h;
if (h = c.CocosHelper.findNode(e.node, e.node.name + "_in")) {
h.active = !0;
u = h.getComponent(cc.Sprite);
e.nodeInGoodsSpriteFrame && (u.spriteFrame = e.nodeInGoodsSpriteFrame);
p = cc.fadeOut(e.totalTime);
h.runAction(p);
}
}
e.nodeInType, i.eInMask;
if (e.isFallMove) {
var f = cc.v2(-e.moveoffect.x, -e.moveoffect.y), g = cc.v2(e.moveoffect.x, e.moveoffect.y), m = cc.moveBy(e.totalTime / 2, f), v = cc.moveBy(e.totalTime / 2, g), C = e, y = cc.sequence(m, v, cc.callFunc(function() {
C.moveOut();
}));
e.node.runAction(y);
} else {
var _ = e;
y = cc.sequence(cc.delayTime(e.totalTime), cc.callFunc(function() {
_.moveOut();
}));
e.node.runAction(y);
}
}).start();
};
t.prototype.moveOut = function() {
var e = this;
cc.audioEngine.stop(this.current);
var t = c.CocosHelper.findNode(e.node, e.node.name + "_p"), o = c.CocosHelper.findNode(e.node, e.node.name + "_fall");
t && (t.active = !1);
o && (o.active = !1);
var n = cc.moveBy(1, cc.v2(1e3, 0)), i = cc.rotateTo(1, 0), a = cc.sequence(cc.spawn(n, i), cc.callFunc(function() {
e.node.active = !1;
e.actionEndCallBack && e.actionEndCallBack();
}));
this.node.runAction(a);
};
__decorate([ r({
type: [ cc.SpriteFrame ],
tooltip: "倒入液体的图片"
}) ], t.prototype, "spritePaths", void 0);
__decorate([ r({
type: [ cc.SpriteFrame ],
tooltip: "倒入碗里面渐变的图片"
}) ], t.prototype, "fallBowlInPaths", void 0);
__decorate([ r({
type: cc.Enum(n),
tooltip: "容器倒入材料效果 粒子或者图片帧动画"
}) ], t.prototype, "nodeFallType", void 0);
__decorate([ r({
type: cc.Enum(i),
tooltip: "容器内材料效果 往下沉或者渐变消失"
}) ], t.prototype, "nodeInType", void 0);
__decorate([ r({
tooltip: "旋转角度"
}) ], t.prototype, "rotate", void 0);
__decorate([ r({
type: cc.Node,
tooltip: "倒入的容器 比如碗"
}) ], t.prototype, "bowlNode", void 0);
__decorate([ r({
tooltip: "是否上下左右移动"
}) ], t.prototype, "isFallMove", void 0);
__decorate([ r({
type: cc.SpriteFrame,
tooltip: "容器内材料是否换图片 比如倒水倒牛奶,旋转之后需要换图片"
}) ], t.prototype, "nodeInGoodsSpriteFrame", void 0);
__decorate([ r({
type: cc.SpriteFrame,
tooltip: "容器是否换图片 比如倒粉, 袋子要换成一个有缺口的"
}) ], t.prototype, "nodechangeSpriteFrame", void 0);
__decorate([ r({
type: cc.Vec2,
tooltip: "以倒入容器比如碗的中点为准，偏移量"
}) ], t.prototype, "offect", void 0);
__decorate([ r({
type: cc.Vec2,
tooltip: "工具的移动偏移量"
}) ], t.prototype, "moveoffect", void 0);
__decorate([ r({
tooltip: "总共的时间"
}) ], t.prototype, "totalTime", void 0);
__decorate([ r({
type: cc.AudioClip,
tooltip: "倒入的音效"
}) ], t.prototype, "audioFall", void 0);
__decorate([ r({
type: cc.Node,
tooltip: "倒入碗里面的东西"
}) ], t.prototype, "bowlInFall", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS"
} ],
gameItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4c512HdKblAQaNQrWcg4QEz", "gameItem");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./GameData"), i = e("../common/uitls/TransitionScene_my"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveAudio = null;
t.nodeName = [ "chocolate_slime", "glitter_slime", "batter_slime", "rainbow_slime", "dark_slime" ];
return t;
}
t.prototype.touchButton = function(e) {
var t = e.target.getComponent(cc.Button);
t && (t.interactable = !1);
cc.loader.loadRes("button_general", cc.AudioClip, function(e, t) {
cc.audioEngine.playEffect(t, !1);
});
var o = !1, c = this.node.name;
if ("chiristmas_slime" == c) {
i.default.changeScene("mainCS", "ttt");
o = !0;
}
if ("makeup_slime" == c) {
i.default.changeScene("homeSceneMS", "ttt");
o = !0;
}
if ("batter_slime" == c) {
i.default.changeScene("batter_slime", "ttt");
o = !0;
}
if ("glitter_slime" == c) {
i.default.changeScene("glitter_slime", "ttt");
o = !0;
}
if ("chocolate_slime" == c) {
i.default.changeScene("chocolate_slime", "ttt");
o = !0;
}
if ("rainbow_slime" == c) {
i.default.changeScene("rainbow_slime", "ttt");
o = !0;
}
if ("dark_slime" == c) {
i.default.changeScene("dark_slime", "ttt");
o = !0;
}
if ("craxy_emoji_slime" == c) {
i.default.changeScene("homeCE", "ttt");
o = !0;
}
if ("flower_slime" == c) {
i.default.changeScene("homeFS", "ttt");
o = !0;
}
if ("galaxy_slime" == c) {
i.default.changeScene("homeGL", "ttt");
o = !0;
}
if ("rainbowpoop_slime" == c) {
i.default.changeScene("homeRP", "ttt");
o = !0;
}
if (o) cc.sys.localStorage.setItem(c + "key", 10); else {
setTimeout(function() {
t && (t.interactable = !0);
}, 1e3);
cc.loader.loadRes("ingredients_fly_in.mp3", cc.AudioClip, function(e, t) {
cc.audioEngine.playEffect(t, !1);
});
n.default.getInstance().showPop("Coming Soon");
}
};
t.prototype.start = function() {
var e = this.node.name;
n.default.getInstance().getIsNewFromName(e);
if (this.node.getChildByName("new")) {
var t = n.default.getInstance().getIsUpStoreByName(e), o = n.default.getInstance().getIsNewFromName(e), i = cc.sys.localStorage.getItem(e + "key");
i || (i = 1);
console.log(t + "isUp");
console.log(o + "isNew");
this.node.getChildByName("new").active = !(!t || 1 != i);
}
};
__decorate([ s(cc.AudioClip) ], t.prototype, "moveAudio", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/uitls/TransitionScene_my": "TransitionScene_my",
"./GameData": "GameData"
} ],
gameScene4GS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fe32bphYt5KSo36t40GgYNp", "gameScene4GS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("./DataConfigGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.mudMoveIn = null;
t.finger = null;
t.hand = null;
t.hole = [];
t.music = null;
t.num = 0;
return t;
}
t.prototype.start = function() {
this.mudMoveIn.actionCallBack = function() {
this.finger.active = !0;
this.mudMoveIn.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.mudMoveIn.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.mudMoveIn.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
}.bind(this);
this.InitColor();
};
t.prototype.touchStart = function(e) {
this.hand.stopAllActions();
this.finger.active = !1;
var t = this.node.convertToNodeSpaceAR(e.getLocation()), o = cc.moveTo(.3, t), n = cc.callFunc(function() {
cc.audioEngine.play(this.music, !1, .5);
var t = this.mudMoveIn.node.convertToNodeSpaceAR(e.getLocation());
this.addHole(t);
}.bind(this)), i = cc.delayTime(.1), c = cc.moveBy(.7, cc.v2(0, 100)), a = cc.sequence(o, n, i, c);
this.hand.runAction(a);
};
t.prototype.touchEnd = function(e) {};
t.prototype.addHole = function(e) {
for (var t = Math.floor(2 * Math.random()), o = cc.instantiate(this.hole[t]), n = function(e) {
cc.loader.loadRes("glitterslime/hole/" + i.default.getInstance().getBodyName(), cc.SpriteFrame, function(t, n) {
if (t) console.log(t + ""); else {
o.children[e].getComponent(cc.Sprite).spriteFrame = n;
cc.loader.setAutoRelease(n, !0);
}
}.bind(c));
}, c = this, a = 0; a < t + 2; ++a) n(a);
o.setPosition(e);
this.mudMoveIn.node.addChild(o);
this.num += 1;
};
t.prototype.InitColor = function() {
cc.loader.loadRes("glitterslime/pinch/" + i.default.getInstance().getBodyName(), cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
this.mudMoveIn.node.getChildByName("mud").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}.bind(this));
};
t.prototype.update = function(e) {
if (this.num >= 5) {
this.node.getChildByName("star").active = !0;
cc.find("Canvas/menu/next").active = !0;
}
};
__decorate([ s({
type: n.default
}) ], t.prototype, "mudMoveIn", void 0);
__decorate([ s(cc.Node) ], t.prototype, "finger", void 0);
__decorate([ s(cc.Node) ], t.prototype, "hand", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "hole", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "music", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"./DataConfigGS": "DataConfigGS"
} ],
gameScene5GS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "269a483w61DCb0ZqhmmgMNq", "gameScene5GS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("../common/Script/codebase/utils/CocosHelperGS"), c = e("./DataConfigGS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.music = null;
t.help = [];
t.mud = null;
t.hand0 = null;
t.hand1 = null;
t.hand2 = null;
t.hand3 = null;
t.hand4 = null;
t.round = -1;
t.toBig = !1;
t.toSmall = !1;
t.can = !1;
t.num = 0;
return t;
}
t.prototype.start = function() {
this.initColor();
this.hand0.getComponent(n.default).actionCallBack = function() {
this.help[0].active = !0;
this.help[1].active = !0;
this.help[2].active = !0;
i.CocosHelper.showHand(this.help[0], this.help[2], this.help[2], this.help[1]);
this.node.getChildByName("pinch").on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.node.getChildByName("pinch").on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.getChildByName("pinch").on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.getChildByName("pinch").on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
}.bind(this);
};
t.prototype.touchStart = function(e) {
this.help[0].stopAllActions();
this.help[0].active = !1;
this.help[1].active = !1;
this.help[2].active = !1;
cc.audioEngine.play(this.music, !1, .5);
};
t.prototype.touchMove = function(e) {
this.hand0.active = !1;
this.hand1.active = !1;
this.hand2.active = !1;
this.hand3.active = !1;
this.node.getChildByName("heart1").active = !0;
this.node.getChildByName("heart2").active = !0;
var t = e.getStartLocation(), o = e.getLocation(), n = t.sub(o).mag();
if (n > 0 && n < 40) {
this.round = 0;
this.hand0.active = !0;
this.hand1.active = !1;
this.hand2.active = !1;
this.hand3.active = !1;
this.hand4.active = !1;
var i = cc.scaleTo(.2, 1, 1.05), c = cc.scaleTo(.2, 1, 1.05);
this.mud.runAction(i);
this.hand0.runAction(c);
} else if (n >= 40 && n <= 80) {
this.round = 1;
this.mud.scale = .9;
this.hand0.active = !1;
this.hand1.active = !0;
for (var a = 0; a < 4; ++a) this.hand1.children[a].scale = 1;
this.hand2.active = !1;
this.hand3.active = !1;
this.hand4.active = !1;
} else if (n > 80 && n < 120) {
this.round = 2;
this.hand0.active = !1;
this.hand1.active = !1;
this.hand2.active = !0;
for (a = 0; a < 4; ++a) this.hand2.children[a].scale = 1;
this.hand3.active = !1;
this.hand4.active = !1;
} else if (n >= 120) {
this.round = 3;
this.hand0.active = !1;
this.hand1.active = !1;
this.hand2.active = !1;
this.hand3.active = !0;
this.hand4.active = !1;
for (a = 0; a < 4; ++a) this.hand3.children[a].scale = 1;
this.toBig = !0;
this.toSmall = !1;
} else console.log("111!!!");
};
t.prototype.touchEnd = function(e) {
this.node.getChildByName("heart1").active = !1;
this.node.getChildByName("heart2").active = !1;
switch (this.round) {
case 1:
this.handCancle(this.hand1);
break;

case 2:
this.handCancle(this.hand2);
break;

case 3:
this.handCancle(this.hand3);
break;

case 0:
this.hand0Cancle();
break;

default:
this.hand1Cancle();
}
};
t.prototype.Big = function() {
for (var e = 0; e < 4; ++e) {
this.hand3.children[e].scale += .002;
if (this.hand3.children[e].scale >= 1.1) {
this.hand3.children[e].scale = 1.1;
this.toBig = !1;
this.toSmall = !0;
}
}
this.mud.scale -= .02;
this.mud.scale <= .8 && (this.mud.scale = .8);
};
t.prototype.Small = function() {
for (var e = 0; e < 4; ++e) {
this.hand3.children[e].scale -= .002;
if (this.hand3.children[e].scale <= 1) {
this.hand3.children[e].scale = 1;
this.toSmall = !1;
}
}
this.mud.scale += .001;
this.mud.scale >= .9 && (this.mud.scale = .9);
};
t.prototype.handCancle = function(e) {
this.mud.runAction(cc.scaleTo(.3, 1));
for (var t = 0; t < 4; ++t) e.children[t].runAction(cc.scaleTo(.3, 0));
this.scheduleOnce(function() {
e.active = !1;
this.hand0.active = !0;
}.bind(this), .3);
this.toSmall = !1;
this.toBig = !1;
this.num += 1;
};
t.prototype.hand0Cancle = function() {
if (0 == this.round) {
this.mud.runAction(cc.scaleTo(.3, 1));
cc.scaleTo(.3, 1);
var e = cc.callFunc(function() {
this.hand0.active = !1;
}.bind(this)), t = cc.callFunc(function() {
this.hand4.active = !0;
}.bind(this));
this.hand0.runAction(cc.sequence(e, t));
this.scheduleOnce(function() {
this.hand4.active = !1;
this.hand0.active = !0;
}.bind(this), .5);
}
};
t.prototype.hand1Cancle = function() {
if (-1 == this.round) {
console.log("1!!!@!@");
this.mud.runAction(cc.scaleTo(.2, 1, .95));
this.hand0.runAction(cc.scaleTo(.2, 1, .95));
var e = cc.callFunc(function() {
this.hand0.active = !1;
}.bind(this)), t = cc.callFunc(function() {
this.hand4.active = !0;
}.bind(this));
this.hand0.runAction(cc.sequence(e, t));
this.scheduleOnce(function() {
this.mud.runAction(cc.scaleTo(.2, 1, 1));
this.hand0.runAction(cc.scaleTo(.2, 1, 1));
this.hand4.active = !1;
this.hand0.active = !0;
}.bind(this), .3);
}
};
t.prototype.initColor = function() {
cc.loader.loadRes("glitterslime/pinch/" + c.default.getInstance().getBodyName(), cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
this.mud.getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}.bind(this));
for (var e = function(e) {
cc.loader.loadRes("glitterslime/pinch/hand1/" + c.default.getInstance().getBodyName() + e, cc.SpriteFrame, function(t, o) {
console.log(this.hand1.children[e].name);
if (t) console.log(t + ""); else {
this.hand1.children[e].getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}
}.bind(t));
}, t = this, o = 0; o < 4; ++o) e(o);
var n = function(e) {
cc.loader.loadRes("glitterslime/pinch/hand2/" + c.default.getInstance().getBodyName() + e, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
this.hand2.children[e].getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}
}.bind(i));
}, i = this;
for (o = 0; o < 4; ++o) n(o);
var a = function(e) {
cc.loader.loadRes("glitterslime/pinch/hand3/" + c.default.getInstance().getBodyName() + e, cc.SpriteFrame, function(t, o) {
if (t) console.log(t + ""); else {
this.hand3.children[e].getComponent(cc.Sprite).spriteFrame = o;
cc.loader.setAutoRelease(o, !0);
}
}.bind(s));
}, s = this;
for (o = 0; o < 4; ++o) a(o);
};
t.prototype.update = function(e) {
this.toSmall && this.Small();
this.toBig && this.Big();
this.num >= 3 && (cc.find("Canvas/menu/next").active = !0);
};
__decorate([ r(cc.AudioClip) ], t.prototype, "music", void 0);
__decorate([ r(cc.Node) ], t.prototype, "help", void 0);
__decorate([ r(cc.Node) ], t.prototype, "mud", void 0);
__decorate([ r(cc.Node) ], t.prototype, "hand0", void 0);
__decorate([ r(cc.Node) ], t.prototype, "hand1", void 0);
__decorate([ r(cc.Node) ], t.prototype, "hand2", void 0);
__decorate([ r(cc.Node) ], t.prototype, "hand3", void 0);
__decorate([ r(cc.Node) ], t.prototype, "hand4", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/utils/CocosHelperGS": "CocosHelperGS",
"./DataConfigGS": "DataConfigGS"
} ],
gameSceneMG: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "46e4cTZ+GZDZoPt72lhB+d2", "gameSceneMG");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/CocosHelper_my"), i = e("../common/uitls/TransitionScene_my"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.playMusicAudio = null;
t.btnAudio = null;
return t;
}
t.prototype.start = function() {
cc.audioEngine.stopMusic();
cc.audioEngine.playMusic(this.playMusicAudio, !0);
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "logo");
e && e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)))));
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "table");
if (t) {
var o = t.getChildByName("slime1");
o && o.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1.5, 1.08), cc.scaleTo(1.5, 1))));
}
};
t.prototype.touchMap = function() {
this.btnAudio && cc.audioEngine.playEffect(this.btnAudio, !1);
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
t.prototype.touchplay = function(e, t) {
this.btnAudio && cc.audioEngine.playEffect(this.btnAudio, !1);
"batter_slime" == t && i.default.changeScene("makeActivatorCB", "ttt");
"glitter_slime" == t && i.default.changeScene("chooseSceneGS", "ttt");
"chocolate_slime" == t && i.default.changeScene("makeSculpeyHC", "ttt");
"rainbow_slime" == t && i.default.changeScene("makeWaterRS", "ttt");
"dark_slime" == t && i.default.changeScene("makeWaterSD", "ttt");
};
__decorate([ s(cc.AudioClip) ], t.prototype, "playMusicAudio", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "btnAudio", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"../common/uitls/TransitionScene_my": "TransitionScene_my"
} ],
homeBtnMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7b0fefkixhAhY6vh+jMngwF", "homeBtnMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {};
t.prototype.touchHome = function() {
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
__decorate([ c(cc.Label) ], t.prototype, "label", void 0);
__decorate([ c ], t.prototype, "text", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
homeFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b211f4+1+9PlYEB04UjaGHD", "homeFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._node = null;
return t;
}
t.prototype.setNode = function(e) {
this._node = e;
};
t.prototype.showPopup = function(e) {
this._node.getComponent(cc.Button).interactable = !1;
this.node.active = !0;
this.node.setScale(0);
this.node.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.05, 1)));
};
t.prototype.hidePopup = function(e) {
var t = e.target;
t.getComponent(cc.AudioSource) && t.getComponent(cc.AudioSource).play();
this.node.runAction(cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.5, 0), cc.callFunc(function() {
this._node.getComponent(cc.Button).interactable = !0;
this.node.destroy();
}.bind(this))));
};
t.prototype.setTip = function(e) {
this.node.getChildByName("tip").getComponent(cc.Label).string = e;
};
t.prototype.okClick = function(e) {
if (e.target) {
var t = e.target.getComponent(cc.Button);
t && (t.interactable = !1);
}
cc.audioEngine.stopMusic();
cc.sys.localStorage.setItem("fromHall", 10);
cc.sys.garbageCollect();
cc.game.restart();
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
homeMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c3a2bZRK2pIvKaplK3KmWkZ", "homeMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/ads/showLaodingMS"), i = e("../common/common/Script/codebase/utils/CocosHelperMS"), c = e("../common/common/Script/compoent/MoveInMS"), a = e("./DataConfigMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
var e = this;
a.default.getInstance().playMusic();
jsToCPP.getInstance().setEmailContentAndTitle("Makeup Slime", " Check outmy makeup slime. So many makeups to add into the slime and crazy rainbow slime fun. Let's play together.");
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "cosmetics6");
t.active = !0;
t.opacity = 0;
t.runAction(cc.sequence(cc.fadeIn(1.5), cc.callFunc(function() {
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl");
t.active = !0;
var o = t.getComponent(c.default);
o.enabled = !0;
o.actionCallBack = function() {
e.show1();
};
})));
};
t.prototype.show1 = function() {
for (var e = this, t = function(t) {
var o = "cosmetics" + t, n = i.CocosHelper.findNode(cc.Canvas.instance.node, o);
n.active = !0;
var a = n.getComponent(c.default);
a.delayTime = .75 * t;
a.enabled = !0;
a.actionCallBack = function() {
5 == t && e.show2();
};
}, o = 0; o < 6; o++) t(o);
};
t.prototype.show2 = function() {
var e = this, t = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"), o = t.getChildByName("bowl_slime_"), n = t.getChildByName("slime1");
o.active = !0;
o.opacity = 0;
n.active = !0;
n.opacity = 0;
o.runAction(cc.sequence(cc.fadeIn(1.5), cc.callFunc(function() {
e.show3();
})));
n.runAction(cc.sequence(cc.delayTime(1), cc.fadeIn(1.5), cc.callFunc(function() {})));
};
t.prototype.show3 = function() {
var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "logo");
e.active = !0;
var t = e.getComponent(c.default);
t.enabled = !0;
t.actionCallBack = function() {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(2, cc.v2(0, 10)), cc.moveBy(2, cc.v2(0, -10)))));
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "play");
t.active = !0;
var o = t.getComponent(c.default);
o.enabled = !0;
o.actionCallBack = function() {};
};
};
t.prototype.touchPlay = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.getComponent(cc.AudioSource) && o.getComponent(cc.AudioSource).play();
n.default.getInstance().showAds(!1);
n.default.getInstance().loadingDoneCallback = function() {
console.log("广告关闭");
n.default.getInstance().loadingDoneCallback = null;
a.default.getInstance().setIsHome("111");
cc.director.loadScene("selectSceneMS");
};
};
t.prototype.touchUrl = function() {
console.log("https://www.crazycampmedia.com/privacys/");
jsToCPP.getInstance().openUrl("http://www.fungalaxymedia.com/privacys/");
};
t.prototype.touchMore = function() {
console.log("touchMore");
jsToCPP.getInstance().showMoreGame();
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/common/Script/ads/showLaodingMS": "showLaodingMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./DataConfigMS": "DataConfigMS"
} ],
home: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0db33/hUCVEI7hpU2wWdSQ/", "home");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/CocosHelper_my"), i = e("../common/uitls/TransitionScene_my"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.unicornWingAnimation = [];
t.unicornAnimation = [];
t.touchAudio = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_moregame");
e.active = !0;
e.opacity = 0;
e.runAction(cc.sequence(cc.fadeIn(2), cc.callFunc(function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "logo").runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)))));
})));
};
t.prototype.touchHome = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
cc.audioEngine.playEffect(this.touchAudio, !1);
i.default.changeScene("chooseNew", "t");
};
t.prototype.touchMore = function(e) {
cc.audioEngine.playEffect(this.touchAudio, !1);
jsToCPP.getInstance().showMoreGame();
};
t.prototype.touchUrl = function(e) {
cc.sys.platform == cc.sys.ANDROID ? jsToCPP.getInstance().openUrl("https://www.kidskitchenfunmedia.com/privacys/") : jsToCPP.getInstance().openUrl("https://www.crazykidsgamesmedia.com/privacys/");
};
__decorate([ s(cc.Label) ], t.prototype, "label", void 0);
__decorate([ s({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "unicornWingAnimation", void 0);
__decorate([ s({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "unicornAnimation", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "touchAudio", void 0);
__decorate([ s ], t.prototype, "text", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/uitls/CocosHelper_my": "CocosHelper_my",
"../common/uitls/TransitionScene_my": "TransitionScene_my"
} ],
iosTouch: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "07ec5dqekZORJCikWHTI/qB", "iosTouch");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/uitls/TransitionScene_my"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {};
t.prototype.touchUrl = function() {
cc.sys.platform == cc.sys.ANDROID ? jsToCPP.getInstance().openUrl("https://www.kidskitchenfunmedia.com/privacys/") : jsToCPP.getInstance().openUrl("https://www.crazykidsgamesmedia.com/privacys/");
};
t.prototype.touchStart = function(e, t) {
e.target.getComponent(cc.Button).interactable = !1;
n.default.changeScene("home", "temp");
cc.loader.loadRes("button_general.mp3", cc.AudioClip, function(e, t) {
cc.audioEngine.play(t, !1, 1);
});
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/uitls/TransitionScene_my": "TransitionScene_my"
} ],
kettleGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "788ac6P+1pAeZbJ6OZseWAe", "kettleGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.addWater = null;
t.spoon = null;
t.win = null;
t.audioManger = -1;
t.audioManger1 = -1;
t.stop = !1;
t.Volume = 1;
t.zeropos = cc.v2(-354, -52);
return t;
}
t.prototype.start = function() {};
t.prototype.touchStart = function() {
cc.find("Canvas/finger").stopAllActions();
cc.find("Canvas/finger").active = !1;
};
t.prototype.spoonTouchStart = function(e) {
cc.find("Canvas/finger").stopAllActions();
cc.find("Canvas/finger").active = !1;
cc.find("Canvas/bowl/node/star3").active = !0;
this.audioManger1 = cc.audioEngine.play(this.spoon, !0, 1);
};
t.prototype.spoonTouchEnd = function(e, t) {
cc.find("Canvas/bowl/node").stopAllActions();
cc.audioEngine.stop(this.audioManger1);
};
t.prototype.spoonTouchStartScene2 = function(e, t) {
cc.find("Canvas/cup/heart1").active = !0;
this.audioManger1 = cc.audioEngine.play(this.spoon, !0, 1);
};
t.prototype.spoonTouchEndScene2 = function(e, t) {
cc.find("Canvas/cup/heart1").active = !1;
cc.audioEngine.stop(this.audioManger1);
};
t.prototype.touchEnd = function(e) {
this.move();
this.waterFadeIn();
};
t.prototype.touchEndScene2 = function(e, t) {
t.enabled = !1;
this.node.getComponent(cc.Animation).play();
this.scheduleOnce(function() {
this.audioManger = cc.audioEngine.play(this.addWater, !0, 1);
this.node.getChildByName("water1").active = !1;
this.node.getChildByName("water2").active = !0;
this.node.parent.getChildByName("cup0").zIndex = 0;
this.node.zIndex = 1;
this.node.parent.getChildByName("cup1").zIndex = 2;
}, 1);
this.scheduleOnce(function() {
this.node.getChildByName("water2").runAction(cc.fadeOut(1));
cc.find("Canvas/cup").getChildByName("stir").getChildByName("cup_water").runAction(cc.fadeIn(1));
}, 1.5);
this.scheduleOnce(function() {
cc.audioEngine.stop(this.audioManger);
var e = cc.moveBy(.5, cc.v2(cc.view.getVisibleSize().width, 0)), t = cc.rotateTo(.2, 0), o = cc.sequence(t, e);
this.node.runAction(o);
}, 4);
this.scheduleOnce(function() {
cc.find("Canvas/cup").getChildByName("spoon3").getComponent(n.default).enabled = !0;
}, 5);
};
t.prototype.move = function() {
var e = cc.find("Canvas/bowl");
this.node.getComponent(i.default).enabled = !1;
this.node.getChildByName("water_shadow").active = !1;
var t = cc.moveTo(.7, cc.v2(e.position.x + 50, e.position.y + e.getContentSize().height / 2)), o = cc.rotateTo(.7, -110), n = cc.callFunc(function() {
this.node.getChildByName("particle").active = !0;
this.node.getChildByName("water1").active = !1;
this.node.getChildByName("water2").active = !0;
this.node.getChildByName("water2").runAction(cc.fadeOut(1));
this.scheduleOnce(function() {
this.audioManger = cc.audioEngine.play(this.addWater, !0, 1);
}.bind(this), .2);
}.bind(this)), c = cc.moveBy(1, cc.v2(0, -70)), a = cc.moveBy(1, cc.v2(0, 70)), s = cc.sequence(o, n, c, a);
this.node.runAction(t);
this.node.runAction(s);
};
t.prototype.waterFadeIn = function() {
var e = cc.find("Canvas/bowl/node/water");
e.scale = .5;
var t = cc.fadeIn(1), o = cc.scaleTo(2, 1), i = cc.sequence(t, o);
e.runAction(i);
this.scheduleOnce(function() {
this.node.getChildByName("particle").active = !1;
this.stop = !0;
var e = cc.rotateTo(.8, 0), t = cc.moveBy(.8, cc.v2(cc.view.getVisibleSize().width, 0)), o = cc.callFunc(function() {
cc.find("Canvas/spoon0").getComponent(n.default).enabled = !0;
}.bind(this)), i = cc.sequence(e, t, o);
this.node.runAction(i);
}, 4);
};
t.prototype.SceneEnd = function() {
cc.audioEngine.stop(this.audioManger1);
cc.find("Canvas/bowl/node").getChildByName("star3").active = !1;
cc.audioEngine.play(this.win, !1, .5);
cc.find("Canvas/finish").active = !0;
};
t.prototype.Scene2End = function() {
cc.audioEngine.stop(this.audioManger1);
var e = cc.find("Canvas/cup");
e.getChildByName("heart1").active = !1;
cc.audioEngine.play(this.win, !1, .5);
e.getChildByName("star").active = !0;
};
t.prototype.update = function(e) {
if (this.stop) {
this.Volume -= e;
if (this.Volume <= 0) {
cc.audioEngine.stop(this.audioManger);
return;
}
cc.audioEngine.setVolume(this.audioManger, this.Volume);
}
};
__decorate([ s(cc.AudioClip) ], t.prototype, "addWater", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "spoon", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "win", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS"
} ],
loadingCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b14991gXEdEDJiawiA3rafZ", "loadingCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperCE"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
jsToCPP.getInstance().showBanner();
jsToCPP.getInstance().setEmailContentAndTitle("Crazy Emoji Slime ", "Happy Holiday. Wanna have some difference during the holiday? Look at this crazy emoji monster. He can eat the liquid slime. It's so crazy. Let's have fun playing with the monsters.");
cc.sys.localStorage.setItem("isDone", "");
setTimeout(function() {
cc.director.loadScene("home");
}, 8e3);
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "android");
e.active = !0;
var t = e.getChildByName("logo");
if (t) {
var o = t.getComponent("MoveIn");
o && (o.actionCallBack = function() {
var t = e.getChildByName("food1"), o = e.getChildByName("food2"), n = e.getChildByName("food3");
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
t.active = !0;
}), cc.delayTime(.25), cc.callFunc(function() {
o.active = !0;
}), cc.delayTime(.25), cc.callFunc(function() {
n.active = !0;
}), cc.delayTime(.25)));
});
}
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperCE": "CocosHelperCE"
} ],
loadingFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b212ddT0JZOh6ENOw5W+Zkt", "loadingFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../script/MyMoveInFS"), i = e("../../common/Script/codebase/TransitionSceneFS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.in = null;
t.run = !1;
return t;
}
t.prototype.start = function() {
var e = this;
this.scheduleOnce(function() {
console.log("_hideNativeSplash");
e._hideNativeSplash();
}, 1);
var t = this.node.getChildByName("mid1");
t.getComponent(n.default).actionCallBack = function() {
t.getChildByName("mid").getComponent(cc.Animation).play();
t.getChildByName("ballon0").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(2, 10), cc.rotateBy(2, -10))));
t.getChildByName("ballon1").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(2, -7), cc.rotateBy(2, 10))));
t.getChildByName("ballon2").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(2, 5), cc.rotateBy(2, -9))));
t.getChildByName("ballon3").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(2, -6), cc.rotateBy(2, 11))));
var o = e.node.getChildByName("down");
o.active = !0;
o.getChildByName("loading1").runAction(cc.repeatForever(cc.rotateBy(.1, 10)));
o.getChildByName("loading3").runAction(cc.repeatForever(cc.rotateBy(.06, 10)));
o.getChildByName("loading4").runAction(cc.repeatForever(cc.rotateBy(.08, 10)));
o.getChildByName("loading2").runAction(cc.repeatForever(cc.sequence(cc.rotateBy(.6, 65), cc.rotateBy(.6, -65))));
setTimeout(function() {
i.default.changeScene("home", 0);
}, 4500);
};
};
t.prototype._hideNativeSplash = function() {
if (cc.sys.os == cc.sys.OS_ANDROID) {
cc.log("=====static hide ");
jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "hideSplash", "()V");
}
};
t.prototype.update = function(e) {};
__decorate([ s(cc.AudioClip) ], t.prototype, "in", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../../common/Script/codebase/TransitionSceneFS": "TransitionSceneFS",
"../../script/MyMoveInFS": "MyMoveInFS"
} ],
loadingGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b19991gXEdEDJiawiA3rafZ", "loadingGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperGL"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
jsToCPP.getInstance().showBanner();
jsToCPP.getInstance().setEmailContentAndTitle("Galaxy Slime", "Here comes the trendy galaxy slime with so many cute galaxy stickers. Let's have galaxy slime fun together.");
cc.sys.localStorage.setItem("isDone", "");
setTimeout(function() {
cc.director.loadScene("homeGL");
}, 8e3);
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "android");
e.active = !0;
var t = e.getChildByName("logo");
if (t) {
var o = t.getComponent("MoveIn");
o && (o.actionCallBack = function() {
var t = e.getChildByName("food1"), o = e.getChildByName("food2"), n = e.getChildByName("food3");
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
t.active = !0;
}), cc.delayTime(.25), cc.callFunc(function() {
o.active = !0;
}), cc.delayTime(.25), cc.callFunc(function() {
n.active = !0;
}), cc.delayTime(.25)));
});
}
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperGL": "CocosHelperGL"
} ],
loadingMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b8cd5zJJzBOOYjsell7oP4A", "loadingMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.jump = null;
return t;
}
t.prototype.start = function() {
for (var e = this, t = [ 3, 5, 2, 1, 0 ], o = function(o) {
var i = Number(t[o]), c = n.CocosHelper.findNode(cc.Canvas.instance.node, "monster" + i), a = c.height;
c.runAction(cc.sequence(cc.delayTime(.75 * o), cc.callFunc(function() {
cc.audioEngine.playEffect(e.jump, !1);
}), cc.jumpBy(1, cc.v2(0, 0), a, 1), cc.callFunc(function() {
o == t.length - 1 && cc.director.loadScene("homeSceneMS");
})));
}, i = 0; i < t.length; i++) o(i);
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "jump", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS"
} ],
loadingRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b77991gXEdEDJiawiA3rafZ", "loadingRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperRP"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
jsToCPP.getInstance().showBanner();
jsToCPP.getInstance().setEmailContentAndTitle("Galaxy Slime", "Here comes the trendy galaxy slime with so many cute galaxy stickers. Let's have galaxy slime fun together.");
cc.sys.localStorage.setItem("isDone", "");
setTimeout(function() {
cc.director.loadScene("homeRP");
}, 8e3);
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "android");
e.active = !0;
var t = e.getChildByName("logo");
if (t) {
var o = t.getComponent("MoveIn");
o && (o.actionCallBack = function() {
var t = e.getChildByName("food1"), o = e.getChildByName("food2"), n = e.getChildByName("food3");
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
t.active = !0;
}), cc.delayTime(.25), cc.callFunc(function() {
o.active = !0;
}), cc.delayTime(.25), cc.callFunc(function() {
n.active = !0;
}), cc.delayTime(.25)));
});
}
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperRP": "CocosHelperRP"
} ],
loading_adsMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "965a3VShZlCBZZ1sI3Cl1+U", "loading_adsMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.jump = null;
return t;
}
t.prototype.start = function() {
for (var e = this, t = [ 3, 5, 2, 1, 0 ], o = function(o) {
var i = Number(t[o]), c = n.node.getChildByName("monster" + i), a = c.height;
c.runAction(cc.sequence(cc.delayTime(.5 * o), cc.callFunc(function() {
cc.audioEngine.playEffect(e.jump, !1);
}), cc.jumpBy(1, cc.v2(0, 0), a, 1), cc.callFunc(function() {})));
}, n = this, i = 0; i < t.length; i++) o(i);
};
__decorate([ c(cc.Label) ], t.prototype, "label", void 0);
__decorate([ c ], t.prototype, "text", void 0);
__decorate([ c(cc.AudioClip) ], t.prototype, "jump", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
make1AddSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1f218YF9VhFRa+DvIkkH8Yu", "make1AddSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../../common/common/Script/compoent/MoveInMS"), c = e("../../common/common/Script/codebase/SpriteDrag/SpriteDragMS"), a = e("../fallSpriteCompoentMS"), s = e("../../common/common/Script/codebase/TransitionSceneMS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.winAudio = null;
t.toolIndex = 0;
return t;
}
t.prototype.start = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("bowl_up").zIndex = 100;
for (var e = [ "slimeactivator", "clearglue" ], t = function(t) {
var o = e[t], a = n.CocosHelper.findNode(cc.Canvas.instance.node, o);
a.getComponent(i.default).actionCallBack = function() {
var e = a.getComponent(c.default);
e && (e.enabled = !0);
if ("slimeactivator" == o) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
t.zIndex = 100;
n.CocosHelper.showHand(t, a, a, n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
}
};
}, o = 0; o < e.length; o++) t(o);
};
t.prototype.touchBegin = function(e, t, o, i) {
console.log("touchBegin");
var c = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
c.stopAllActions();
c.active = !1;
var a = t.moveNode;
a.getChildByName("shadow") && (a.getChildByName("shadow").active = !1);
};
t.prototype.touchCancle = function(e, t, o, n) {
var i = t.moveNode;
i.getChildByName("shadow") && (i.getChildByName("shadow").active = !1);
};
t.prototype.touchEnd = function(e, t, o, n) {
var i = this;
console.log("TouchEnd");
var c = t.moveNode;
t.enabled = !1;
c.getChildByName("shadow") && (c.getChildByName("shadow").active = !1);
var s = c.getComponent(a.default);
if (s) {
s.enabled = !0;
s.actionStartCallBack = function() {
console.log(c.name);
"clearglue" == c.name && (c.getChildByName("clearglue_top").active = !1);
};
s.actionEndCallBack = function() {
i.toolIndex = i.toolIndex + 1;
2 == i.toolIndex && i.dealNext();
};
}
};
t.prototype.dealNext = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("spoon");
e.active = !0;
var t = e.getComponent(i.default);
t.enabled = !0;
t.actionCallBack = function() {
console.log("spoonmoveInCm.actionCallBack");
e.getComponent(c.default).enabled = !0;
};
};
t.prototype.mixEND = function() {
var e = this;
console.log("mixEnd");
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("spoon");
t.getComponent(c.default).enabled = !1;
n.CocosHelper.hideNode(t, n.CocosHelper.ShowDirection.show_from_top, function() {
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "flowerHeart");
o.active = !0;
o.getComponent(cc.ParticleSystem).resetSystem();
t.active = !1;
cc.audioEngine.playEffect(e.winAudio, !1);
setTimeout(function() {
s.default.changeScene("make2AddSceneMS");
}, 2e3);
});
};
__decorate([ d(cc.Label) ], t.prototype, "label", void 0);
__decorate([ d ], t.prototype, "text", void 0);
__decorate([ d(cc.AudioClip) ], t.prototype, "winAudio", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../../common/common/Script/codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../../common/common/Script/compoent/MoveInMS": "MoveInMS",
"../fallSpriteCompoentMS": "fallSpriteCompoentMS"
} ],
make1MS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7e5e0JCrRNM4aMZ3Xq9SWEi", "make1MS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/SpriteDrag/SpriteDragMS"), i = e("../common/common/Script/codebase/utils/CocosHelperMS"), c = e("../common/common/Script/compoent/MoveInMS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.done = null;
t.indexIng = 0;
t.soundIndex = -1;
t.totalContent = 400;
return t;
}
t.prototype.start = function() {
var e = this, t = this.node.getChildByName("tool");
t.getComponent(c.default).actionCallBack = function() {
t.getComponent(n.default).enabled = !0;
var o = e.node.getChildByName("progressBar");
o.opacity = 0;
o.active = !0;
o.runAction(cc.fadeIn(1));
o.runAction(cc.repeatForever(cc.sequence(cc.delayTime(.015), cc.callFunc(function() {
o.getComponent(cc.ProgressBar).progress = o.getComponent(cc.ProgressBar).progress + .005;
if (o.getComponent(cc.ProgressBar).progress > 1) {
o.stopAllActions();
var t = e.node.getChildByName("tool"), n = e.node.getChildByName("box");
i.CocosHelper.hideNode(t, i.CocosHelper.ShowDirection.show_from_right);
i.CocosHelper.hideNode(n, i.CocosHelper.ShowDirection.show_from_right);
c.getChildByName("decorateParticle").active = !0;
cc.audioEngine.playEffect(e.done, !1);
e.showNext();
}
}))));
var c = e.node.getChildByName("slime"), a = c.getChildByName("slime_in");
a.opacity = 0;
a.active = !0;
a.runAction(cc.fadeIn(4));
var s = e.node.getChildByName("tool");
s.getChildByName("tool_p").active = !0;
s.getChildByName("tool_p").getComponent(cc.ParticleSystem).resetSystem();
t.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {}), cc.delayTime(1.5))));
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(-20, 0)), cc.moveBy(1, cc.v2(20, 0)))));
};
};
t.prototype.showNext = function() {};
t.prototype.touchBegin = function(e, t, o, n) {
console.log("touchBegin");
};
t.prototype.touchIng = function(e, t, o, n) {};
t.prototype.touchCancle = function(e, t, o, n) {};
t.prototype.touchEnd = function(e, t, o, n) {};
__decorate([ r(cc.Label) ], t.prototype, "label", void 0);
__decorate([ r ], t.prototype, "text", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "done", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/common/Script/codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../common/common/Script/compoent/MoveInMS": "MoveInMS"
} ],
make2AddSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "51729HWgIpL3qKJyqnjAfOJ", "make2AddSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../../common/common/Script/compoent/MoveInMS"), c = e("../../common/common/Script/codebase/SpriteDrag/SpriteDragMS"), a = e("../TipManagerMS"), s = e("../../common/common/Script/CombinedComponent/MixComponentMS"), r = e("../../common/common/Script/codebase/TransitionSceneMS"), l = cc._decorator, d = l.ccclass, u = l.property, p = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.fly = null;
t.cut = null;
t.fallAudio = null;
t.power = null;
t.scoroop = null;
t.sauceAudio = null;
t.mixBlenderAnimation = [];
t.winAudio = null;
t.isTouchToolBool = !1;
t.toolIndex = 0;
t.zorder = 0;
t.showlipstickHanf = !1;
t.touchSauceSoundT = -1;
t.touchSauceSound = -1;
t.slwwpSound = 0;
t.leftSoundIndex = -1;
t.rightSoundIndex = -1;
t.leftSoundIndexeye = 0;
t.rightSoundIndexeye = 0;
t.stepLeft = 0;
t.stepRight = 0;
t.isJumpNextStep = !1;
t.mixIndex = 0;
return t;
}
t.prototype.start = function() {
for (var e = this, t = [ "bowl_l_content", "bowl_r_content" ], o = function(e) {
for (var o = t[e], s = n.CocosHelper.findNode(cc.Canvas.instance.node, o), r = 0, l = s.children; r < l.length; r++) {
var d = l[r];
"bowl" != d.name && (d.active = !1);
}
var u = s.getComponent(i.default), p = a;
u.actionCallBack = function() {
for (var e, t = 0, o = function(o) {
if ("bowl" != o.name) {
o.active = !1;
var n = o.position, i = 260 - 520 * Math.random(), a = 260 - 520 * Math.random(), r = cc.v2(n.x + i, n.y + a), l = [ "bowl_l_content" == s.name ? cc.v2(-500, 500) : cc.v2(500, 500), r, n ];
o.position = cc.v2(-500, 500);
e = cc.cardinalSplineTo(1.5, l, 0);
o.active = !0;
o.runAction(cc.sequence(cc.delayTime(.2 * t), cc.callFunc(function() {
cc.audioEngine.playEffect(p.fly, !1);
}), e, cc.callFunc(function() {
var e = o.getComponent(c.default);
e && (e.enabled = !0);
})));
}
t++;
}, n = 0, i = s.children; n < i.length; n++) {
o(i[n]);
}
};
}, a = this, s = 0; s < t.length; s++) o(s);
n.CocosHelper.findNode(cc.Canvas.instance.node, "bg").runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
if (!e.isTouchToolBool) for (var t = [ "bowl_l_content", "bowl_r_content" ], o = 0; o < t.length; o++) for (var i = t[o], a = 0, s = n.CocosHelper.findNode(cc.Canvas.instance.node, i).children; a < s.length; a++) {
var r = s[a];
if ("bowl" != r.name) {
var l = r.getComponent(c.default);
if (l && l.enabled) {
r.runAction(cc.jumpBy(.5, cc.v2(0, 0), 40, 2));
break;
}
}
}
}), cc.delayTime(5))));
};
t.prototype.touchBegin = function(e, t, o, n) {
console.log("touchBegin");
this.isTouchToolBool = !0;
};
t.prototype.touchCancle = function(e, t, o, n) {};
t.prototype.touchEnd = function(e, t, o, n) {
console.log("TouchEnd");
var i = t.moveNode;
t.enabled = !1;
this.isTouchToolBool = !1;
i.parent.name;
"lipstick" == i.name && this.dolipstick(i, i.parent.getChildByName("bowl"));
"eyeshadow_pen" == i.name && this.doeyeshadow_pen(i, i.parent.getChildByName("bowl"));
"nailpolish" == i.name && this.donailpolish(i, i.parent.getChildByName("bowl"));
"eyeshadowblink" == i.name && this.doeyeshadowblink(i, i.parent.getChildByName("bowl"));
"eyeshadow" == i.name && this.doeyeshadow(i, i.parent.getChildByName("bowl"));
"sleepingmask" == i.name && this.dosleepingmask(i, i.parent.getChildByName("bowl"));
"glitter" == i.name && this.doglitter(i, i.parent.getChildByName("bowl"));
"glitter" == i.name && this.doglitter(i, i.parent.getChildByName("bowl"));
"facialgel" == i.name && this.dofacialgel(i, i.parent.getChildByName("bowl"));
"lipgloss" == i.name && this.dolipgloss(i, i.parent.getChildByName("bowl"));
};
t.prototype.dolipgloss = function(e, t) {
var o = this, n = t.getChildByName("lipgloss_bowl"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
e.active = !1;
n.active = !0;
o.zorder = o.zorder + 1;
n.zIndex = o.zorder;
n.on(cc.Node.EventType.TOUCH_START, o.ipglossTouch, o);
n.on(cc.Node.EventType.TOUCH_CANCEL, o.ipglossEnd, o);
n.on(cc.Node.EventType.TOUCH_END, o.ipglossEnd, o);
var i = n.getChildByName("lipgloss_bowl_in");
i.scale = 0;
i.active = !0;
i.runAction(cc.sequence(cc.scaleTo(2, .5), cc.callFunc(function() {
n.targetOff(o);
var e = t.getChildByName("bowl_mix").getChildByName("bowl_lipgloss"), c = e.convertToWorldSpaceAR(cc.v2(0, 0)), a = i.parent.convertToNodeSpaceAR(c);
i.runAction(cc.sequence(cc.jumpTo(.5, a, 50, 1), cc.callFunc(function() {
i.active = !1;
e.active = !0;
o.zorder = o.zorder + 1;
e.zIndex = o.zorder;
cc.audioEngine.stopEffect(o.touchSauceSoundT);
n.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
})));
cc.director.getActionManager().pauseTarget(i);
})));
};
t.prototype.ipglossTouch = function(e) {
this.isTouchToolBool = !0;
var t = e.target.getChildByName("lipgloss_bowl_in");
cc.director.getActionManager().resumeTarget(t);
this.touchSauceSoundT = cc.audioEngine.playEffect(this.sauceAudio, !0);
};
t.prototype.ipglossEnd = function(e) {
this.isTouchToolBool = !1;
var t = e.target.getChildByName("lipgloss_bowl_in");
cc.director.getActionManager().pauseTarget(t);
cc.audioEngine.stopEffect(this.touchSauceSoundT);
};
t.prototype.dofacialgel = function(e, t) {
var o = this, n = t.getChildByName("facialgel_bowl"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
e.active = !1;
n.active = !0;
o.zorder = o.zorder + 1;
n.zIndex = o.zorder;
n.on(cc.Node.EventType.TOUCH_START, o.facialgelTouch, o);
n.on(cc.Node.EventType.TOUCH_CANCEL, o.facialgelEnd, o);
n.on(cc.Node.EventType.TOUCH_END, o.facialgelEnd, o);
var i = n.getChildByName("facialgel_in");
i.scale = 0;
i.active = !0;
i.runAction(cc.sequence(cc.scaleTo(2, 2), cc.callFunc(function() {
n.targetOff(o);
var e = t.getChildByName("bowl_mix").getChildByName("bowl_facialgel"), c = e.convertToWorldSpaceAR(cc.v2(0, 0)), a = i.parent.convertToNodeSpaceAR(c);
i.runAction(cc.sequence(cc.jumpTo(.5, a, 50, 1), cc.callFunc(function() {
i.active = !1;
e.active = !0;
o.zorder = o.zorder + 1;
e.zIndex = o.zorder;
cc.audioEngine.stopEffect(o.touchSauceSound);
n.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
})));
cc.director.getActionManager().pauseTarget(i);
})));
};
t.prototype.facialgelTouch = function(e) {
this.isTouchToolBool = !0;
var t = e.target.getChildByName("facialgel_in");
cc.director.getActionManager().resumeTarget(t);
this.touchSauceSound = cc.audioEngine.playEffect(this.sauceAudio, !0);
};
t.prototype.facialgelEnd = function(e) {
this.isTouchToolBool = !1;
var t = e.target.getChildByName("facialgel_in");
cc.director.getActionManager().pauseTarget(t);
cc.audioEngine.stopEffect(this.touchSauceSound);
};
t.prototype.doglitter = function(e, t) {
var o = this, n = t.getChildByName("bowl_glitter"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
o.isTouchToolBool = !1;
e.active = !1;
n.active = !0;
o.zorder = o.zorder + 1;
n.zIndex = o.zorder;
var i = n.getChildByName("glitter_p");
i.active = !0;
var c = t.getChildByName("bowl_mix").getChildByName("bowl_glitter");
c.active = !0;
c.scale = 0;
o.zorder = o.zorder + 1;
c.zIndex = o.zorder;
cc.audioEngine.playEffect(o.power, !1);
n.runAction(cc.sequence(cc.jumpBy(1, cc.v2(0, 0), 50, 2), cc.delayTime(1), cc.callFunc(function() {
cc.audioEngine.playEffect(o.power, !1);
}), cc.jumpBy(1, cc.v2(0, 0), 50, 2)));
c.runAction(cc.sequence(cc.scaleTo(3.5, 1), cc.callFunc(function() {
i.active = !1;
n.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
})));
};
t.prototype.dosleepingmask = function(e, t) {
var o = this, n = t.getChildByName("sleepingmask"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
o.isTouchToolBool = !1;
e.active = !1;
n.active = !0;
o.zorder = o.zorder + 1;
n.zIndex = o.zorder;
var i = n.getChildByName("sleepingmask_spoon"), c = i.position;
i.position = cc.v2(0, 1500);
i.active = !0;
i.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
i.on(cc.Node.EventType.TOUCH_START, o.sleepingmaskTouch, o);
i.on(cc.Node.EventType.TOUCH_CANCEL, o.sleepingmaskEnd, o);
i.on(cc.Node.EventType.TOUCH_END, o.sleepingmaskEnd, o);
i.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.25, cc.v2(-10, 7)), cc.moveBy(.25, cc.v2(10, -7)))));
var e = t.getChildByName("bowl_mix").getChildByName("bowl_sleepingmask");
e.active = !0;
e.scale = 0;
e.runAction(cc.sequence(cc.scaleTo(2.5, 1), cc.callFunc(function() {
i.targetOff(o);
cc.audioEngine.stopEffect(o.slwwpSound);
i.getChildByName("sleepingmask_spoon_p").active = !1;
i.stopAllActions();
i.parent.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
o.zorder = o.zorder + 1;
e.zIndex = o.zorder;
cc.director.getActionManager().pauseTarget(e);
cc.director.getActionManager().pauseTarget(i);
})));
})));
};
t.prototype.sleepingmaskTouch = function(e) {
this.isTouchToolBool = !0;
console.log("eyeshadowblinkTouch");
var t = e.target, o = t, n = o.getChildByName("sleepingmask_spoon_p"), i = t.parent.parent.getChildByName("bowl_mix").getChildByName("bowl_sleepingmask");
cc.director.getActionManager().resumeTarget(i);
cc.director.getActionManager().resumeTarget(o);
n.active = !0;
t.parent.parent.parent;
this.slwwpSound = cc.audioEngine.playEffect(this.scoroop, !0);
};
t.prototype.sleepingmaskEnd = function(e) {
this.isTouchToolBool = !1;
var t = e.target, o = t, n = o.getChildByName("sleepingmask_spoon_p"), i = t.parent.parent.getChildByName("bowl_mix").getChildByName("bowl_sleepingmask");
cc.director.getActionManager().pauseTarget(i);
cc.director.getActionManager().pauseTarget(o);
n.active = !1;
t.parent.parent.parent;
cc.audioEngine.stopEffect(this.slwwpSound);
};
t.prototype.dolipstick = function(e, t) {
var o = this;
e.runAction(cc.sequence(cc.jumpTo(.5, cc.v2(t.position.x + 40, t.position.y + 150), 50, 1), cc.rotateTo(.2, -110), cc.callFunc(function() {
if (!o.showlipstickHanf) {
o.showlipstickHanf = !0;
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
t.zIndex = 100;
t.position = t.parent.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(0, 0)));
t.active = !0;
t.stopAllActions();
t.runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)), cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)), cc.callFunc(function() {
t.active = !1;
})));
}
e.on(cc.Node.EventType.TOUCH_START, o.lipsticknodeTouch, o);
})));
};
t.prototype.lipsticknodeTouch = function(e) {
var t = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "finger").active = !1;
this.isTouchToolBool = !0;
var o = e.target;
o.targetOff(this);
var i = o.getChildByName("lipstick_in"), c = o.parent.getChildByName("bowl");
if (i) {
var a = i.parent.convertToWorldSpaceAR(i.position);
i.parent = c;
i.position = i.parent.convertToNodeSpaceAR(a);
var s = c.getChildByName("bowl_mix").getChildByName("bowl_lipstick");
cc.audioEngine.playEffect(this.cut, !1);
o.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
this.doStep(c.parent.name);
i.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, s.rotation), cc.jumpTo(.5, s.position, 50, 1)), cc.callFunc(function() {
t.isTouchToolBool = !1;
s.active = !0;
i.active = !1;
t.zorder = t.zorder + 1;
s.zIndex = t.zorder;
})));
}
};
t.prototype.doeyeshadow_pen = function(e, t) {
var o = this;
e.runAction(cc.sequence(cc.jumpTo(.5, cc.v2(t.position.x + 40, t.position.y + 150), 50, 1), cc.rotateTo(.2, -110), cc.callFunc(function() {
if (!o.showlipstickHanf) {
o.showlipstickHanf = !0;
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
t.zIndex = 100;
t.position = t.parent.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(0, 0)));
t.active = !0;
t.stopAllActions();
t.runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)), cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)), cc.callFunc(function() {
t.active = !1;
})));
}
e.on(cc.Node.EventType.TOUCH_START, o.eyeshadow_penTouch, o);
})));
};
t.prototype.eyeshadow_penTouch = function(e) {
var t = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "finger").active = !1;
var o = e.target;
o.targetOff(this);
var i = o.getChildByName("eyeshadow_pen_in"), c = o.parent.getChildByName("bowl");
if (i) {
var a = i.parent.convertToWorldSpaceAR(i.position);
i.parent = c;
i.position = i.parent.convertToNodeSpaceAR(a);
var s = c.getChildByName("bowl_mix").getChildByName("bowl_eyeshadow_pen");
cc.audioEngine.playEffect(this.cut, !1);
o.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
this.doStep(c.parent.name);
i.runAction(cc.sequence(cc.spawn(cc.rotateTo(.5, s.rotation), cc.jumpTo(.5, s.position, 50, 1)), cc.callFunc(function() {
t.isTouchToolBool = !1;
s.active = !0;
i.active = !1;
t.zorder = t.zorder + 1;
s.zIndex = t.zorder;
})));
}
};
t.prototype.donailpolish = function(e, t) {
var o = this, n = t.getChildByName("bowl_nailpolish"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
e.active = !1;
n.active = !0;
n.getChildByName("bowl_nailpolish_p").active = !0;
var i = t.getChildByName("bowl_mix").getChildByName("bowl_nailpolish_in");
i.active = !0;
i.scale = 0;
o.zorder = o.zorder + 1;
i.zIndex = o.zorder;
cc.audioEngine.playEffect(o.fallAudio, !1);
o.isTouchToolBool = !1;
i.runAction(cc.sequence(cc.scaleTo(2, 1), cc.callFunc(function() {
n.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
})));
};
t.prototype.doeyeshadowblink = function(e, t) {
var o = this, n = t.getChildByName("eyeshadowblink_bowl"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
o.isTouchToolBool = !1;
e.active = !1;
n.active = !0;
o.zorder = o.zorder + 1;
n.zIndex = o.zorder;
var i = n.getChildByName("eyeshadowblink_spoon"), c = i.position;
i.position = cc.v2(0, 1500);
i.active = !0;
i.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
i.on(cc.Node.EventType.TOUCH_START, o.eyeshadowblinkTouch, o);
i.on(cc.Node.EventType.TOUCH_CANCEL, o.eyeshadowblinkEnd, o);
i.on(cc.Node.EventType.TOUCH_END, o.eyeshadowblinkEnd, o);
i.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.25, cc.v2(7, 7)), cc.moveBy(.25, cc.v2(-7, -7)))));
var e = t.getChildByName("bowl_mix").getChildByName("bowl_eyeshadowblink");
e.active = !0;
e.scale = 0;
e.runAction(cc.sequence(cc.scaleTo(2, 1), cc.callFunc(function() {})));
var c = n.getChildByName("eyeshadowblink_in");
o.zorder = o.zorder + 1;
e.zIndex = o.zorder;
c.runAction(cc.sequence(cc.fadeOut(4), cc.callFunc(function() {
i.targetOff(o);
cc.audioEngine.stopEffect(o.leftSoundIndex);
cc.audioEngine.stopEffect(o.rightSoundIndex);
n.getChildByName("eyeshadowblink_bowl_p").active = !1;
i.parent.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
cc.director.getActionManager().pauseTarget(e);
cc.director.getActionManager().pauseTarget(i);
cc.director.getActionManager().pauseTarget(c);
})));
})));
};
t.prototype.eyeshadowblinkTouch = function(e) {
this.isTouchToolBool = !0;
console.log("eyeshadowblinkTouch");
var t = e.target, o = t.parent.getChildByName("eyeshadowblink_spoon"), n = t.parent.getChildByName("eyeshadowblink_bowl_p"), i = t.parent.getChildByName("eyeshadowblink_in"), c = t.parent.parent.getChildByName("bowl_mix").getChildByName("bowl_eyeshadowblink");
cc.director.getActionManager().resumeTarget(c);
cc.director.getActionManager().resumeTarget(o);
cc.director.getActionManager().resumeTarget(i);
n.active = !0;
var a = t.parent.parent.parent;
"bowl_l_content" == a.name && (this.leftSoundIndex = cc.audioEngine.playEffect(this.power, !0));
"bowl_r_content" == a.name && (this.rightSoundIndex = cc.audioEngine.playEffect(this.power, !0));
};
t.prototype.eyeshadowblinkEnd = function(e) {
this.isTouchToolBool = !1;
var t = e.target, o = t.parent.getChildByName("eyeshadowblink_spoon"), n = t.parent.getChildByName("eyeshadowblink_bowl_p"), i = t.parent.getChildByName("eyeshadowblink_in"), c = t.parent.parent.getChildByName("bowl_mix").getChildByName("bowl_eyeshadowblink");
cc.director.getActionManager().pauseTarget(c);
cc.director.getActionManager().pauseTarget(o);
cc.director.getActionManager().pauseTarget(i);
n.active = !1;
var a = t.parent.parent.parent;
if ("bowl_l_content" == a.name) {
cc.audioEngine.stopEffect(this.leftSoundIndex);
cc.audioEngine.stopEffect(this.leftSoundIndex);
cc.audioEngine.stopEffect(this.rightSoundIndex);
}
if ("bowl_r_content" == a.name) {
cc.audioEngine.stopEffect(this.rightSoundIndex);
cc.audioEngine.stopEffect(this.leftSoundIndex);
cc.audioEngine.stopEffect(this.rightSoundIndex);
}
};
t.prototype.doeyeshadow = function(e, t) {
var o = this, n = t.getChildByName("eyeshadow_bowl"), i = n.convertToWorldSpaceAR(cc.v2(0, 0)), c = e.parent.convertToNodeSpaceAR(i);
e.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
e.active = !1;
n.active = !0;
o.zorder = o.zorder + 1;
n.zIndex = o.zorder;
var i = n.getChildByName("eyeshadow_spoon"), c = i.position;
i.position = cc.v2(0, 1500);
i.active = !0;
i.runAction(cc.sequence(cc.jumpTo(.5, c, 50, 1), cc.callFunc(function() {
i.on(cc.Node.EventType.TOUCH_START, o.eyeshadowTouch, o);
i.on(cc.Node.EventType.TOUCH_CANCEL, o.eyeshadowEnd, o);
i.on(cc.Node.EventType.TOUCH_END, o.eyeshadowEnd, o);
i.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.25, cc.v2(7, 7)), cc.moveBy(.25, cc.v2(-7, -7)))));
var e = t.getChildByName("bowl_mix").getChildByName("bowl_eyeshadow");
e.active = !0;
e.scale = 0;
e.runAction(cc.sequence(cc.scaleTo(4, 1), cc.callFunc(function() {})));
var c = n.getChildByName("eyeshadow_in");
o.zorder = o.zorder + 1;
e.zIndex = o.zorder;
c.runAction(cc.sequence(cc.fadeOut(4), cc.callFunc(function() {
i.targetOff(o);
cc.audioEngine.stopEffect(o.leftSoundIndexeye);
cc.audioEngine.stopEffect(o.rightSoundIndexeye);
n.getChildByName("eyeshadow_p").active = !1;
i.parent.runAction(cc.sequence(cc.moveBy(1, cc.v2(1e3, 0)), cc.hide()));
o.doStep(t.parent.name);
})));
cc.director.getActionManager().pauseTarget(e);
cc.director.getActionManager().pauseTarget(i);
cc.director.getActionManager().pauseTarget(c);
})));
})));
};
t.prototype.eyeshadowTouch = function(e) {
console.log("eyeshadowblinkTouch");
var t = e.target, o = t.parent.getChildByName("eyeshadow_spoon"), n = t.parent.getChildByName("eyeshadow_p"), i = t.parent.getChildByName("eyeshadow_in"), c = t.parent.parent.getChildByName("bowl_mix").getChildByName("bowl_eyeshadow");
cc.director.getActionManager().resumeTarget(c);
cc.director.getActionManager().resumeTarget(o);
cc.director.getActionManager().resumeTarget(i);
n.active = !0;
var a = t.parent.parent.parent;
"bowl_l_content" == a.name && (this.leftSoundIndexeye = cc.audioEngine.playEffect(this.power, !0));
"bowl_r_content" == a.name && (this.rightSoundIndexeye = cc.audioEngine.playEffect(this.power, !0));
};
t.prototype.eyeshadowEnd = function(e) {
var t = e.target, o = t.parent.getChildByName("eyeshadow_spoon"), n = t.parent.getChildByName("eyeshadow_p"), i = t.parent.getChildByName("eyeshadow_in"), c = t.parent.parent.getChildByName("bowl_mix").getChildByName("bowl_eyeshadow");
cc.director.getActionManager().pauseTarget(c);
cc.director.getActionManager().pauseTarget(o);
cc.director.getActionManager().pauseTarget(i);
n.active = !1;
var a = t.parent.parent.parent;
if ("bowl_l_content" == a.name) {
cc.audioEngine.stopEffect(this.leftSoundIndexeye);
cc.audioEngine.stopEffect(this.leftSoundIndexeye);
cc.audioEngine.stopEffect(this.rightSoundIndexeye);
}
if ("bowl_r_content" == a.name) {
cc.audioEngine.stopEffect(this.rightSoundIndexeye);
cc.audioEngine.stopEffect(this.leftSoundIndexeye);
cc.audioEngine.stopEffect(this.rightSoundIndexeye);
}
};
t.prototype.doStep = function(e) {
var t = "bowl_l_content" == e ? "blue" : "pink";
"blue" == t && (this.stepLeft = this.stepLeft + 1);
"pink" == t && (this.stepRight = this.stepRight + 1);
console.log(this.stepLeft + "----" + this.stepRight);
if (2 == this.stepLeft && 2 == this.stepRight) {
if ("isFirst" == cc.sys.localStorage.getItem("isFirst")) {
cc.sys.localStorage.setItem("isFirst", "isFirst");
(o = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next")).active = !0;
o.scale = 0;
o.runAction(cc.scaleTo(1, 1));
}
cc.sys.localStorage.setItem("isFirst", "isFirst");
}
(this.stepRight + this.stepLeft) % 2 == 0 && a.default.getInstance().jumpTips();
if (this.stepRight + this.stepLeft >= 15) {
var o;
(o = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next")).active = !1;
this.showNextBigStep();
}
};
t.prototype.touchNext = function(e) {
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
t.getComponent(cc.AudioSource) && t.getComponent(cc.AudioSource).play();
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !1;
this.showNextBigStep();
};
t.prototype.showNextBigStep = function() {
var e = this;
if (!this.isJumpNextStep) {
this.isJumpNextStep = !0;
for (var t = [ "bowl_l_content", "bowl_r_content" ], o = function(o) {
for (var i = t[o], a = n.CocosHelper.findNode(cc.Canvas.instance.node, i), s = 0, r = a.children; s < r.length; s++) {
var l = r[s];
if ("bowl" != l.name) {
l.runAction(cc.fadeOut(1));
l.getComponent(c.default) && (l.getComponent(c.default).enabled = !1);
} else {
l.runAction(cc.moveBy(1, cc.v2(0, 60)));
var d = l.getChildByName("bowl_hand");
d.active = !0;
d.position = cc.v2(0, -500);
d.runAction(cc.sequence(cc.delayTime(1), cc.moveTo(1, cc.v2(-8, -175)), cc.callFunc(function() {
if ("bowl_l_content" == a.name) {
e.handLeft();
e.handRight();
}
})));
}
}
}, i = 0; i < t.length; i++) o(i);
}
};
t.prototype.handLeft = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_l_content").getChildByName("bowl"), t = e.getChildByName("bowl_hand"), o = [], i = t.getComponent(cc.Sprite), c = function(e) {
o.push(cc.callFunc(function() {
i.spriteFrame = e;
}));
o.push(cc.delayTime(.45));
}, a = 0, r = this.mixBlenderAnimation; a < r.length; a++) {
c(r[a]);
}
var l = cc.repeatForever(cc.sequence(o));
t.runAction(l);
t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
cc.director.getActionManager().pauseTarget(t);
var d = e.getChildByName("bowl_mix"), u = cc.scaleTo(.7, 1, .95), p = cc.scaleTo(.7, .95, 1.08), h = cc.repeatForever(cc.sequence(u, p));
d.runAction(h);
cc.director.getActionManager().pauseTarget(d);
t.on(cc.Node.EventType.TOUCH_START, function() {
cc.director.getActionManager().resumeTarget(t);
cc.director.getActionManager().resumeTarget(d);
d.getComponent(s.default).startMix();
}, this);
t.on(cc.Node.EventType.TOUCH_CANCEL, function() {
cc.director.getActionManager().pauseTarget(t);
cc.director.getActionManager().pauseTarget(d);
d.getComponent(s.default).stopMix();
}, this);
t.on(cc.Node.EventType.TOUCH_END, function() {
cc.director.getActionManager().pauseTarget(t);
cc.director.getActionManager().pauseTarget(d);
d.getComponent(s.default).stopMix();
}, this);
};
t.prototype.handRight = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_r_content").getChildByName("bowl"), t = e.getChildByName("bowl_hand"), o = [], i = t.getComponent(cc.Sprite), c = function(e) {
o.push(cc.callFunc(function() {
i.spriteFrame = e;
}));
o.push(cc.delayTime(.45));
}, a = 0, r = this.mixBlenderAnimation; a < r.length; a++) {
c(r[a]);
}
var l = cc.repeatForever(cc.sequence(o));
t.runAction(l);
t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
cc.director.getActionManager().pauseTarget(t);
var d = e.getChildByName("bowl_mix"), u = cc.scaleTo(.7, 1, .95), p = cc.scaleTo(.7, .95, 1.08), h = cc.repeatForever(cc.sequence(u, p));
d.runAction(h);
cc.director.getActionManager().pauseTarget(d);
t.on(cc.Node.EventType.TOUCH_START, function() {
cc.director.getActionManager().resumeTarget(t);
cc.director.getActionManager().resumeTarget(d);
d.getComponent(s.default).startMix();
}, this);
t.on(cc.Node.EventType.TOUCH_CANCEL, function() {
cc.director.getActionManager().pauseTarget(t);
cc.director.getActionManager().pauseTarget(d);
d.getComponent(s.default).stopMix();
}, this);
t.on(cc.Node.EventType.TOUCH_END, function() {
cc.director.getActionManager().pauseTarget(t);
cc.director.getActionManager().pauseTarget(d);
d.getComponent(s.default).stopMix();
}, this);
};
t.prototype.mixEndRight = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_r_content").getChildByName("bowl"), t = e.getChildByName("bowl_hand"), o = e.getChildByName("bowl_mix");
o.getComponent(s.default).stopMix();
t.targetOff(this);
t.stopAllActions();
o.stopAllActions();
o.scale = 1;
t.runAction(cc.sequence(cc.moveBy(1, cc.v2(0, -1e3)), cc.hide()));
a.default.getInstance().jumpTips();
this.mixIndex = this.mixIndex + 1;
if (2 == this.mixIndex) {
this.mixIndex = 2e3;
this.makeOver();
}
};
t.prototype.mixEndLeft = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_l_content").getChildByName("bowl"), t = e.getChildByName("bowl_hand"), o = e.getChildByName("bowl_mix");
o.getComponent(s.default).stopMix();
t.targetOff(this);
t.stopAllActions();
o.stopAllActions();
o.scale = 1;
t.runAction(cc.sequence(cc.moveBy(1, cc.v2(0, -1e3)), cc.hide()));
a.default.getInstance().jumpTips();
this.mixIndex = this.mixIndex + 1;
if (2 == this.mixIndex) {
this.mixIndex = 2e3;
this.makeOver();
}
};
t.prototype.makeOver = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "flowerHeart");
e.active = !0;
e.getComponent(cc.ParticleSystem).resetSystem();
cc.audioEngine.playEffect(this.winAudio, !1);
setTimeout(function() {
r.default.changeScene("selectColorSceneMS");
}, 2e3);
};
__decorate([ u(cc.Label) ], t.prototype, "label", void 0);
__decorate([ u ], t.prototype, "text", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "fly", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "cut", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "fallAudio", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "power", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "scoroop", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "sauceAudio", void 0);
__decorate([ u({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "mixBlenderAnimation", void 0);
__decorate([ u(cc.AudioClip) ], t.prototype, "winAudio", void 0);
return t = __decorate([ d ], t);
}(cc.Component);
o.default = p;
cc._RF.pop();
}, {
"../../common/common/Script/CombinedComponent/MixComponentMS": "MixComponentMS",
"../../common/common/Script/codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../../common/common/Script/compoent/MoveInMS": "MoveInMS",
"../TipManagerMS": "TipManagerMS"
} ],
make2MS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d1b452BBmpMrpmU0eXulm89", "make2MS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/SpriteDrag/SpriteDragMS"), i = e("../common/common/Script/codebase/utils/CocosHelperMS"), c = e("../common/common/Script/compoent/MoveInMS"), a = e("./fallSpriteCompoentMS"), s = e("./DataConfigMS"), r = e("../common/common/Script/ads/showLaodingMS"), l = e("../common/common/Script/CombinedComponent/MixComponentMS"), d = cc._decorator, u = d.ccclass, p = d.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.winAudio = null;
t.pushAudio = null;
t.foameFrame = null;
t.indexZ = 0;
t.isTouch = !1;
t.pushIndex = 1;
t.step = 0;
return t;
}
t.prototype.start = function() {
i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("bowl_up").zIndex = 100;
for (var e = [ "borax", "vaseline", "schoolglue", "water" ], t = function(t) {
var o = e[t], a = i.CocosHelper.findNode(cc.Canvas.instance.node, o);
a.getComponent(c.default).actionCallBack = function() {
var e = a.getComponent(n.default);
e && (e.enabled = !0);
if ("water" == o) {
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
t.zIndex = 100;
i.CocosHelper.showHand(t, a, a, i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"));
}
};
}, o = 0; o < e.length; o++) t(o);
};
t.prototype.touchBegin = function(e, t, o, n) {
console.log("touchBegin");
var c = i.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
c.stopAllActions();
c.active = !1;
var a = t.moveNode;
a.getChildByName("shadow") && (a.getChildByName("shadow").active = !1);
};
t.prototype.touchCancle = function(e, t, o, n) {
var i = t.moveNode;
i.getChildByName("shadow") && (i.getChildByName("shadow").active = !1);
};
t.prototype.touchEnd = function(e, t, o, n) {
var c = this;
console.log("TouchEnd");
var s = t.moveNode;
t.enabled = !1;
s.getChildByName("shadow") && (s.getChildByName("shadow").active = !1);
if ("vaseline" == s.name) {
var r = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl"), l = s.parent.convertToNodeSpaceAR(r.convertToWorldSpaceAR(cc.v2(222, 76)));
s.runAction(cc.sequence(cc.jumpTo(.5, l, 100, 1), cc.rotateTo(.2, -45), cc.callFunc(function() {
var e = i.CocosHelper.findNode(cc.Canvas.instance.node, "finger2"), t = i.CocosHelper.findNode(cc.Canvas.instance.node, "chick");
t.position = t.parent.convertToNodeSpaceAR(s.convertToWorldSpaceAR(cc.v2(0, 0)));
e.position = e.parent.convertToNodeSpaceAR(s.convertToWorldSpaceAR(cc.v2(0, 0)));
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)))));
t.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.5, 1.1))));
e.zIndex = 100;
t.zIndex = 100;
s.on(cc.Node.EventType.TOUCH_START, c.touchTool, c);
})));
}
var d = s.getComponent(a.default);
if (d) {
d.enabled = !0;
d.actionStartCallBack = function() {
console.log(s.name);
};
d.actionEndCallBack = function() {
c.indexZ = c.indexZ + 2;
d.bowlInFall.zIndex = c.indexZ;
c.dealNext();
};
}
};
t.prototype.touchTool = function(e, t) {
var o = this;
if (!this.isTouch) {
this.isTouch = !0;
var n = i.CocosHelper.findNode(cc.Canvas.instance.node, "finger2"), a = i.CocosHelper.findNode(cc.Canvas.instance.node, "chick");
n.stopAllActions();
n.active = !1;
a.stopAllActions();
a.active = !1;
cc.audioEngine.playEffect(this.pushAudio, !1);
var s = i.CocosHelper.findNode(cc.Canvas.instance.node, "vaseline"), r = s.getChildByName("vaseline_in");
s.getChildByName("vaseline_t");
r.runAction(cc.moveTo(.25, cc.v2(-14, 4)));
var l = r.getChildByName("bowl_foam" + this.pushIndex);
l.scale = 0;
l.active = !0;
var d = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("bowl_in"), u = this;
l.runAction(cc.sequence(cc.scaleTo(.25, .8), cc.callFunc(function() {
var e = l.parent.convertToWorldSpaceAR(l.position);
l.parent = d;
o.indexZ = o.indexZ + 2;
l.zIndex = o.indexZ;
l.position = l.parent.convertToNodeSpaceAR(e);
l.runAction(cc.sequence(cc.moveTo(.25, cc.v2(30 * o.pushIndex, 0)), cc.callFunc(function() {
r.runAction(cc.moveTo(.2, cc.v2(-14, 32)));
u.isTouch = !1;
u.pushIndex = u.pushIndex + 1;
if (4 == u.pushIndex) {
u.isTouch = !0;
i.CocosHelper.hideNode(s, c.ShowDirection.right);
u.dealNext();
}
})));
})));
}
};
t.prototype.dealNext = function() {
var e = this;
this.step = this.step + 1;
if (4 == this.step) {
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("spoon");
t.active = !0;
var o = t.getComponent(c.default);
o.enabled = !0;
o.actionCallBack = function() {
t.on(cc.Node.EventType.TOUCH_START, e.spoonTouch, e);
t.on(cc.Node.EventType.TOUCH_MOVE, e.spoonMoving, e);
t.on(cc.Node.EventType.TOUCH_END, e.spoonEnd, e);
t.on(cc.Node.EventType.TOUCH_CANCEL, e.spoonEnd, e);
};
}
};
t.prototype.spoonTouch = function(e) {};
t.prototype.spoonEnd = function(e) {
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_in");
console.log();
t.getComponent(l.default).stopMix();
};
t.prototype.spoonMoving = function(e) {
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_in");
console.log();
t.getComponent(l.default).startMix();
var o = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("spoon");
o.setPosition(o.position.add(e.getDelta()));
var n = o.position;
n.x < -111 && o.setPosition(cc.v2(-111, n.y));
n.x > 164 && o.setPosition(cc.v2(164, n.y));
n.y < 137 && o.setPosition(cc.v2(n.x, 137));
n.y > 271 && o.setPosition(cc.v2(n.x, 271));
};
t.prototype.MIXING = function(e, t, o, n) {
var i = t.moveNode;
t.enabled = !1;
console.log(i.x);
};
t.prototype.mixEND = function() {
var e = this;
console.log("mixEnd");
var t = i.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("spoon");
t.getComponent(n.default).enabled = !1;
t.targetOff(this);
i.CocosHelper.hideNode(t, i.CocosHelper.ShowDirection.show_from_top, function() {
var o = i.CocosHelper.findNode(cc.Canvas.instance.node, "flowerHeart");
o.active = !0;
o.getComponent(cc.ParticleSystem).resetSystem();
t.active = !1;
cc.audioEngine.playEffect(e.winAudio, !1);
var n = cc.view.getVisibleSize().width, c = cc.view.getVisibleSize().height;
i.CocosHelper.captureNodeSize(cc.Canvas.instance.node, n, c).then(function(e) {
null == e || s.default.getInstance().setPageTexture(e);
});
setTimeout(function() {
r.default.getInstance().showAds(!1);
r.default.getInstance().loadingDoneCallback = function() {
console.log("广告关闭");
r.default.getInstance().loadingDoneCallback = null;
cc.director.loadScene("play1SceneMS");
};
}, 3e3);
}, !1);
};
__decorate([ p(cc.Label) ], t.prototype, "label", void 0);
__decorate([ p ], t.prototype, "text", void 0);
__decorate([ p(cc.AudioClip) ], t.prototype, "winAudio", void 0);
__decorate([ p(cc.AudioClip) ], t.prototype, "pushAudio", void 0);
__decorate([ p(cc.SpriteFrame) ], t.prototype, "foameFrame", void 0);
return t = __decorate([ u ], t);
}(cc.Component);
o.default = h;
cc._RF.pop();
}, {
"../common/common/Script/CombinedComponent/MixComponentMS": "MixComponentMS",
"../common/common/Script/ads/showLaodingMS": "showLaodingMS",
"../common/common/Script/codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./DataConfigMS": "DataConfigMS",
"./fallSpriteCompoentMS": "fallSpriteCompoentMS"
} ],
makeGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "63f3bkbqadHV7jNkNXd+7UA", "makeGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperGS"), i = e("./DragonCompoentGS"), c = e("./MoveIn_oGS"), a = e("./TipManagerGS"), s = e("../script/DataConfigGS"), r = cc._decorator, l = r.ccclass, d = r.property, u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.lachang = null;
t.actionNode = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
this.dynamicCreate();
};
t.prototype.dynamicCreate = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay), t = this, o = n.CocosHelper.findNode(cc.Canvas.instance.node, "slimeNode"), i = s.default.getInstance().getBodyName();
cc.loader.loadRes("glitterslime/slime/node/" + i, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
o.getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
});
cc.loader.loadRes("glitterslime/slime/" + i + "/" + i + "_ske", dragonBones.DragonBonesAsset, function(n, a) {
if (n) console.log(n + ""); else {
e.dragonAsset = a;
cc.loader.setAutoRelease(a, !0);
cc.loader.loadRes("glitterslime/slime/" + i + "/" + i + "_tex", dragonBones.DragonBonesAtlasAsset, function(n, i) {
if (n) console.log(n + ""); else {
e.dragonAtlasAsset = i;
e.armatureName = "Armature";
e.playAnimation("newAnimation", 0);
cc.loader.setAutoRelease(i, !0);
for (var a = 1; a <= 5; a++) {
var s = e.armature().getSlot("motion" + a + "_slime");
s.displayIndex = -1;
console.log(s);
s._updateColor();
}
o.active = !0;
var r = o.getComponent(c.default);
r.enabled = !0;
r.actionCallBack = function() {
t.show();
};
}
});
}
});
};
t.prototype.show = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), t = n.CocosHelper.findNode(cc.Canvas.instance.node, "slimeNode"), o = (e.getComponent(dragonBones.ArmatureDisplay).armature(), 
this);
e.position = t.getPosition();
t.active = !1;
for (var i = [ "left_hand0", "left_hand1", "right_hand1", "right_hand0" ], a = function(e) {
var t = i[e], a = n.CocosHelper.findNode(cc.Canvas.instance.node, t);
a.active = !0;
var s = a.getComponent(c.default);
s.enabled = !0;
s.actionCallBack = function() {
"right_hand0" == t && o.addHandCm();
};
}, s = 0; s < i.length; s++) a(s);
};
t.prototype.addHandCm = function() {
console.log("addHandCm");
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), c = 0; c < e.length; c++) {
var a = e[c], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(i.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
var h = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
console.log(h._loopSound);
cc.audioEngine.stopEffect(h._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(h.actionNode);
h.showParticle();
if (-1 == h._loopSound) {
h._loopSound = cc.audioEngine.playEffect(h.lachang, !1);
setTimeout(function() {
h._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(h.actionNode);
console.log(h._loopSound);
h.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(3 * (t + 1)), cc.callFunc(function() {
a.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) {
var o = e.getSlot("motion" + t + "_slime");
e.getSlot("motion" + (t + 1) + "_slime").displayIndex = 0;
o.displayIndex = -1;
} else {
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
i.runAction(cc.fadeIn(.5));
n.CocosHelper.showBackOut(i, n.CocosHelper.ShowDirection.show_from_right);
}
})));
}, o = this, i = 0; i < 6; i++) t(i);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {};
t.prototype.touchHomeBtn = function() {};
__decorate([ d(cc.Label) ], t.prototype, "label", void 0);
__decorate([ d(cc.AudioClip) ], t.prototype, "lachang", void 0);
return t = __decorate([ l ], t);
}(cc.Component);
o.default = u;
cc._RF.pop();
}, {
"../common/Script/codebase/utils/CocosHelperGS": "CocosHelperGS",
"../script/DataConfigGS": "DataConfigGS",
"./DragonCompoentGS": "DragonCompoentGS",
"./MoveIn_oGS": "MoveIn_oGS",
"./TipManagerGS": "TipManagerGS"
} ],
makeHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1137FVVMlHYb1Z0K8VY+O/", "makeHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/codebase/utils/CocosHelperHC"), i = e("./DragonCompoentHC"), c = e("./TipManagerHC"), a = e("../common/Script/codebase/TransitionSceneHC"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.actionNode = null;
t.showPartic = -1;
t.indexPNum = 0;
t._loopSound = -1;
t._showpartic = -1;
return t;
}
t.prototype.start = function() {
this.dynamicCreate();
};
t.prototype.dynamicCreate = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay);
this.addHandCm();
};
t.prototype.addHandCm = function() {
this.actionNode = new cc.Node();
cc.Canvas.instance.node.addChild(this.actionNode);
for (var e = [ "left_hand0", "right_hand0" ], t = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon"), o = (t.getComponent(dragonBones.ArmatureDisplay), 
t.getComponent(dragonBones.ArmatureDisplay).armature()), c = 0; c < e.length; c++) {
var a = e[c], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a), r = s.getComponent(i.default), l = s.getPosition(), d = l.add(cc.v2());
d.x = s.getParent().convertToNodeSpaceAR("left_hand0" == a ? cc.v2(0, 0) : cc.v2(cc.view.getVisibleSize().width, 0)).x;
r.setStartPos(l);
r.setEndPos(d);
var u = "left_hand0" == a ? "slimel0" : "slimer0", p = o.getBone(u);
r.setMoveBone(p);
}
for (var h = 1; h <= 5; h++) {
var f = o.getSlot("motion" + h + "_slime");
f.displayIndex = -1;
f._updateColor();
}
var g = this;
cc.find("Canvas").on("PullTouch", function(e, t, o) {
cc.find("Canvas/arrow_right").active = !1;
cc.find("Canvas/arrow_left").active = !1;
console.log(g._loopSound);
cc.audioEngine.stopEffect(g._loopSound);
});
cc.find("Canvas").on("Pulling", function(e, t, o) {
cc.director.getActionManager().resumeTarget(g.actionNode);
g.showParticle();
if (-1 == g._loopSound) {
g._loopSound = cc.audioEngine.playEffect(g.lachang, !1);
setTimeout(function() {
g._loopSound = -1;
}, 1500);
}
});
cc.find("Canvas").on("PullEnd", function(e, t, o) {
console.log("PullEnd");
cc.director.getActionManager().pauseTarget(g.actionNode);
console.log(g._loopSound);
g.hideParticle();
});
this.startAction();
};
t.prototype.startAction = function() {
for (var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "dragon").getComponent(dragonBones.ArmatureDisplay).armature(), t = function(t) {
o.actionNode.runAction(cc.sequence(cc.delayTime(3 * (t + 1)), cc.callFunc(function() {
c.default.getInstance().jumpTips();
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand0"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand0"), 
n.CocosHelper.findNode(cc.Canvas.instance.node, "left_hand1"), n.CocosHelper.findNode(cc.Canvas.instance.node, "right_hand1");
if (5 != t) {
var o = e.getSlot("motion" + t + "_slime");
e.getSlot("motion" + (t + 1) + "_slime").displayIndex = 0;
o.displayIndex = -1;
} else {
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
i.active = !0;
i.runAction(cc.sequence(cc.scaleTo(.2, 1.1), cc.scaleTo(.2, 1)));
}
})));
}, o = this, i = 0; i < 6; i++) t(i);
cc.director.getActionManager().pauseTarget(this.actionNode);
};
t.prototype.showParticle = function() {
this.indexPNum = this.indexPNum + 1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor");
if (-1 == this._showpartic) {
this._showpartic = 1;
var t = e.getComponent(cc.ParticleSystem);
e.active = !0;
t.resetSystem();
}
};
t.prototype.hideParticle = function() {
this._showpartic = -1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "heartFullColor").getComponent(cc.ParticleSystem).stopSystem();
};
t.prototype.touchNextBtn = function() {
a.default.changeScene("clickSlimeHC");
};
t.prototype.touchBackBtn = function() {
a.default.changeScene("makeSculpeyHC");
};
__decorate([ l({
type: cc.AudioClip
}) ], t.prototype, "lachang", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/Script/codebase/TransitionSceneHC": "TransitionSceneHC",
"../common/Script/codebase/utils/CocosHelperHC": "CocosHelperHC",
"./DragonCompoentHC": "DragonCompoentHC",
"./TipManagerHC": "TipManagerHC"
} ],
moveBackGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "714efggZZJGCJiBxBSMkp5S", "moveBackGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n, i = cc._decorator, c = i.ccclass, a = i.property;
(function(e) {
e[e.left = 0] = "left";
e[e.right = 1] = "right";
e[e.up = 2] = "up";
e[e.down = 3] = "down";
})(n || (n = {}));
var s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.endPos = null;
t.isOnLoad = !0;
t.diretion = n.left;
return t;
}
t.prototype.start = function() {
this.isOnLoad && this.RunAction();
};
t.prototype.RunAction = function() {
switch (this.diretion) {
case n.left:
this.leftMove();
break;

case n.right:
this.rightMove();
break;

case n.up:
this.upMove();
break;

case n.down:
this.downMove();
}
};
t.prototype.leftMove = function() {
if (null == this.endPos) {
var e = cc.moveBy(1, cc.v2(-900, 0)), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
} else {
e = cc.moveTo(1, this.endPos), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
}
};
t.prototype.rightMove = function() {
if (null == this.endPos) {
var e = cc.moveBy(1, cc.v2(900, 0)), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
} else {
e = cc.moveTo(1, this.endPos), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
}
};
t.prototype.upMove = function() {
if (null == this.endPos) {
var e = cc.moveBy(1, cc.v2(0, -900)), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
} else {
e = cc.moveTo(1, this.endPos), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
}
};
t.prototype.downMove = function() {
if (null == this.endPos) {
var e = cc.moveBy(1, cc.v2(0, 900)), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
} else {
e = cc.moveTo(1, this.endPos), t = cc.callFunc(this.actionCallBack, this), o = cc.sequence(e, t);
this.node.runAction(o);
}
};
__decorate([ a({
type: cc.Vec2,
tooltip: "终点坐标,默认屏幕外"
}) ], t.prototype, "endPos", void 0);
__decorate([ a() ], t.prototype, "isOnLoad", void 0);
__decorate([ a({
type: cc.Enum(n)
}) ], t.prototype, "diretion", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {} ],
niceFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21202W2R9JA7Cx2lpWZPvS", "niceFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {};
t.addNode = function() {
var e = new cc.Node();
e.name = "nice1";
e.setPosition(cc.v2(0, 230));
e.angle = 0;
e.addComponent(cc.Sprite);
cc.Canvas.instance.node.addChild(e);
var t = new cc.Node();
t.name = "nice2";
t.setPosition(cc.v2(230, 200));
t.angle = -25;
t.addComponent(cc.Sprite);
cc.Canvas.instance.node.addChild(t);
var o = new cc.Node();
o.name = "nice3";
o.setPosition(cc.v2(-230, 200));
o.angle = 25;
o.addComponent(cc.Sprite);
cc.Canvas.instance.node.addChild(o);
};
t.addNice = function(e) {
this.addNode();
var t = [];
t.push("Canvas/nice1");
t.push("Canvas/nice2");
t.push("Canvas/nice3");
var o = [ "nice", "good", "welldone" ], n = cc.find(t[Math.floor(3 * Math.random())]);
n.scale = 0;
var i = Math.floor(3 * Math.random());
console.log("num" + i);
cc.loader.loadRes([ "flowerslime/nice_", "flowerslime/good_", "flowerslime/welldone_" ][i], cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoRelease(t, !0);
n.getComponent(cc.Sprite).spriteFrame = t;
}
});
var c = cc.scaleTo(.5, .8), a = cc.callFunc(function() {
cc.loader.loadRes(o[i], cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoRelease(t, !0);
cc.audioEngine.play(t, !1, 1);
}
});
}.bind(this)), s = cc.callFunc(function() {
n.getComponent(cc.Sprite).spriteFrame = null;
});
n.runAction(cc.sequence(cc.spawn(c, a), cc.delayTime(e), s));
};
return t = __decorate([ i ], t);
}(cc.Component));
o.default = c;
cc._RF.pop();
}, {} ],
oldHomeFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2142+Ask1OhYt4gdSzI8ZF", "oldHomeFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./MyMoveInFS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.jump = null;
t.jump1 = null;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
var e = this;
jsToCPP.getInstance().showBanner();
jsToCPP.getInstance().setEmailContentAndTitle("Flower Slime", "Look,  I just added so many flowers in my slime. It's so fun.");
cc.loader.loadRes("flowerslime/bg_3", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.loader.setAutoRelease(t, !1);
cc.audioEngine.playMusic(t, !0);
}
});
this.node.getChildByName("boy").getComponent(n.default).actionCallBack = function() {
e.node.getChildByName("star_bg2").active = !0;
var t = e.node.getChildByName("logo");
cc.audioEngine.playEffect(e.jump, !1);
t.runAction(cc.sequence(cc.spawn(cc.jumpBy(.65, -200, 0, 30, 1), cc.scaleTo(.65, 1), cc.rotateBy(.65, 360)), cc.callFunc(function() {
var t = e.node.getChildByName("play"), o = cc.rotateBy(.75, 360), n = cc.scaleTo(.75, 1);
cc.audioEngine.play(e.jump1, !1, .5);
t.runAction(cc.sequence(cc.spawn(o, n), cc.callFunc(function() {
e.node.getChildByName("homeheartParticleleft").active = !0;
t.getComponent(cc.Button).interactable = !0;
t.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.65, 1.05), cc.scaleTo(.6, 1))));
})));
})));
};
};
t.prototype.touchUrl = function() {
console.log("http://www.funfunnymedia.com/privacys/");
jsToCPP.getInstance().openUrl("http://www.funfunnymedia.com/privacys/");
};
__decorate([ a(cc.AudioClip) ], t.prototype, "jump", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "jump1", void 0);
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./MyMoveInFS": "MyMoveInFS"
} ],
platorm: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "aa9909PXs1AmZ60MbFjBT/f", "platorm");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
if (cc.sys.platform == cc.sys.ANDROID) {
this.node.getChildByName("bg").active = !1;
this.node.getChildByName("kids0").active = !1;
this.node.getChildByName("crazy").active = !1;
} else this.node.getChildByName("loading_bg").active = !1;
};
__decorate([ c(cc.Label) ], t.prototype, "label", void 0);
__decorate([ c ], t.prototype, "text", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
play1BlueSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "33b568QNK5MlZrNvvtvFShn", "play1BlueSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../TipManagerMS"), c = e("../../common/common/Script/codebase/TransitionSceneMS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.boomSp = [];
t.boom = null;
t.winAudio = null;
t.isShowBubble = !1;
t.bubbleNum = 0;
return t;
}
t.prototype.start = function() {
var e = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "slime2");
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.isShowBubble || (e.isShowBubble = !0);
e.showBubble();
}))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "bg").runAction(cc.sequence(cc.delayTime(10), cc.callFunc(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.opacity = 0;
e.runAction(cc.fadeIn(1));
})));
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 1e3;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 1e3;
};
t.prototype.showBubble = function() {
var e = this, t = 250 - 500 * Math.random(), o = 350 - 700 * Math.random(), c = new cc.Node(), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "bubble_cotent");
c.parent = a;
c.position = cc.v2(o, t);
var s = c.addComponent(cc.Sprite);
s.spriteFrame = this.boomSp[0];
c.zIndex = 10;
c.scale = 0;
var r = this.node.scale, l = cc.scaleTo(.132, .82 * r, r), d = cc.scaleTo(.12, r, .86 * r), u = cc.scaleTo(.108, .88 * r, r), p = cc.scaleTo(.096, r, .89 * r), h = cc.scaleTo(.084, r), f = cc.sequence(l, d, u, p, h);
c.runAction(cc.sequence(cc.scaleTo(.5, 1), f));
c.on(cc.Node.EventType.TOUCH_START, function() {
c.targetOff(e);
e.bubbleNum % 2 == 0 && i.default.getInstance().jumpTips();
e.bubbleNum = e.bubbleNum + 1;
for (var t = [], o = function(e) {
t.push(cc.callFunc(function() {
s.spriteFrame = e;
}));
t.push(cc.delayTime(.15));
}, n = 0, a = e.boomSp; n < a.length; n++) {
o(a[n]);
}
cc.audioEngine.playEffect(e.boom, !1);
var r = cc.sequence(t, cc.callFunc(function() {
e.isShowBubble = !1;
}));
c.runAction(r);
c.runAction(cc.sequence(cc.delayTime(.7), cc.fadeOut(.2), cc.removeSelf()));
}, this);
};
t.prototype.touchNext = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0");
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "finish");
i.active = !0;
i.getComponent(cc.ParticleSystem).resetSystem();
i.zIndex = 100;
cc.audioEngine.playEffect(this.winAudio, !1);
setTimeout(function() {
c.default.changeScene("playSlimeBlueMS");
}, 3e3);
};
__decorate([ r(cc.Label) ], t.prototype, "label", void 0);
__decorate([ r ], t.prototype, "text", void 0);
__decorate([ r({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "boomSp", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "boom", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "winAudio", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../TipManagerMS": "TipManagerMS"
} ],
play1MS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9d7b0koFl5LXbUxhJNZ1EC0", "play1MS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../common/common/Script/compoent/MoveInMS"), c = e("../common/common/Script/ads/IconItemMS"), a = e("../common/common/Script/codebase/SpriteDrag/SpriteDragMS"), s = e("./fallSpriteCompoentMS"), r = e("./DataConfigMS"), l = e("../common/common/Script/ads/RewardManagerMS"), d = e("./TipManagerMS"), u = cc._decorator, p = u.ccclass, h = u.property, f = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.touchNodeVector = [];
t.insta = null;
t.conteneNode = null;
t.iconBg = null;
t.liquidSprime = null;
t.liquidSprime1 = null;
t.liquidSprime2 = null;
t.liquidAUDIO = null;
t.touchBtnAudio = null;
t.flyAudio = null;
t.flyAudioOut = null;
t.sauceOut = null;
t.movePour = null;
t.win = null;
t.swip = null;
t.push = null;
t.doneAudio = null;
t.flyTop = null;
t.iconsPool = null;
t.selectItemName = "";
t._step = 0;
t.isShowLight = !1;
t.selectLightTempIndex = 0;
t.isLightShow = !1;
t.soundIndex = -1;
t.mascaraMoveIng = !1;
t.mascaraCanSauce = !0;
t.selectlipstick = 0;
t.tempRotate = 0;
t.lipstickmove = !1;
t.lipsticCankmove = !0;
t.lipstickNum = 0;
t.liquidTouchIndex = 0;
t.isTouchTool = !1;
return t;
}
t.prototype.start = function() {
l.default.getInstance().loadConfig();
r.default.getInstance().playMusic();
if (null == this.iconsPool) {
this.iconsPool = new cc.NodePool();
for (var e = 0; e < 5; e++) this.iconsPool.put(cc.instantiate(this.insta));
}
n.CocosHelper.findNode(cc.Canvas.instance.node, "box_up").zIndex = 10;
n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_up").zIndex = 10;
this.showTips();
};
t.prototype.showTips = function() {
var e = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "box_up").runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
for (var t = null, o = 0, i = e.touchNodeVector; o < i.length; o++) {
var c = i[o];
if (0 != c.width) {
t = c;
break;
}
}
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl");
console.log(a.color.getR());
if (t && Number(a.color.getR()) > 120) {
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
s.zIndex = 100;
s.position = s.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0)));
s.active = !0;
s.stopAllActions();
s.runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)), cc.moveBy(.5, cc.v2(0, 10)), cc.moveBy(.5, cc.v2(0, -10)), cc.callFunc(function() {
s.active = !1;
})));
}
}), cc.delayTime(5))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "box").runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {}), cc.delayTime(10))));
};
t.prototype.doDealStep = function() {
var e = this;
this._step = this._step + 1;
console.log("this._step" + this._step);
this._step % 2 == 0 && d.default.getInstance().jumpTips();
if (7 == this._step) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime"), o = n.CocosHelper.captureNode2(t);
r.default.getInstance().setTexture(o);
console.log(o);
var i = cc.view.getVisibleSize().width, c = cc.view.getVisibleSize().height;
t.getChildByName("plate_slime_t").active = !1;
n.CocosHelper.captureNodeSize(t, i, c).then(function(o) {
t.getChildByName("plate_slime_t").active = !0;
if (null == o) ; else {
r.default.getInstance().setTexture(o);
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "finish");
i.active = !0;
i.getComponent(cc.ParticleSystem).resetSystem();
cc.audioEngine.playEffect(e.win, !1);
setTimeout(function() {
cc.director.loadScene("play2SceneMS");
}, 1500);
}
});
}
};
t.prototype.btnTest = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime"), t = n.CocosHelper.captureNode2(e);
r.default.getInstance().setTexture(t);
console.log(t);
var o = cc.view.getVisibleSize().width, i = cc.view.getVisibleSize().height;
e.getChildByName("plate_slime_t").active = !1;
n.CocosHelper.captureNodeSize(e, o, i).then(function(t) {
e.getChildByName("plate_slime_t").active = !0;
if (null == t) ; else {
var o = new cc.Node(), n = o.addComponent(cc.Sprite);
n.spriteFrame = new cc.SpriteFrame(t);
cc.Canvas.instance.node.addChild(o);
o.x = 0;
o.y = 0;
r.default.getInstance().setTexture(t);
console.log(n.node.width);
cc.director.loadScene("play2SceneMS");
}
});
};
t.prototype.touchNode = function(e, t) {
var o = this;
console.log(t);
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
i.zIndex = 100;
i.active = !1;
e.target;
this.touchNodeVector.forEach(function(e) {
e.getComponent(cc.Button).interactable = !1;
});
this.selectItemName = t;
this.toolFly(t, function() {
o.changeStatus(!1);
o.showBtn(!0);
o.showTool(t);
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
e.zIndex = 100;
e.active = !1;
}, !0);
console.log(t);
};
t.prototype.showTool = function(e) {
if ("air" != e) {
this.showIconBg(e);
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board");
t.active = !0;
t.opacity = 0;
setTimeout(function() {
var e = t.position, o = e.sub(cc.v2(-400, 0));
t.setPosition(o);
t.runAction(cc.sequence(cc.spawn(cc.moveTo(.56, e), cc.fadeIn(.5)), cc.callFunc(function() {})));
}, 100);
} else this.showAir();
};
t.prototype.showIconBg = function(e) {
for (var t = [ "nail_polish", "eye_shadow", "lipstick", "liquid", "air", "mascara", "light" ], o = 0, i = 0; i < t.length; i++) {
if (t[i] == e) {
o = i;
break;
}
}
var a = [ [ "nail_polish_red", "nail_polish_purple", "nail_polish_greed", "nail_polish_blue" ], [ "eye_shadow_blue", "eye_shadow_brown", "eye_shadow_pink", "eye_shadow_purple" ], [ "lipstick_golden", "lipstick_greed", "lipstick_orange", "lipstick_pink", "lipstick_purple" ], [ "liquid_foundation_0", "liquid_foundation_1" ], [ "air" ], [ "mascara_blue", "mascara_brown", "mascara_orange", "mascara_purple" ], [ "light_golden", "light_rainbow0", "light_rainbow1" ] ][o], s = n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board");
s.active = !0;
var r = [];
for (i = 0; i < a.length; i++) r.push("makeupms/icon/" + a[i]);
for (var l = 0, d = this.conteneNode.children.slice(); l < d.length; l++) {
var u = d[l];
this.iconsPool.put(u);
}
var p = this;
cc.loader.loadResArray(r, cc.SpriteFrame, function(t, o) {
for (var n = 0; n < o.length; n++) {
var i = null;
(i = p.iconsPool.size() > 0 ? p.iconsPool.get() : cc.instantiate(p.insta)).getChildByName("Background").getComponent(cc.Sprite).spriteFrame = o[n];
i.parent = p.conteneNode;
var a = i.getComponent(c.default);
a.index = n;
a.isRewardLock = n % 2 == 0;
a.key = a.moduleName = e;
0 == n && (a.key = "lock");
a.init();
var s = new cc.Component.EventHandler();
s.component = "play1MS";
s.handler = "touchItem";
s.target = p.node;
a.getComponent(cc.Toggle).isChecked = !1;
a.getComponent(cc.Toggle).checkEvents = [ s ];
}
});
s.getChildByName("scrollview").getComponent(cc.ScrollView).scrollToLeft();
};
t.prototype.touchItem = function(e) {
if (e.isChecked) {
cc.audioEngine.playEffect(this.touchBtnAudio, !1);
var t = e.node, o = t.getComponent(c.default), n = o.index;
e.node.convertToWorldSpaceAR(cc.v2(0, 0));
console.log(t.name + " " + o.moduleName);
-1 != o.moduleName.indexOf("liquid") ? this.showLiquid(n) : -1 != o.moduleName.indexOf("lipstick") ? this.showlipstick(n) : -1 != o.moduleName.indexOf("mascara") ? this.showmascara(n) : -1 != o.moduleName.indexOf("nail_polish") ? this.shownail_polish(n) : -1 != o.moduleName.indexOf("eye_shadow") ? this.showeye_shadow(n) : -1 != o.moduleName.indexOf("light") && this.showlight(n);
}
};
t.prototype.showlight = function(e) {
var t = this;
if (!this.isShowLight) {
this.isShowLight = !0;
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_small");
o.stopAllActions();
var c = cc.v2(-167, 93);
o.position = cc.v2(-167, -993);
o.active = !0;
this.selectLightTempIndex = e;
cc.audioEngine.playEffect(this.flyAudio, !1);
o.active = !0;
o.runAction(cc.sequence(cc.moveTo(1, c), cc.callFunc(function() {
t.isShowLight = !1;
o.getComponent(a.default).enabled = !0;
})));
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_move");
s.stopAllActions();
s.position = cc.v2(0, 227);
s.active = !1;
this.selectlipstick = e;
var l = [ "light_golden", "light_rainbow0", "light_rainbow1" ];
r.default.getInstance().setSelectLight(l[e]);
cc.loader.loadRes("makeupms/light/" + l[e], cc.SpriteFrame, function(e, t) {
e ? console.log(e + "") : s.getChildByName("light_move_in").getComponent(cc.Sprite).spriteFrame = t;
});
cc.loader.loadRes("makeupms/light/small/" + l[e], cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
n.CocosHelper.findNode(cc.Canvas.instance.node, "light_inslime").getComponent(cc.Sprite).spriteFrame = t;
}
});
cc.audioEngine.playEffect(this.flyAudio, !1);
setTimeout(function() {
n.CocosHelper.showBackOut(s, i.ShowDirection.top, function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_inslime");
e.active = !0;
e.scale = 0;
e.stopAllActions();
e.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(3, 1), cc.callFunc(function() {
t.isLightShow = !1;
o.active = !1;
cc.audioEngine.stopEffect(t.soundIndex);
cc.audioEngine.playEffect(t.flyAudioOut, !1);
n.CocosHelper.hideNode(s, i.ShowDirection.right);
t.changeStatus(!0);
t.selectItemName = "";
t.toolBoardMiss();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "light0");
e.active = !1;
var c = e.getChildByName("light_touch");
c.position = cc.v2(1e3, 1e4);
c.width = 0;
c.height = 0;
t.doDealStep();
})));
cc.director.getActionManager().pauseTarget(e);
});
}, 300);
}
};
t.prototype.light_smallTouchBegin = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_reset").active = !1;
};
t.prototype.light_smallTouchIng = function(e, t, o, i) {
var c = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_small"), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_move"), s = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_inslime"), r = c.convertToWorldSpaceAR(cc.v2(-50, 0)), l = t.moveNode;
if (a.getBoundingBox().contains(a.parent.convertToNodeSpaceAR(r))) {
if (!this.isLightShow) {
this.isLightShow = !0;
cc.director.getActionManager().resumeTarget(s);
l.getChildByName("tool_p" + this.selectLightTempIndex).active = !0;
l.children.forEach(function(e) {
e.getComponent(cc.ParticleSystem) && e.getComponent(cc.ParticleSystem).resetSystem();
});
this.soundIndex = cc.audioEngine.playEffect(this.movePour, !0);
}
} else {
cc.director.getActionManager().pauseTarget(s);
l.getChildByName("tool_p" + this.selectLightTempIndex).active = !1;
cc.audioEngine.stopEffect(this.soundIndex);
this.isLightShow = !1;
}
};
t.prototype.light_smallTouchUp = function(e, t, o, i) {
var c = t.moveNode, a = n.CocosHelper.findNode(cc.Canvas.instance.node, "light_inslime");
cc.director.getActionManager().pauseTarget(a);
c.getChildByName("tool_p" + this.selectLightTempIndex).active = !1;
cc.audioEngine.stopEffect(this.soundIndex);
this.isLightShow = !1;
};
t.prototype.showeye_shadow = function(e) {
var t = this, o = n.CocosHelper.findNode(cc.Canvas.instance.node, "eye_shadow_move");
o.stopAllActions();
o.position = cc.v2(167, 146);
o.active = !1;
this.selectlipstick = e;
var c = [ "eye_shadow_blue", "eye_shadow_brown", "eye_shadow_pink", "eye_shadow_purple" ];
cc.loader.loadRes("makeupms/eye_shadow/" + c[e], cc.SpriteFrame, function(e, t) {
e ? console.log(e + "") : o.getComponent(cc.Sprite).spriteFrame = t;
});
cc.loader.loadRes("makeupms/eye_shadow/small/" + c[e], cc.SpriteFrame, function(e, t) {
e ? console.log(e + "") : o.getChildByName("eye_shadow_move_in").getComponent(cc.Sprite).spriteFrame = t;
});
cc.audioEngine.playEffect(this.flyAudio, !1);
n.CocosHelper.showBackOut(o, i.ShowDirection.top, function() {
o.on(cc.Node.EventType.TOUCH_START, t.eye_shadowTouch, t);
});
};
t.prototype.eye_shadowTouch = function() {
var e = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_reset").active = !1;
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "eye_shadow_move");
t.targetOff(this);
t.getChildByName("eye_shadow_move_lid").runAction(cc.sequence(cc.fadeOut(.25), cc.callFunc(function() {
t.runAction(cc.sequence(cc.rotateTo(.5, -137), cc.callFunc(function() {
t.on(cc.Node.EventType.TOUCH_START, e.eye_shadow_Touch, e);
t.on(cc.Node.EventType.TOUCH_END, e.eye_shadow_TouchUp, e);
var o = t.getChildByName("eye_shadow_move_in");
o.active = !0;
o.scale = 0;
o.runAction(cc.sequence(cc.scaleTo(3, 1), cc.callFunc(function() {
cc.audioEngine.stopEffect(e.soundIndex);
t.targetOff(e);
var c = o, a = c.parent.convertToWorldSpaceAR(c.position), s = n.CocosHelper.findNode(cc.Canvas.instance.node, "content_tool").getChildByName("plate").getChildByName("plate_slime");
c.parent = s;
c.position = c.parent.convertToNodeSpaceAR(a);
c.zIndex = e._step;
var r = 200 - 400 * Math.random(), l = 90 - 170 * Math.random();
console.log(r + "  " + l);
c.runAction(cc.sequence(cc.delayTime(.01), cc.jumpTo(.5, cc.v2(r, l), 50, 1), cc.callFunc(function() {
cc.audioEngine.playEffect(e.flyAudioOut, !1);
n.CocosHelper.hideNode(t, i.ShowDirection.right);
e.changeStatus(!0);
e.selectItemName = "";
e.toolBoardMiss();
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "box"), c = o.getChildByName("eye_shadow_touch");
o.getChildByName("eye_shadow1").active = !1;
o.getChildByName("eye_shadow2").active = !1;
o.getChildByName("eye_shadow0").active = !1;
c.position = cc.v2(1e3, 1e4);
c.width = 0;
c.height = 0;
e.doDealStep();
})));
})));
cc.director.getActionManager().pauseTarget(o);
})));
})));
};
t.prototype.eye_shadow_Touch = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "eye_shadow_move_in");
cc.director.getActionManager().resumeTarget(e);
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = cc.audioEngine.playEffect(this.sauceOut, !0);
};
t.prototype.eye_shadow_TouchUp = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "eye_shadow_move_in");
cc.director.getActionManager().pauseTarget(e);
cc.audioEngine.stopEffect(this.soundIndex);
};
t.prototype.shownail_polish = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "nail_move"), o = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime");
t.getComponent(a.default).enabled = !1;
t.stopAllActions();
t.position = cc.v2(167, 146);
t.active = !1;
this.selectlipstick = e;
var c = [ "nail_polish_red", "nail_polish_purple", "nail_polish_greed", "nail_polish_blue" ], s = t.getChildByName("nail_move_p");
cc.loader.loadRes("makeupms/nail_polish/p/" + c[e], cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
var o = s.getComponent(cc.ParticleSystem);
o.custom = !0;
o.spriteFrame = t;
o.resetSystem();
}
});
cc.loader.loadRes("makeupms/nail_polish/" + c[e], cc.SpriteFrame, function(e, o) {
e ? console.log(e + "") : t.getChildByName("nail_up").getComponent(cc.Sprite).spriteFrame = o;
});
cc.loader.loadRes("makeupms/nail_polish/small/" + c[e], cc.SpriteFrame, function(e, t) {
e ? console.log(e + "") : o.getChildByName("nail_polish_inslime").getComponent(cc.Sprite).spriteFrame = t;
});
cc.audioEngine.playEffect(this.flyAudio, !1);
n.CocosHelper.showBackOut(t, i.ShowDirection.top, function() {
t.getComponent(a.default).enabled = !0;
});
};
t.prototype.nail_movebegin = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_reset").active = !1;
};
t.prototype.nail_moveEnd = function(e, t, o, c) {
var a = this, r = t.moveNode;
t.enabled = !1;
var l = n.CocosHelper.findNode(cc.Canvas.instance.node, "nail_move");
l.getChildByName("nail-polish_lid_").runAction(cc.fadeOut(.25));
l.getChildByName("nail-polish_lid").runAction(cc.fadeOut(.25));
var d = r.getComponent(s.default);
if (d) {
d.enabled = !0;
d.bowlInFall.zIndex = this._step;
d.actionStartCallBack = function() {
console.log(r.name);
};
d.actionEndCallBack = function() {
cc.audioEngine.playEffect(a.flyAudioOut, !1);
n.CocosHelper.hideNode(l, i.ShowDirection.right);
a.changeStatus(!0);
a.selectItemName = "";
a.toolBoardMiss();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "box"), t = e.getChildByName("nail_polish_touch");
e.getChildByName("nail_polish1").active = !1;
e.getChildByName("nail_polish2").active = !1;
e.getChildByName("nail_polish3").active = !1;
e.getChildByName("nail_polish0").active = !1;
a.doDealStep();
t.position = cc.v2(1e3, 1e4);
t.width = 0;
t.height = 0;
};
}
};
t.prototype.showAir = function() {
var e = this, t = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_move");
t.position = cc.v2(167, 146);
t.active = !1;
cc.audioEngine.playEffect(this.flyAudio, !1);
n.CocosHelper.showBackOut(t, i.ShowDirection.top, function() {
t.on(cc.Node.EventType.TOUCH_START, e.airTouch, e);
});
};
t.prototype.airTouch = function() {
var e = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_reset").active = !1;
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_move"), o = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_in_touch");
t.targetOff(this);
var c = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_in");
c.runAction(cc.sequence(cc.moveTo(.25, c.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0)))), cc.callFunc(function() {
c.active = !1;
o.active = !0;
n.CocosHelper.hideNode(t, i.ShowDirection.right);
o.on(cc.Node.EventType.TOUCH_START, e.air_in_Touch, e);
o.on(cc.Node.EventType.TOUCH_END, e.air_in_TouchUp, e);
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_inslime");
a.active = !0;
a.scale = 0;
a.zIndex = e._step;
a.runAction(cc.sequence(cc.scaleTo(3, 1), cc.callFunc(function() {
cc.audioEngine.stopEffect(e.soundIndex);
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_in_touch");
t.targetOff(e);
t.getChildByName("air_in_touch_orgin").active = !0;
t.getChildByName("air_in_touch_push").active = !1;
t.getChildByName("air_in_touch_fall").active = !1;
cc.audioEngine.playEffect(e.flyAudioOut, !1);
n.CocosHelper.hideNode(t, i.ShowDirection.right);
e.changeStatus(!0);
e.selectItemName = "";
e.toolBoardMiss();
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "box"), c = o.getChildByName("air_touch");
o.getChildByName("air0").active = !1;
c.position = cc.v2(1e3, 1e4);
c.width = 0;
c.height = 0;
e.doDealStep();
})));
cc.director.getActionManager().pauseTarget(a);
})));
};
t.prototype.air_in_Touch = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_in_touch");
e.getChildByName("air_in_touch_orgin").active = !1;
e.getChildByName("air_in_touch_push").active = !0;
e.getChildByName("air_in_touch_fall").active = !0;
e.getChildByName("air_in_touch_fall").opacity = 0;
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = cc.audioEngine.playEffect(this.sauceOut, !0);
e.getChildByName("air_in_touch_fall").runAction(cc.sequence(cc.fadeIn(.2), cc.callFunc(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_inslime");
cc.director.getActionManager().resumeTarget(e);
})));
};
t.prototype.air_in_TouchUp = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_in_touch");
e.getChildByName("air_in_touch_orgin").active = !0;
e.getChildByName("air_in_touch_push").active = !1;
e.getChildByName("air_in_touch_fall").active = !1;
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "air_inslime");
cc.director.getActionManager().pauseTarget(t);
cc.audioEngine.stopEffect(this.soundIndex);
};
t.prototype.showmascara = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "mascara_move");
t.getComponent(a.default).enabled = !1;
t.stopAllActions();
t.position = cc.v2(167, 146);
t.active = !1;
this.selectlipstick = e;
var o = [ "mascara_blue", "mascara_brown", "mascara_orange", "mascara_purple" ];
cc.loader.loadRes("makeupms/mascara/" + o[e] + 2, cc.SpriteFrame, function(e, o) {
e ? console.log(e + "") : t.getChildByName("mascara_lid").getComponent(cc.Sprite).spriteFrame = o;
});
cc.loader.loadRes("makeupms/mascara/" + o[e] + 1, cc.SpriteFrame, function(e, o) {
e ? console.log(e + "") : t.getChildByName("mascara_blue1").getComponent(cc.Sprite).spriteFrame = o;
});
cc.loader.loadRes("makeupms/mascara/" + o[e] + 0, cc.SpriteFrame, function(e, o) {
e ? console.log(e + "") : t.getChildByName("mascara_blue0").getComponent(cc.Sprite).spriteFrame = o;
});
cc.loader.loadRes("makeupms/mascara/" + o[e] + 0, cc.SpriteFrame, function(e, o) {
e ? console.log(e + "") : t.getComponent(cc.Sprite).spriteFrame = o;
});
cc.audioEngine.playEffect(this.flyAudio, !1);
n.CocosHelper.showBackOut(t, i.ShowDirection.top, function() {
t.getComponent(a.default).enabled = !0;
});
this.lipstickNum = 0;
};
t.prototype.mascaraTouchBegin = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_reset").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "mascara_move").getChildByName("mascara_blue1").runAction(cc.fadeOut(.5));
this.mascaraMoveIng = !1;
};
t.prototype.mascaraTouchIng = function(e, t, o, i) {
var c = this, a = 180 * e.getLocation().angle(e.getPreviousLocation()) / Math.PI;
this.tempRotate = -a;
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "mascara_move"), r = n.CocosHelper.findNode(cc.Canvas.instance.node, "bg"), l = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime"), d = s.convertToWorldSpaceAR(cc.v2(0, -100));
if (this.mascaraCanSauce && l.getBoundingBox().contains(l.parent.convertToNodeSpaceAR(d))) {
this.mascaraCanSauce = !1;
var u = new cc.Node();
u.parent = l;
u.position = l.convertToNodeSpaceAR(d);
u.angle = -this.tempRotate;
u.zIndex = this._step;
console.log(this.tempRotate);
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = cc.audioEngine.playEffect(this.swip, !1);
cc.loader.loadRes("makeupms/mascara/small/" + [ "mascara_blue", "mascara_brown", "mascara_orange", "mascara_purple" ][this.selectlipstick], cc.SpriteFrame, function(e, t) {
e || (u.addComponent(cc.Sprite).spriteFrame = t);
});
this.lipstickNum = this.lipstickNum + 1;
if (4 == this.lipstickNum) {
var p = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next"), h = n.CocosHelper.findNode(cc.Canvas.instance.node, "decorateParticle");
if (!p.active) {
h.position = cc.v2(0, 0);
h.active = !0;
h.getComponent(cc.ParticleSystem).resetSystem();
cc.audioEngine.playEffect(this.doneAudio, !1);
p.active = !0;
this.lipstickNum = -1e4;
}
}
}
if (!this.mascaraMoveIng) {
this.mascaraMoveIng = !0;
r.stopAllActions();
r.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
c.mascaraCanSauce = !0;
}), cc.delayTime(1.3))));
}
};
t.prototype.mascaraTouchEnd = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "bg").stopAllActions();
};
t.prototype.showlipstick = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "lipstick");
t.getComponent(a.default).enabled = !1;
t.stopAllActions();
t.position = cc.v2(167, 146);
t.active = !1;
this.selectlipstick = e;
cc.loader.loadRes("makeupms/lipstick/" + [ "lipstick_golden", "lipstick_greed", "lipstick_orange", "lipstick_pink", "lipstick_purple" ][e], cc.SpriteFrame, function(e, o) {
e ? console.log(e + "") : t.getComponent(cc.Sprite).spriteFrame = o;
});
cc.audioEngine.playEffect(this.flyAudio, !1);
n.CocosHelper.showBackOut(t, i.ShowDirection.top, function() {
t.getComponent(a.default).enabled = !0;
});
this.lipstickNum = 0;
};
t.prototype.lipstickTouchBegin = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_reset").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "lipstick");
this.lipstickmove = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "bg").stopAllActions();
this.lipsticCankmove = !1;
};
t.prototype.lipstickTouchIng = function(e, t, o, i) {
var c = this, a = 180 * e.getLocation().angle(e.getPreviousLocation()) / Math.PI;
this.tempRotate = -a;
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "lipstick").convertToWorldSpaceAR(cc.v2(0, 100)), r = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime");
if (this.lipsticCankmove && r.getBoundingBox().contains(r.parent.convertToNodeSpaceAR(s))) {
this.lipsticCankmove = !1;
var l = new cc.Node();
l.parent = r;
l.position = r.convertToNodeSpaceAR(s);
l.angle = -this.tempRotate;
l.zIndex = this._step;
console.log(this.tempRotate);
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = cc.audioEngine.playEffect(this.swip, !1);
cc.loader.loadRes("makeupms/lipstick/small/" + [ "lipstick_golden", "lipstick_greed", "lipstick_orange", "lipstick_pink", "lipstick_purple" ][this.selectlipstick], cc.SpriteFrame, function(e, t) {
e || (l.addComponent(cc.Sprite).spriteFrame = t);
});
this.lipstickNum = this.lipstickNum + 1;
if (4 == this.lipstickNum) {
var d = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next"), u = n.CocosHelper.findNode(cc.Canvas.instance.node, "decorateParticle");
if (!d.active) {
u.position = cc.v2(0, 0);
u.active = !0;
u.getComponent(cc.ParticleSystem).resetSystem();
cc.audioEngine.playEffect(this.doneAudio, !1);
d.active = !0;
this.lipstickNum = -1e4;
}
}
}
if (!this.lipstickmove) {
this.lipstickmove = !0;
var p = n.CocosHelper.findNode(cc.Canvas.instance.node, "bg");
p.stopAllActions();
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime");
p.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
c.lipsticCankmove = !0;
}), cc.delayTime(1.3))));
}
};
t.prototype.lipstickTouchEnd = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "bg").stopAllActions();
};
t.prototype.showLiquid = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "liquid"), o = t.getChildByName("liquid_touch");
t.stopAllActions();
t.position = cc.v2(171, 112);
t.active = !1;
if (1 == e) {
t.getChildByName("liquid_up").getComponent(cc.Sprite).spriteFrame = this.liquidSprime;
o.getChildByName("liquid_fall1").getComponent(cc.Sprite).spriteFrame = this.liquidSprime1;
o.getChildByName("liquid_fall2").getComponent(cc.Sprite).spriteFrame = this.liquidSprime1;
o.getChildByName("liquid_fall3").getComponent(cc.Sprite).spriteFrame = this.liquidSprime1;
} else {
t.getChildByName("liquid_up").getComponent(cc.Sprite).spriteFrame = t.getComponent(cc.Sprite).spriteFrame;
o.getChildByName("liquid_fall1").getComponent(cc.Sprite).spriteFrame = this.liquidSprime2;
o.getChildByName("liquid_fall2").getComponent(cc.Sprite).spriteFrame = this.liquidSprime2;
o.getChildByName("liquid_fall3").getComponent(cc.Sprite).spriteFrame = this.liquidSprime2;
}
cc.audioEngine.playEffect(this.flyAudio, !1);
n.CocosHelper.showBackOut(t, i.ShowDirection.top);
t.on(cc.Node.EventType.TOUCH_START, this.liquidTouch, this);
};
t.prototype.liquidTouch = function() {
var e = this, t = n.CocosHelper.findNode(cc.Canvas.instance.node, "liquid"), o = t.getChildByName("liquid_touch");
if (!this.isTouchTool) {
this.isTouchTool = !0;
this.hideUi();
if (0 == this.liquidTouchIndex) {
t.getChildByName("liquid_lid").runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, 50)), cc.callFunc(function() {
e.isTouchTool = !1;
}), cc.fadeOut(.5)));
this.liquidTouchIndex = this.liquidTouchIndex + 1;
} else {
var c = o.getChildByName("liquid_fall" + this.liquidTouchIndex);
c.active = !0;
c.scale = 0;
t.runAction(cc.rotateTo(.25, -19));
o.runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, -20)), cc.callFunc(function() {})));
cc.audioEngine.playEffect(this.push, !1);
c.runAction(cc.sequence(cc.scaleTo(.5, -1, 1), cc.callFunc(function() {
var a = c.parent.convertToWorldSpaceAR(c.position), s = n.CocosHelper.findNode(cc.Canvas.instance.node, "content_tool").getChildByName("plate").getChildByName("plate_slime");
c.parent = s;
c.position = c.parent.convertToNodeSpaceAR(a);
c.zIndex = e._step;
var r = 200 - 400 * Math.random(), l = 90 - 170 * Math.random();
console.log(r + "  " + l);
o.runAction(cc.sequence(cc.moveBy(.5, cc.v2(0, 20)), cc.callFunc(function() {})));
c.runAction(cc.sequence(cc.delayTime(.01), cc.jumpTo(.5, cc.v2(r, l), 50, 1), cc.callFunc(function() {
e.liquidTouchIndex = e.liquidTouchIndex + 1;
e.isTouchTool = !1;
if (4 == e.liquidTouchIndex) {
e.isTouchTool = !1;
cc.audioEngine.playEffect(e.flyAudioOut, !1);
n.CocosHelper.hideNode(t, i.ShowDirection.right);
e.changeStatus(!0);
e.selectItemName = "";
e.toolBoardMiss();
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl").getChildByName("liquid_touch");
o.position = cc.v2(1e3, 1e4);
o.width = 0;
o.height = 0;
e.doDealStep();
}
})));
})));
}
}
};
t.prototype.touchBtnDone = function(e, t) {
e.target.active = !1;
cc.audioEngine.playEffect(this.touchBtnAudio, !1);
this.toolBoardMiss();
if ("lipstick" == this.selectItemName) {
(c = n.CocosHelper.findNode(cc.Canvas.instance.node, "lipstick")).getComponent(a.default).enabled = !1;
cc.audioEngine.playEffect(this.flyAudioOut, !1);
n.CocosHelper.hideNode(c, i.ShowDirection.left);
this.changeStatus(!0);
this.selectItemName = "";
this.toolBoardMiss();
var o = (s = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl")).getChildByName("lipstick_touch");
s.getChildByName("lipstick0").active = !1;
s.getChildByName("lipstick1").active = !1;
s.getChildByName("lipstick2").active = !1;
o.position = cc.v2(1e3, 1e4);
o.width = 0;
o.height = 0;
this.doDealStep();
} else if ("mascara" == this.selectItemName) {
var c, s;
(c = n.CocosHelper.findNode(cc.Canvas.instance.node, "mascara_move")).getComponent(a.default).enabled = !1;
cc.audioEngine.playEffect(this.flyAudioOut, !1);
n.CocosHelper.hideNode(c, i.ShowDirection.left);
this.changeStatus(!0);
this.selectItemName = "";
this.toolBoardMiss();
(o = (s = n.CocosHelper.findNode(cc.Canvas.instance.node, "mascara")).getChildByName("mascara_touch")).position = cc.v2(1e3, 1e4);
o.width = 0;
o.height = 0;
s.getChildByName("mascara0").active = !1;
s.getChildByName("mascara1").active = !1;
s.getChildByName("mascara2").active = !1;
s.getChildByName("mascara3").active = !1;
s.getChildByName("mascara4").active = !1;
this.doDealStep();
}
};
t.prototype.touchBtnReset = function() {
cc.audioEngine.playEffect(this.touchBtnAudio, !1);
this.toolBoardMiss();
};
t.prototype.hideUi = function() {
this.showBtn(!1);
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
};
t.prototype.toolBoardMiss = function() {
var e = this;
this.showBtn(!1);
n.CocosHelper.findNode(cc.Canvas.instance.node, "ui_board").active = !1;
this.changeStatus(!0);
this.toolFly(this.selectItemName, function() {
e.touchNodeVector.forEach(function(e) {
e.getComponent(cc.Button).interactable = !0;
});
}, !1);
};
t.prototype.showNextBtn = function() {
for (var e = [ "btn_next" ], t = function(t) {
var o = e[t], i = n.CocosHelper.findNode(cc.Canvas.instance.node, o);
i.active = !0;
i.opacity = 0;
setTimeout(function() {
var e = i.position, t = e.sub(cc.v2(400, 0));
i.setPosition(t);
i.runAction(cc.sequence(cc.spawn(cc.moveTo(.56, e), cc.fadeIn(.5)), cc.callFunc(function() {})));
}, 100);
}, o = 0; o < e.length; o++) t(o);
};
t.prototype.showBtn = function(e) {
for (var t = [ "btn_reset" ], o = function(o) {
var i = t[o], c = n.CocosHelper.findNode(cc.Canvas.instance.node, i);
if (e) {
c.active = !0;
c.opacity = 0;
setTimeout(function() {
var e = c.position, t = e.sub(cc.v2(400, 0));
c.setPosition(t);
c.runAction(cc.sequence(cc.spawn(cc.moveTo(.56, e), cc.fadeIn(.5)), cc.callFunc(function() {})));
}, 100);
} else c.active = !1;
}, i = 0; i < t.length; i++) o(i);
};
t.prototype.toolFly = function(e, t, o) {
var i = o ? 500 : -500;
if ("" != e) {
for (var c = [], a = 0; a < 5; a++) {
console.log(e + a);
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, e + a);
if (!s) break;
c.push(s);
console.log(s.name);
}
cc.audioEngine.playEffect(this.flyTop, !1);
var r = function(e) {
var o = c[e];
o.zIndex = 100;
o.runAction(cc.sequence(cc.delayTime(.05 * e), cc.moveBy(.3, cc.v2(0, i)), cc.callFunc(function() {
o.zIndex = 2;
e == c.length - 1 && t && t();
})));
};
for (a = 0; a < c.length; a++) r(a);
} else t && t();
};
t.prototype.changeStatus = function(e) {
for (var t = [ "bowl", "box", "mascara", "light0", "bg_t" ], o = 0; o < t.length; o++) {
var i = t[o], c = n.CocosHelper.findNode(cc.Canvas.instance.node, i);
this.doGrey(c, e);
}
};
t.prototype.doGrey = function(e, t) {
var o = t ? 255 : 100;
e.color = new cc.Color(o, o, o, 255);
e.children.forEach(function(e) {
e.color = new cc.Color(o, o, o, 255);
});
};
__decorate([ h(cc.Label) ], t.prototype, "label", void 0);
__decorate([ h ], t.prototype, "text", void 0);
__decorate([ h(cc.Node) ], t.prototype, "touchNodeVector", void 0);
__decorate([ h(cc.Prefab) ], t.prototype, "insta", void 0);
__decorate([ h(cc.Node) ], t.prototype, "conteneNode", void 0);
__decorate([ h(cc.Node) ], t.prototype, "iconBg", void 0);
__decorate([ h(cc.SpriteFrame) ], t.prototype, "liquidSprime", void 0);
__decorate([ h(cc.SpriteFrame) ], t.prototype, "liquidSprime1", void 0);
__decorate([ h(cc.SpriteFrame) ], t.prototype, "liquidSprime2", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "liquidAUDIO", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "touchBtnAudio", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "flyAudio", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "flyAudioOut", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "sauceOut", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "movePour", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "win", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "swip", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "push", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "doneAudio", void 0);
__decorate([ h(cc.AudioClip) ], t.prototype, "flyTop", void 0);
return t = __decorate([ p ], t);
}(cc.Component);
o.default = f;
cc._RF.pop();
}, {
"../common/common/Script/ads/IconItemMS": "IconItemMS",
"../common/common/Script/ads/RewardManagerMS": "RewardManagerMS",
"../common/common/Script/codebase/SpriteDrag/SpriteDragMS": "SpriteDragMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./DataConfigMS": "DataConfigMS",
"./TipManagerMS": "TipManagerMS",
"./fallSpriteCompoentMS": "fallSpriteCompoentMS"
} ],
play1PinkSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c4a64U0l9xCbIlSKqcQT8j9", "play1PinkSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../TipManagerMS"), c = e("../../common/common/Script/codebase/TransitionSceneMS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.boomSp = [];
t.boom = null;
t.winAudio = null;
t.isShowBubble = !1;
t.bubbleNum = 0;
return t;
}
t.prototype.start = function() {
var e = this;
n.CocosHelper.findNode(cc.Canvas.instance.node, "slime2");
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.isShowBubble || (e.isShowBubble = !0);
e.showBubble();
}))));
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "bg");
n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0");
t.runAction(cc.sequence(cc.delayTime(10), cc.callFunc(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.opacity = 0;
e.runAction(cc.fadeIn(1));
})));
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 1e3;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 1e3;
};
t.prototype.showBubble = function() {
var e = this, t = 250 - 500 * Math.random(), o = 350 - 700 * Math.random(), c = new cc.Node(), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "bubble_cotent");
c.parent = a;
c.position = cc.v2(o, t);
var s = c.addComponent(cc.Sprite);
s.spriteFrame = this.boomSp[0];
c.zIndex = 10;
c.scale = 0;
var r = this.node.scale, l = cc.scaleTo(.132, .82 * r, r), d = cc.scaleTo(.12, r, .86 * r), u = cc.scaleTo(.108, .88 * r, r), p = cc.scaleTo(.096, r, .89 * r), h = cc.scaleTo(.084, r), f = cc.sequence(l, d, u, p, h);
c.runAction(cc.sequence(cc.scaleTo(.5, 1), f));
c.on(cc.Node.EventType.TOUCH_START, function() {
c.targetOff(e);
e.bubbleNum % 2 == 0 && i.default.getInstance().jumpTips();
e.bubbleNum = e.bubbleNum + 1;
for (var t = [], o = function(e) {
t.push(cc.callFunc(function() {
s.spriteFrame = e;
}));
t.push(cc.delayTime(.15));
}, n = 0, a = e.boomSp; n < a.length; n++) {
o(a[n]);
}
cc.audioEngine.playEffect(e.boom, !1);
var r = cc.sequence(t, cc.callFunc(function() {
e.isShowBubble = !1;
}));
c.runAction(r);
c.runAction(cc.sequence(cc.delayTime(.7), cc.fadeOut(.2), cc.removeSelf()));
}, this);
};
t.prototype.touchNext = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0");
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "finish");
i.active = !0;
i.getComponent(cc.ParticleSystem).resetSystem();
i.zIndex = 100;
cc.audioEngine.playEffect(this.winAudio, !1);
setTimeout(function() {
c.default.changeScene("playSlimePinkMS");
}, 3e3);
};
__decorate([ r(cc.Label) ], t.prototype, "label", void 0);
__decorate([ r ], t.prototype, "text", void 0);
__decorate([ r({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "boomSp", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "boom", void 0);
__decorate([ r(cc.AudioClip) ], t.prototype, "winAudio", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../TipManagerMS": "TipManagerMS"
} ],
play2MS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bd1727HBphDSIsCJSDa0OzE", "play2MS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = e("./DataConfigMS"), c = e("../common/common/Script/CombinedComponent/MoveComponentMS"), a = e("./TipManagerMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.flyAudio = null;
t.done = null;
t.touch = null;
t.touchHandTopBeginAudio = null;
t.handShow = !1;
t.sound = -1;
t.soundIndex = -1;
t.hand_move_pos = cc.v2(0, 0);
t.moveindex = 0;
t.isMove = !1;
t.isBegin = !1;
t.touchEnd = !1;
t.touchEndNum = 0;
return t;
}
t.prototype.start = function() {
i.default.getInstance().playMusic();
for (var e = [ "plate_slime0", "plate_slime1", "plate_slime2" ], t = 0; t < e.length; t++) {
var o = e[t], c = n.CocosHelper.findNode(cc.Canvas.instance.node, o), a = new cc.Node();
a.parent = c;
a.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i.default.getInstance().getTexture());
}
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "touchLeft"), r = n.CocosHelper.findNode(cc.Canvas.instance.node, "touchRight");
s.on(cc.Node.EventType.TOUCH_MOVE, this.touchLeftMove, this);
var l = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
setTimeout(function() {
n.CocosHelper.showHand(l, s, s, r);
}, 1e3);
};
t.prototype.touchLeftMove = function(e) {
var t = e.getDelta(), o = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger"), i = n.CocosHelper.findNode(cc.Canvas.instance.node, "touchRight");
o.stopAllActions();
o.active = !1;
if (t.x > 0) {
cc.audioEngine.playEffect(this.touch, !1);
var c = n.CocosHelper.findNode(cc.Canvas.instance.node, "touchLeft");
c.off(cc.Node.EventType.TOUCH_MOVE, this.touchLeftMove, this);
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime1_").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime0").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime1").active = !0;
n.CocosHelper.showHand(o, i, i, c);
i.on(cc.Node.EventType.TOUCH_MOVE, this.touchRightMove, this);
}
};
t.prototype.touchRightMove = function(e) {
var t = e.getDelta(), o = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger"), i = n.CocosHelper.findNode(cc.Canvas.instance.node, "touchRight");
o.stopAllActions();
if (t.x < 0) {
cc.audioEngine.playEffect(this.touch, !1);
n.CocosHelper.findNode(cc.Canvas.instance.node, "touchLeft");
i.off(cc.Node.EventType.TOUCH_MOVE, this.touchRightMove, this);
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime2_").active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime1").active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_slime2").active = !0;
for (var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in").getComponent(c.default), s = [], r = 3; r < 7; r++) {
var l = "makeupms/slime/plate_slime" + r;
l = 5 == r || 6 == r ? l + "_1" : l;
s.push(l);
}
var d = this;
cc.loader.loadResArray(s, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
a.setMixPahth(t);
console.log("showHand");
d.showHand();
}
});
}
};
t.prototype.showHand = function() {
if (!this.handShow) {
this.handShow = !0;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move");
e.active = !0;
e.on(cc.Node.EventType.TOUCH_START, this.touchHandBegin, this);
e.on(cc.Node.EventType.TOUCH_MOVE, this.touchHandMove, this);
e.on(cc.Node.EventType.TOUCH_END, this.touchHandEnd, this);
e.on(cc.Node.EventType.TOUCH_CANCEL, this.touchHandCancle, this);
var t = e.getChildByName("slime_hand_r"), o = e.getChildByName("slime_hand_r1"), i = e.getChildByName("slime_hand_l1"), c = e.getChildByName("slime_hand_l");
t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(-20, 20)), cc.moveBy(.5, cc.v2(0, -20)), cc.moveBy(.5, cc.v2(20, 0)))));
o.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(-20, 20)), cc.moveBy(.5, cc.v2(0, -20)), cc.moveBy(.5, cc.v2(20, 0)))));
i.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(20, 20)), cc.moveBy(.5, cc.v2(0, -20)), cc.moveBy(.5, cc.v2(-20, 0)))));
c.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.v2(20, 20)), cc.moveBy(.5, cc.v2(0, -20)), cc.moveBy(.5, cc.v2(-20, 0)))));
cc.director.getActionManager().pauseTarget(t);
cc.director.getActionManager().pauseTarget(o);
cc.director.getActionManager().pauseTarget(i);
cc.director.getActionManager().pauseTarget(c);
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in"), s = this.node.scale, r = cc.scaleTo(.11 * 5.2, .82 * s, s), l = cc.scaleTo(.52, s, .86 * s), d = cc.scaleTo(.09 * 5.2, .88 * s, s), u = cc.scaleTo(.08 * 5.2, s, .89 * s), p = cc.scaleTo(.07 * 5.2, s), h = cc.callFunc(function() {}, this), f = cc.sequence(r, l, d, u, p, h);
a.runAction(cc.repeatForever(f));
cc.director.getActionManager().pauseTarget(a);
}
};
t.prototype.touchHandBegin = function() {
console.log("touchHandBegin");
n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move");
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in").getComponent(c.default).enabled = !0;
};
t.prototype.touchHandMove = function(e) {
var t = this, o = n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move"), i = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in"), a = i.getComponent(c.default), s = e.getDelta();
if (Math.abs(s.x) > 0 || Math.abs(s.y) > 0) {
if (-1 == this.sound) {
console.log("detal.x");
this.sound = 0;
a.startMix();
cc.director.getActionManager().resumeTarget(o);
cc.director.getActionManager().resumeTarget(i);
var r = o.getChildByName("slime_hand_r"), l = o.getChildByName("slime_hand_r1"), d = o.getChildByName("slime_hand_l1"), u = o.getChildByName("slime_hand_l");
cc.director.getActionManager().resumeTarget(r);
cc.director.getActionManager().resumeTarget(l);
cc.director.getActionManager().resumeTarget(d);
cc.director.getActionManager().resumeTarget(u);
setTimeout(function() {
t.sound = -1;
}, 1e3);
}
} else {
this.sound = -1;
a.stopMix();
cc.director.getActionManager().pauseTarget(o);
cc.director.getActionManager().pauseTarget(i);
r = o.getChildByName("slime_hand_r"), l = o.getChildByName("slime_hand_r1"), d = o.getChildByName("slime_hand_l1"), 
u = o.getChildByName("slime_hand_l");
cc.director.getActionManager().pauseTarget(r);
cc.director.getActionManager().pauseTarget(l);
cc.director.getActionManager().pauseTarget(d);
cc.director.getActionManager().pauseTarget(u);
}
};
t.prototype.touchHandEnd = function() {
this.sound = -1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move");
console.log("touchHandEnd");
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in");
t.getComponent(c.default).stopMix();
cc.director.getActionManager().pauseTarget(e);
cc.director.getActionManager().pauseTarget(t);
var o = e.getChildByName("slime_hand_r"), i = e.getChildByName("slime_hand_r1"), a = e.getChildByName("slime_hand_l1"), s = e.getChildByName("slime_hand_l");
cc.director.getActionManager().pauseTarget(o);
cc.director.getActionManager().pauseTarget(i);
cc.director.getActionManager().pauseTarget(a);
cc.director.getActionManager().pauseTarget(s);
};
t.prototype.touchHandCancle = function() {
this.sound = -1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move"), t = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in"), o = t.getComponent(c.default);
cc.director.getActionManager().pauseTarget(e);
cc.director.getActionManager().pauseTarget(t);
o.stopMix();
var i = e.getChildByName("slime_hand_r"), a = e.getChildByName("slime_hand_r1"), s = e.getChildByName("slime_hand_l1"), r = e.getChildByName("slime_hand_l");
cc.director.getActionManager().pauseTarget(i);
cc.director.getActionManager().pauseTarget(a);
cc.director.getActionManager().pauseTarget(s);
cc.director.getActionManager().pauseTarget(r);
};
t.prototype.MixEnd = function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in");
e.stopAllActions();
e.runAction(cc.scaleTo(.2, 1));
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move");
t.stopAllActions();
t.runAction(cc.moveTo(.2, cc.v2(0, -80)));
var o = t.getChildByName("slime_hand_r"), i = t.getChildByName("slime_hand_r1"), c = t.getChildByName("slime_hand_l1"), a = t.getChildByName("slime_hand_l");
o.stopAllActions();
i.stopAllActions();
c.stopAllActions();
a.stopAllActions();
o.runAction(cc.moveTo(.2, cc.v2(201, -179)));
i.runAction(cc.moveTo(.2, cc.v2(200, -199)));
c.runAction(cc.moveTo(.2, cc.v2(-200, -205)));
a.runAction(cc.moveTo(.2, cc.v2(-202, -182)));
t.off(cc.Node.EventType.TOUCH_START, this.touchHandBegin, this);
t.off(cc.Node.EventType.TOUCH_MOVE, this.touchHandMove, this);
t.off(cc.Node.EventType.TOUCH_END, this.touchHandEnd, this);
t.off(cc.Node.EventType.TOUCH_CANCEL, this.touchHandCancle, this);
t.on(cc.Node.EventType.TOUCH_MOVE, this.touchHandTopMove, this);
t.on(cc.Node.EventType.TOUCH_START, this.touchHandTopBegin, this);
t.on(cc.Node.EventType.TOUCH_END, this.touchHandTopEnd, this);
t.on(cc.Node.EventType.TOUCH_CANCEL, this.touchHandTopEnd, this);
this.hand_move_pos = t.position;
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
s.active = !0;
var r = s.parent.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0)));
s.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
s.setPosition(r);
}), cc.moveBy(1, cc.v2(0, 100)), cc.callFunc(function() {
s.setPosition(cc.v2(1e3, 1e6));
}), cc.delayTime(1))));
};
t.prototype.touchHandTopBegin = function() {
if (!this.isBegin) {
this.isBegin = !0;
if (!this.isMove) {
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = -1;
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r"), t = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r1"), o = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l"), i = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l1");
e.active = !1;
o.active = !1;
t.active = !0;
i.active = !0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move").runAction(cc.scaleTo(.2, .95));
this.moveindex = 0;
}
}
};
t.prototype.touchHandTopMove = function(e) {
var t = n.CocosHelper.findNode(cc.Canvas.instance.node, "finger");
t.stopAllActions();
t.active = !1;
var o = e.getDelta();
if (!this.isMove) {
-1 == this.soundIndex && (this.soundIndex = cc.audioEngine.playEffect(this.touchHandTopBeginAudio, !0));
if (o.y > 0) {
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r"), c = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r1"), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l"), s = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l1");
i.active = !1;
a.active = !1;
c.active = !0;
s.active = !0;
console.log(this.moveindex);
this.moveindex = this.moveindex + .06;
if (this.moveindex > 7.9) return;
n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move");
var r = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime4_l"), l = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime4_r");
r.scaleY = r.scaleY + this.moveindex / 350;
l.scaleY = l.scaleY + this.moveindex / 350;
var d = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in");
d.scaleY = d.scaleY - this.moveindex / 1e3;
d.scaleX = d.scaleX + this.moveindex / 1e3;
c.setPosition(c.getPosition().add(cc.v2(0, .65 * this.moveindex)));
s.setPosition(s.getPosition().add(cc.v2(0, .65 * this.moveindex)));
}
}
};
t.prototype.touchHandTopEnd = function() {
var e = this;
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = -1;
if (!this.touchEnd) {
this.touchEnd = !0;
this.isMove = !0;
cc.audioEngine.stopEffect(this.soundIndex);
this.soundIndex = -1;
var t = !1;
this.moveindex > 5 && (t = !0);
var o = !1;
this.moveindex > .5 && (o = !0);
this.moveindex = 0;
n.CocosHelper.findNode(cc.Canvas.instance.node, "hand_move");
var i = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
if (!i.active) {
i.active = !0;
n.CocosHelper.createShake(i, 7);
}
if (o) {
var c = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime4_l"), s = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime4_r");
c.runAction(cc.scaleTo(.35, 1, 0));
s.runAction(cc.scaleTo(.35, 1, 0));
var r = n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in"), l = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r1"), d = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l1");
l.runAction(cc.moveTo(.35, cc.v2(200, -199)));
d.runAction(cc.moveTo(.35, cc.v2(-200, -199)));
var u = cc.scaleTo(.132, .82, 1), p = cc.scaleTo(.12, 1, .86), h = cc.scaleTo(.108, .88, 1), f = cc.scaleTo(.096, 1, .89), g = cc.scaleTo(.084, 1), m = cc.callFunc(function() {}, this);
r.stopAllActions();
var v = cc.sequence(u, p, h, f, g, m);
r.runAction(cc.sequence(cc.delayTime(.2), cc.callFunc(function() {
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r"), i = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r1"), c = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l"), s = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l1");
o.active = !0;
c.active = !0;
i.stopAllActions();
s.stopAllActions();
i.setPosition(cc.v2(200, -199));
s.setPosition(cc.v2(-200, -199));
i.active = !1;
s.active = !1;
e.moveindex = 0;
if (t) {
var r = n.CocosHelper.findNode(cc.Canvas.instance.node, "decorateParticle");
r.active = !0;
r.getComponent(cc.ParticleSystem).resetSystem();
cc.audioEngine.playEffect(e.done, !1);
e.touchEndNum % 2 == 0 && a.default.getInstance().jumpTips();
e.touchEndNum = e.touchEndNum + 1;
}
}), v));
setTimeout(function() {
e.isMove = !1;
e.isBegin = !1;
e.touchEnd = !1;
}, 500);
} else {
this.isMove = !1;
this.isBegin = !1;
this.touchEnd = !1;
var C = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r"), y = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_r1"), _ = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l"), S = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime_hand_l1");
C.active = !0;
_.active = !0;
y.stopAllActions();
S.stopAllActions();
y.setPosition(cc.v2(200, -199));
S.setPosition(cc.v2(-200, -199));
y.active = !1;
S.active = !1;
this.moveindex = 0;
var T = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime4_l"), b = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime4_r");
T.runAction(cc.scaleTo(.05, 1, 0));
b.runAction(cc.scaleTo(.05, 1, 0));
n.CocosHelper.findNode(cc.Canvas.instance.node, "plate_pull_in");
}
}
};
t.prototype.touchNet = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
cc.view.getVisibleSize().width, cc.view.getVisibleSize().height;
cc.director.loadScene("play3SceneMS");
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "flyAudio", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "done", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "touch", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "touchHandTopBeginAudio", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/common/Script/CombinedComponent/MoveComponentMS": "MoveComponentMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"./DataConfigMS": "DataConfigMS",
"./TipManagerMS": "TipManagerMS"
} ],
play3MS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fb005VRAGJHJZrqtxGuoe1q", "play3MS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../common/common/Script/codebase/TransitionSceneMS"), c = e("./DataConfigMS"), a = e("./TipManagerMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.boomSp = [];
t.boom = null;
t.winAudio = null;
t.isShowBubble = !1;
t.bubbleNum = 0;
return t;
}
t.prototype.start = function() {
var e = this, t = n.CocosHelper.findNode(cc.Canvas.instance.node, "slime2"), o = c.default.getInstance().getSelectLight();
cc.loader.loadRes("makeupms/light/fen/" + o, cc.SpriteFrame, function(e, o) {
e || (t.getComponent(cc.Sprite).spriteFrame = o);
});
"light_golden" == o && (t.active = !1);
this.node.runAction(cc.repeatForever(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
e.isShowBubble || (e.isShowBubble = !0);
e.showBubble();
}))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "bg"), n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0");
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_home").zIndex = 1e3;
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").zIndex = 1e3;
};
t.prototype.showBubble = function() {
var e = this, t = 250 - 500 * Math.random(), o = 450 - 900 * Math.random(), n = new cc.Node();
n.parent = cc.Canvas.instance.node;
n.position = cc.v2(o, t);
var i = n.addComponent(cc.Sprite);
i.spriteFrame = this.boomSp[0];
n.scale = 0;
var c = this.node.scale, s = cc.scaleTo(.132, .82 * c, c), r = cc.scaleTo(.12, c, .86 * c), l = cc.scaleTo(.108, .88 * c, c), d = cc.scaleTo(.096, c, .89 * c), u = cc.scaleTo(.084, c), p = cc.sequence(s, r, l, d, u);
n.runAction(cc.sequence(cc.scaleTo(.5, 1), p));
n.on(cc.Node.EventType.TOUCH_START, function() {
n.targetOff(e);
e.bubbleNum % 2 == 0 && a.default.getInstance().jumpTips();
e.bubbleNum = e.bubbleNum + 1;
for (var t = [], o = function(e) {
t.push(cc.callFunc(function() {
i.spriteFrame = e;
}));
t.push(cc.delayTime(.15));
}, c = 0, s = e.boomSp; c < s.length; c++) {
o(s[c]);
}
cc.audioEngine.playEffect(e.boom, !1);
var r = cc.sequence(t, cc.callFunc(function() {
e.isShowBubble = !1;
}));
n.runAction(r);
n.runAction(cc.sequence(cc.delayTime(.7), cc.fadeOut(.2), cc.removeSelf()));
}, this);
};
t.prototype.touchNext = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.active = !1;
n.CocosHelper.findNode(cc.Canvas.instance.node, "slime0");
var a = n.CocosHelper.findNode(cc.Canvas.instance.node, "finish");
a.active = !0;
a.getComponent(cc.ParticleSystem).resetSystem();
a.zIndex = 100;
cc.audioEngine.playEffect(this.winAudio, !1);
setTimeout(function() {
var e = cc.view.getVisibleSize().width, t = cc.view.getVisibleSize().height;
n.CocosHelper.captureNodeSize(cc.Canvas.instance.node, e, t).then(function(e) {
null == e || c.default.getInstance().setPageTexture(e);
});
i.default.changeScene("play4SceneMS");
}, 3e3);
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
__decorate([ l({
type: [ cc.SpriteFrame ]
}) ], t.prototype, "boomSp", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "boom", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "winAudio", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"./DataConfigMS": "DataConfigMS",
"./TipManagerMS": "TipManagerMS"
} ],
playBgMusicGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "82789Or0I9OeIWK+BhAQX5p", "playBgMusicGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/RewardManagerGS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bgAudio = null;
return t;
}
t.prototype.start = function() {
n.default.getInstance().loadConfig();
cc.loader.loadRes("glitterslime/bg", cc.AudioClip, function(e, t) {
if (e) console.log(e + ""); else {
cc.audioEngine.playMusic(t, !0);
cc.loader.setAutoRelease(t, !1);
}
}.bind(this));
};
__decorate([ a(cc.AudioClip) ], t.prototype, "bgAudio", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"../common/Script/RewardManagerGS": "RewardManagerGS"
} ],
playSlimeMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "df9a1EZG4xNkKh5H16f4l3D", "playSlimeMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./TipManagerMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.touchSlime = null;
t.touchSlimeAudio = null;
t.pullSlime = null;
t.lachangAudio = null;
t.batterAudio = null;
t.scaleNode = 1;
t.moveindex = 0;
t.pullNode = null;
t.distent = 0;
t.touchNum = 0;
t.soundIndex = -1;
return t;
}
t.prototype.start = function() {
var e = this;
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegin, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);
setTimeout(function() {
e.scaleNode = e.node.scale;
}, 500);
};
t.prototype.touchBegin = function() {};
t.prototype.touchMove = function(e) {
this.moveindex = this.moveindex + 1;
if (3 == this.moveindex) {
var t = e.getLocation();
console.log(this.moveindex);
var o = new cc.Node();
o.parent = this.node;
o.anchorX = .5, o.anchorY = 0;
o.scaleY = 0;
o.scaleX = 0;
var n = o.addComponent(cc.Sprite);
n.spriteFrame = this.pullSlime;
n.node.position = this.node.convertToNodeSpaceAR(t);
this.pullNode = o;
this.soundIndex = cc.audioEngine.playEffect(this.lachangAudio, !0);
} else if (this.moveindex > 3) {
if (this.moveindex >= 95) return;
console.log(this.moveindex);
t = e.getLocation();
var i = 180 * this.pullNode.parent.convertToWorldSpaceAR(this.pullNode.getPosition()).angle(e.getPreviousLocation()) / Math.PI, c = t.sub(this.pullNode.getPosition()).mag();
if (c > this.distent) {
this.pullNode.scaleY = this.pullNode.scaleY + this.moveindex / 4e3;
this.pullNode.scaleX = this.pullNode.scaleX + this.moveindex / 4e3;
} else {
this.pullNode.scaleY = this.pullNode.scaleY - this.moveindex / 4e3;
this.pullNode.scaleX = this.pullNode.scaleX + this.moveindex / 4e3;
}
this.pullNode.scaleX = this.pullNode.scaleX >= 1 ? 1 : this.pullNode.scaleX;
this.pullNode.scaleX = this.pullNode.scaleX < 0 ? 0 : this.pullNode.scaleX;
this.distent = c;
this.pullNode.angle = i;
}
};
t.prototype.touchEnd = function(e) {
var t = this;
cc.audioEngine.stopEffect(this.soundIndex);
if (this.moveindex > 3) {
this.pullNode.runAction(cc.sequence(cc.scaleTo(.5, 0), cc.callFunc(function() {
cc.audioEngine.playEffect(t.batterAudio, !1);
}), cc.removeSelf()));
this.pullNode = null;
this.moveindex = 0;
} else {
this.moveindex = 0;
this.touchNum = this.touchNum + 1;
if (this.touchNum % 10 == 0) {
this.node.stopAllActions();
this.node.scale = this.scaleNode;
var o = 3.2, i = this.node.scale, c = cc.scaleTo(.11 * o, .92 * i, i), a = cc.scaleTo(.1 * o, i, .96 * i), s = cc.scaleTo(.09 * o, .98 * i, i), r = cc.scaleTo(.08 * o, i, .99 * i), l = cc.scaleTo(.07 * o, i), d = cc.sequence(c, a, s, r, l);
this.node.runAction(d);
}
this.touchNum % 5 == 0 && n.default.getInstance().jumpTips();
var u = e.getLocation(), p = new cc.Node();
p.parent = this.node;
var h = p.addComponent(cc.Sprite);
h.spriteFrame = this.touchSlime;
h.node.position = this.node.convertToNodeSpaceAR(u);
cc.audioEngine.playEffect(this.touchSlimeAudio, !1);
o = 1.2, i = this.node.scale, c = cc.scaleTo(.11 * o, .82 * i, i), a = cc.scaleTo(.1 * o, i, .86 * i), 
s = cc.scaleTo(.09 * o, .88 * i, i), r = cc.scaleTo(.08 * o, i, .89 * i), l = cc.scaleTo(.07 * o, i), 
d = cc.sequence(c, a, s, r, l);
p.runAction(cc.sequence(d, cc.delayTime(2), cc.fadeOut(1), cc.removeSelf()));
}
};
t.prototype.touchCancale = function() {
this.moveindex = 0;
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
__decorate([ a(cc.SpriteFrame) ], t.prototype, "touchSlime", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "touchSlimeAudio", void 0);
__decorate([ a(cc.SpriteFrame) ], t.prototype, "pullSlime", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "lachangAudio", void 0);
__decorate([ a(cc.AudioClip) ], t.prototype, "batterAudio", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./TipManagerMS": "TipManagerMS"
} ],
playerControllerFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b21e7zNZ1tAXrW3ZBXWetxi", "playerControllerFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./PopupComponetFS"), i = e("./MyCocosHelperFS"), c = cc._decorator, a = c.ccclass, s = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.photoNode = null;
t.filePath = null;
return t;
}
t.prototype.start = function() {};
t.prototype.camera = function(e) {
var t = this;
cc.find("Canvas/button/photo").getComponent(cc.Button).interactable = !1;
i.MyCocosHelper.captureNodeSize(cc.Canvas.instance.node, cc.visibleRect.width, cc.visibleRect.height).then(function(e) {
if (null != e) {
var o = new cc.SpriteFrame();
o.setTexture(e);
t.photoNode = new cc.Node();
t.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("Canvas/photo").active = !0;
var n = cc.find("Canvas/photo/mask"), i = t.photoNode.getContentSize(), c = n.width, a = n.height;
a < i.height && t.photoNode.setScale(a / i.height);
c < i.width && t.photoNode.setScale(c / i.width);
t.photoNode.setPosition(cc.v2(0, 0));
n.addChild(t.photoNode);
var s = e.readPixels(), r = e.width, l = e.height, d = Date.parse(new Date().toString());
t.filePath = jsb.fileUtils.getWritablePath() + d + ".png";
jsb.saveImageData(s, r, l, t.filePath) || (t.filePath = "");
}
});
e.target.getComponent(cc.AudioSource).play();
};
t.prototype.camera1 = function(e) {
var t = this;
cc.find("Canvas/button/photo").getComponent(cc.Button).interactable = !1;
i.MyCocosHelper.captureNode(cc.Canvas.instance.node).then(function(e) {
if (null != e) {
var o = new cc.SpriteFrame();
o.setTexture(e);
t.photoNode = new cc.Node();
t.photoNode.addComponent(cc.Sprite).spriteFrame = o;
cc.find("Canvas/photo").active = !0;
var n = cc.find("Canvas/photo/mask"), i = t.photoNode.getContentSize(), c = n.width, a = n.height;
a < i.height && t.photoNode.setScale(a / i.height);
c < i.width && t.photoNode.setScale(c / i.width);
t.photoNode.setPosition(cc.v2(0, 0));
n.addChild(t.photoNode);
var s = e.readPixels(), r = e.width, l = e.height, d = Date.parse(new Date().toString());
t.filePath = jsb.fileUtils.getWritablePath() + d + ".png";
jsb.saveImageData(s, r, l, t.filePath) || (t.filePath = "");
}
});
e.target.getComponent(cc.AudioSource).play();
};
t.prototype.downloadImag = function() {
this.photoNode.destroy();
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("Canvas/photo").active = !1;
cc.find("Canvas/button/photo").getComponent(cc.Button).interactable = !0;
console.log("CC_JSB");
if ("" != this.filePath) {
console.log("filePath");
jsToCPP.getInstance().doRuntimePermission(this.filePath, 1, function(e) {
console.log("保存相册回调 " + e);
var t = cc.find("Canvas/popup");
t.active = !0;
t.getComponent(n.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(n.default).hidePopup();
}.bind(this))));
e ? t.getComponent(n.default).setTip("Photo downloaded successfully, please check in the album!") : t.getComponent(n.default).setTip("Picture download failed. Please check whether access to the album is open or not!");
}.bind(this));
} else console.log("download failed!");
};
t.prototype.shareImage = function() {
this.photoNode.destroy();
cc.find("Canvas/photo").active = !1;
cc.find("Canvas/button/photo").getComponent(cc.Button).interactable = !0;
"" != this.filePath ? jsToCPP.getInstance().doRuntimePermission(this.filePath, 2, function(e) {
console.log("保存相册回调 " + e);
var t = cc.find("Canvas/popup");
t.active = !0;
t.getComponent(n.default).showPopup();
t.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
t.getComponent(n.default).hidePopup();
}.bind(this))));
e || t.getComponent(n.default).setTip("There is no email account!");
}) : console.log("download failed!");
};
t.prototype.closePhoto = function() {
this.photoNode.destroy();
cc.find("Canvas/button/photo").getComponent(cc.Button).interactable = !0;
cc.find("Canvas/photo/btn_x").getComponent(cc.AudioSource).play();
cc.find("Canvas/photo").active = !1;
};
return t = __decorate([ a ], t);
}(cc.Component));
o.default = s;
cc._RF.pop();
}, {
"./MyCocosHelperFS": "MyCocosHelperFS",
"./PopupComponetFS": "PopupComponetFS"
} ],
popDialogMarket: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "50961Ny18FOjKqE247PNclD", "popDialogMarket");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.showAudio = null;
return t;
}
t.prototype.start = function() {
var e = this.node.getChildByName("pop_bg_t");
e.scale = 0;
var t = this.node.getChildByName("pop_content");
t.active = !0;
t.width = cc.view.getVisibleSize().width;
t.height = cc.view.getVisibleSize().height;
this.showAudio && cc.audioEngine.play(this.showAudio, !1, 1);
e.runAction(cc.sequence(cc.scaleTo(.25, 1), cc.callFunc(function() {
t.active = !0;
})));
};
t.prototype.touchToMarketBtn = function() {
jsToCPP.getInstance().rateUs();
this.close();
};
t.prototype.touchCloseBtn = function() {
this.close();
};
t.prototype.close = function() {
var e = this.node.getChildByName("pop_bg_t");
this.node.getChildByName("pop_content").active = !1;
var t = this;
e.runAction(cc.sequence(cc.scaleTo(.25, 0), cc.callFunc(function() {
t.node.removeFromParent();
})));
};
__decorate([ c(cc.AudioClip) ], t.prototype, "showAudio", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
popDialog: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e9d69DXEwtJ6bwOXP2xBcIc", "popDialog");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = cc._decorator, i = n.ccclass, c = n.property, a = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.showAudio = null;
return t;
}
t.prototype.start = function() {
this.node.scale = 0;
var e = this.node.getChildByName("pop_content");
e.active = !0;
e.width = cc.view.getVisibleSize().width;
e.height = cc.view.getVisibleSize().height;
this.showAudio && cc.audioEngine.play(this.showAudio, !1, 1);
this.node.runAction(cc.sequence(cc.scaleTo(.25, 1), cc.callFunc(function() {
e.active = !0;
})));
};
t.prototype.touchOkBtn = function() {
this.close();
};
t.prototype.touchCloseBtn = function() {
this.close();
};
t.prototype.close = function() {
this.node.getChildByName("pop_content").active = !1;
this.node.runAction(cc.sequence(cc.scaleTo(.25, 0), cc.removeSelf()));
};
__decorate([ c(cc.AudioClip) ], t.prototype, "showAudio", void 0);
return t = __decorate([ i ], t);
}(cc.Component);
o.default = a;
cc._RF.pop();
}, {} ],
pressBottleGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c1486ZxrJBMzL8p4sCX6goz", "pressBottleGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DataConfigGS"), i = e("../common/Script/MoveInGS"), c = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), a = cc._decorator, s = a.ccclass, r = a.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.pressAudio = null;
t.finger = null;
t.audoiManger = -1;
t.mixColorScaleY = 1;
t.maxColorScaleY = 1.2;
t.ScaleYspeed = .005;
t.zorepos = cc.v2(850, 320);
t.moveState = !0;
t.pressState = !1;
t.pressFull = !1;
t.can = !0;
t.index = -1;
return t;
}
t.prototype.start = function() {};
t.prototype.touchStart = function() {
this.finger.stopAllActions();
this.finger.active = !1;
};
t.prototype.touchOn = function(e) {
cc.find("Canvas/finger1").active = !1;
cc.find("Canvas/finger1").getChildByName("node1").active = !1;
this.pressState = !0;
this.bottleScaleTo(.0075, this.ScaleYspeed, .55, .55, !0, this.node);
var t = this.node.getChildByName("color");
this.bottleScaleTo(.0075, this.ScaleYspeed, 1.2, this.maxColorScaleY, !0, t);
};
t.prototype.touchEnd = function(e) {
if (this.moveState) {
var t = cc.find("Canvas/bowl").getContentSize(), o = this.node.parent.convertToNodeSpaceAR(cc.v2(cc.view.getVisibleSize().width / 2 + t.width / 2 - 80, cc.view.getVisibleSize().height / 2 + t.height / 2 - 110)), n = cc.moveTo(.5, o), i = cc.rotateTo(.5, -110), a = cc.scaleTo(.5, .5), s = cc.callFunc(function() {
this.node.getChildByName("lid").active = !1;
this.node.parent.getChildByName("bottle_shadow").active = !1;
this.node.parent.getComponent(c.default).enabled = !1;
this.node.on(cc.Node.EventType.TOUCH_START, this.touchOn, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd2, this);
this.moveState = !1;
}.bind(this)), r = cc.callFunc(function() {
var e = this.node.convertToWorldSpaceAR(cc.v2(0, 0));
console.log(e.x, e.y);
cc.find("Canvas/finger1").active = !0;
cc.find("Canvas/finger1").getChildByName("node1").active = !0;
e.x -= cc.view.getVisibleSize().width / 2;
e.y -= cc.view.getVisibleSize().height / 2;
cc.find("Canvas/finger1").setPosition(cc.v2(e.x + 60, e.y));
}.bind(this)), l = cc.sequence(s, a), d = cc.sequence(n, r);
this.node.runAction(d);
this.node.runAction(l);
this.node.runAction(i);
}
};
t.prototype.touchEnd2 = function() {
this.finger.active = !1;
this.finger.stopAllActions();
this.pressState = !1;
this.node.getChildByName("color");
};
t.prototype.setData = function() {
this.index += 1;
0 == n.default.getInstance().getTag() ? 0 == this.index ? cc.loader.loadRes("glitterslime/bowl_blue" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == this.index ? cc.loader.loadRes("glitterslime/bowl_blue" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == this.index ? cc.loader.loadRes("glitterslime/bowl_blue" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == this.index && cc.loader.loadRes("glitterslime/bowl_blue" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == n.default.getInstance().getTag() ? 0 == this.index ? cc.loader.loadRes("glitterslime/bowl_cyan" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == this.index ? cc.loader.loadRes("glitterslime/bowl_cyan" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == this.index ? cc.loader.loadRes("glitterslime/bowl_cyan" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == this.index && cc.loader.loadRes("glitterslime/bowl_cyan" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == n.default.getInstance().getTag() ? 0 == this.index ? cc.loader.loadRes("glitterslime/bowl_green" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == this.index ? cc.loader.loadRes("glitterslime/bowl_green" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == this.index ? cc.loader.loadRes("glitterslime/bowl_green" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == this.index && cc.loader.loadRes("glitterslime/bowl_green" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == n.default.getInstance().getTag() ? 0 == this.index ? cc.loader.loadRes("glitterslime/bowl_purple" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == this.index ? cc.loader.loadRes("glitterslime/bowl_purple" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == this.index ? cc.loader.loadRes("glitterslime/bowl_purple" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == this.index && cc.loader.loadRes("glitterslime/bowl_purple" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 4 == n.default.getInstance().getTag() ? 0 == this.index ? cc.loader.loadRes("glitterslime/bowl_red" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == this.index ? cc.loader.loadRes("glitterslime/bowl_red" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == this.index ? cc.loader.loadRes("glitterslime/bowl_red" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == this.index && cc.loader.loadRes("glitterslime/bowl_red" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 5 == n.default.getInstance().getTag() && (0 == this.index ? cc.loader.loadRes("glitterslime/bowl_yellow" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 1 == this.index ? cc.loader.loadRes("glitterslime/bowl_yellow" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 2 == this.index ? cc.loader.loadRes("glitterslime/bowl_yellow" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}) : 3 == this.index && cc.loader.loadRes("glitterslime/bowl_yellow" + this.index, cc.SpriteFrame, function(e, t) {
if (e) console.log(e + ""); else {
cc.find("Canvas/bowl/node/press").getComponent(cc.Sprite).spriteFrame = t;
cc.loader.setAutoRelease(t, !0);
}
}));
var e = cc.fadeIn(1);
this.node.parent.children[0].runAction(e);
this.node.parent.children[0].active = !1;
if (this.index >= 3) {
var t = cc.moveBy(1, cc.v2(cc.view.getVisibleSize().width, 0)), o = cc.callFunc(function() {
cc.find("Canvas/kettle").getComponent(i.default).enabled = !0;
}), c = cc.sequence(t, o);
this.node.parent.runAction(c);
} else ;
};
t.prototype.update = function(e) {
if (!(this.index >= 3 || this.moveState)) if (this.pressState) {
this.bottleScaleTo(.0075, this.ScaleYspeed, .55, .55, !0, this.node);
var t = this.node.getChildByName("color");
this.bottleScaleTo(.0075, this.ScaleYspeed, 1.2, this.maxColorScaleY, !0, t);
} else {
this.bottleScaleTo(.0075, this.ScaleYspeed, .5, .5, !1, this.node);
t = this.node.getChildByName("color");
this.bottleScaleTo(.0075, this.ScaleYspeed, 1.2, this.mixColorScaleY, !1, t);
}
};
t.prototype.press = function() {
this.mixColorScaleY -= .15;
this.ScaleYspeed += .005;
this.audoiManger = cc.audioEngine.play(this.pressAudio, !1, .5);
this.node.parent.children[0].active = !0;
this.node.parent.children[0].setPosition(cc.v2(this.node.position.x - 60, this.node.position.y - 12));
this.node.parent.children[0].setScale(0);
this.node.parent.children[0].rotation = 115 + this.node.rotation;
var e = cc.scaleTo(.7, .5), t = this.node.parent.convertToNodeSpaceAR(cc.v2(cc.view.getVisibleSize().width / 2, cc.view.getVisibleSize().height / 2)), o = cc.moveTo(.7, t), n = cc.callFunc(this.setData, this), i = cc.sequence(e, o, n);
this.node.parent.children[0].runAction(i);
this.scheduleOnce(function() {
var e = cc.fadeOut(1);
this.node.parent.children[0].runAction(e);
}, .9);
this.can = !1;
};
t.prototype.bottleScaleTo = function(e, t, o, n, i, c) {
if (i) {
c.scaleX += e;
c.scaleY += t;
if (c.scaleY >= n) {
c.scaleY = n;
if (c == this.node.getChildByName("color")) {
this.press();
this.pressState = !1;
this.node.off(cc.Node.EventType.TOUCH_START, this.touchOn, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd2, this);
}
}
c.scaleX >= o && (c.scaleX = o);
} else {
c.scaleX -= e;
c.scaleY -= t;
if (c.scaleY <= n) {
c.scaleY = n;
if (c == this.node.getChildByName("color")) {
this.node.on(cc.Node.EventType.TOUCH_START, this.touchOn, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd2, this);
}
}
c.scaleX <= o && (c.scaleX = o);
}
};
__decorate([ r(cc.AudioClip) ], t.prototype, "pressAudio", void 0);
__decorate([ r(cc.Node) ], t.prototype, "finger", void 0);
return t = __decorate([ s ], t);
}(cc.Component);
o.default = l;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS",
"./DataConfigGS": "DataConfigGS"
} ],
scoopGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "731a38cz4VPPbUvjNQlGkAQ", "scoopGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/Script/MoveInGS"), i = e("../common/Script/codebase/SpriteDrag/SpriteDragGS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spoonAudio = null;
t.audioId = -1;
return t;
}
t.prototype.start = function() {};
t.prototype.touchStart = function() {
cc.find("Canvas/finger").stopAllActions();
cc.find("Canvas/finger").active = !1;
};
t.prototype.touchEnd = function() {
this.node.getComponent(i.default).enabled = !1;
this.node.getComponent(cc.Animation).play("scoop3");
var e = cc.find("Canvas/cup");
this.scheduleOnce(function() {
var t = e.getChildByName("mask");
t.active = !0;
t.getComponent(cc.Animation).play();
this.audioId = cc.audioEngine.play(this.spoonAudio, !0, .5);
}, .8);
this.scheduleOnce(function() {
e.getChildByName("stir").getChildByName("cup_borax").runAction(cc.fadeIn(1));
}, 2.2);
this.scheduleOnce(function() {
cc.audioEngine.stop(this.audioId);
var t = e.getChildByName("mask"), o = cc.moveBy(.6, cc.v2(0, cc.view.getVisibleSize().height)), i = cc.callFunc(function() {
var e = cc.find("Canvas/cup/kettle");
e.zIndex = 1;
e.getComponent(n.default).enabled = !0;
}, this), c = cc.sequence(o, i);
t.runAction(c);
}, 4.3);
};
t.prototype.touchCancle = function() {};
__decorate([ s(cc.AudioClip) ], t.prototype, "spoonAudio", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/Script/MoveInGS": "MoveInGS",
"../common/Script/codebase/SpriteDrag/SpriteDragGS": "SpriteDragGS"
} ],
selectColorSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "45e06N2cyNOPJyHevTqw/r2", "selectColorSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../../common/common/Script/compoent/MoveInMS"), c = e("./NewDataCalMS"), a = e("../../common/common/Script/codebase/TransitionSceneMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
var e = c.default.getInstance().getBoolValue("blue"), t = c.default.getInstance().getBoolValue("pink");
if (e) {
var o = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_l"), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_r");
o.position = cc.v2(-258, -23);
a.position = cc.v2(258, -23);
o.active = !0;
a.active = !0;
var s = o.getChildByName("ui1"), r = o.getChildByName("ui0");
s.getComponent(cc.Sprite).spriteFrame = r.getComponent(cc.Sprite).spriteFrame;
} else if (t) {
o = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_l"), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_r");
o.position = cc.v2(258, -23);
a.position = cc.v2(-258, -23);
o.active = !0;
a.active = !0;
s = a.getChildByName("ui1"), r = a.getChildByName("ui0");
s.getComponent(cc.Sprite).spriteFrame = r.getComponent(cc.Sprite).spriteFrame;
} else {
o = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_l"), a = n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_r");
o.active = !0;
a.active = !0;
}
var l = n.CocosHelper.findNode(cc.Canvas.instance.node, "font"), d = l.getComponent(i.default);
l.active = !0;
d.enabled = !0;
d.actionCallBack = function() {
l.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_r").getChildByName("ui1").runAction(cc.repeatForever(cc.sequence(cc.moveBy(2, cc.v2(0, 10)), cc.moveBy(2, cc.v2(0, -10)))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "bowl_l").getChildByName("ui1").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(2, 1.05), cc.scaleTo(2, 1))));
};
};
t.prototype.selectItem = function(e) {
var t = e.target, o = [ "bowl_r", "bowl_l" ];
t.getComponent(cc.AudioSource) && t.getComponent(cc.AudioSource).play();
for (var i = 0; i < o.length; i++) {
var c = o[i], s = n.CocosHelper.findNode(cc.Canvas.instance.node, c);
s.getChildByName("touch_right").getComponent(cc.Button).interactable = !1;
console.log(t.name);
t.parent.name != c && s.runAction(cc.fadeOut(.5));
}
t.stopAllActions();
t.angle = 0;
t.scale = 1;
t.parent.runAction(cc.sequence(cc.spawn(cc.jumpTo(1, cc.v2(0, 0)), cc.scaleTo(1, 1.1)), cc.callFunc(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "finish");
e.active = !0;
e.getComponent(cc.AudioSource) && e.getComponent(cc.AudioSource).play();
setTimeout(function() {
"bowl_r" == t.parent.name ? a.default.changeScene("play1PinkSceneMS") : a.default.changeScene("play1BlueSceneMS");
}, 2e3);
})));
var r = n.CocosHelper.findNode(cc.Canvas.instance.node, "font");
r.stopAllActions();
r.runAction(cc.moveBy(.5, cc.v2(0, 500)));
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../../common/common/Script/compoent/MoveInMS": "MoveInMS",
"./NewDataCalMS": "NewDataCalMS"
} ],
selectSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "43704cWjwxDo4InO0Q++Woh", "selectSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../../common/common/Script/compoent/MoveInMS"), c = e("../../common/common/Script/codebase/TransitionSceneMS"), a = e("../DataConfigMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {
a.default.getInstance().playMusic();
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "font"), t = e.getComponent(i.default);
e.active = !0;
t.enabled = !0;
t.actionCallBack = function() {
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "new").runAction(cc.repeatForever(cc.sequence(cc.rotateTo(2, -5), cc.rotateTo(2, 5))));
n.CocosHelper.findNode(cc.Canvas.instance.node, "old").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(2, 1.05), cc.scaleTo(2, 1))));
};
};
t.prototype.touchItem = function(e) {
var t = e.target, o = [ "old", "new" ];
t.getComponent(cc.AudioSource) && t.getComponent(cc.AudioSource).play();
for (var i = 0; i < o.length; i++) {
var a = o[i], s = n.CocosHelper.findNode(cc.Canvas.instance.node, a);
s.getComponent(cc.Button).interactable = !1;
console.log(t.name);
t.name != a && s.runAction(cc.fadeOut(.5));
}
t.stopAllActions();
t.angle = 0;
t.scale = 1;
t.runAction(cc.sequence(cc.spawn(cc.jumpTo(1, cc.v2(0, 0)), cc.scaleTo(1, 1.1)), cc.callFunc(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "finish");
e.active = !0;
e.getComponent(cc.AudioSource) && e.getComponent(cc.AudioSource).play();
setTimeout(function() {
"old" == t.name ? c.default.changeScene("showSceneMS") : c.default.changeScene("showToolSceneMS");
}, 2e3);
})));
var r = n.CocosHelper.findNode(cc.Canvas.instance.node, "font");
r.stopAllActions();
r.runAction(cc.moveBy(.5, cc.v2(0, 500)));
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../../common/common/Script/compoent/MoveInMS": "MoveInMS",
"../DataConfigMS": "DataConfigMS"
} ],
showLaodingCB: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "72561BkTUJLv4ObYjSLxtG0", "showLaodingCB");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerCB"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else if (c instanceof cc.Prefab) {
var a = cc.instantiate(c);
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerCB": "AdsManagerCB"
} ],
showLaodingCE: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b140fDW4ZpHMaHztdPOzRtS", "showLaodingCE");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerCE"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
console.log("1111");
console.log("444");
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else {
console.log("555");
console.log(c);
if (c instanceof cc.Prefab) {
console.log("2222");
var a = cc.instantiate(c);
console.log(a);
t.addChild(a);
a.name = "newMyPrefab";
a.zIndex = 99999;
a.setPosition(0, 0);
console.log("3333");
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
}
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerCE": "AdsManagerCE"
} ],
showLaodingCS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2261BkTUJLv4ObYjSLxtG0", "showLaodingCS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerCS"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, n = "";
n = cc.sys.platform == cc.sys.ANDROID ? "prefab/loading" : "prefab/loading1";
cc.loader.loadRes(n, function(n, i) {
if (cc.sys.isMobile && n) cc.log("Prefab error11:" + n); else if (i instanceof cc.Prefab) {
var c = cc.instantiate(i);
t.addChild(c);
c.name = "newMyPrefab";
c.setPosition(0, 0);
c.zIndex = 999999;
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
cc.sys.isMobile && (o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerCS": "AdsManagerCS"
} ],
showLaodingFS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b210fDW4ZpHMaHztdPOzRtS", "showLaodingFS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerFS"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e, t, o) {
var i = cc.find("Canvas");
if (i) {
var c = this, a = "loading/Ads";
a = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(a, function(e, t) {
console.log("1111");
console.log("444");
if (cc.sys.isMobile && e) cc.log("Prefab error11:" + e); else {
console.log("555");
console.log(t);
if (t instanceof cc.Prefab) {
console.log("2222");
var a = cc.instantiate(t);
console.log(a);
i.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
console.log("3333");
cc.sys.isMobile && n.default.getInstance().initLisenter();
c.loadAd(o);
c._timeEnter = new Date();
} else cc.log("Prefab error22");
}
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerFS": "AdsManagerFS"
} ],
showLaodingGL: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b190fDW4ZpHMaHztdPOzRtS", "showLaodingGL");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerGL"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
console.log("1111");
console.log("444");
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else {
console.log("555");
console.log(c);
if (c instanceof cc.Prefab) {
console.log("2222");
var a = cc.instantiate(c);
console.log(a);
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
console.log("3333");
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
}
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerGL": "AdsManagerGL"
} ],
showLaodingGS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b03bdtNEelOiLtUoSZ/qGdo", "showLaodingGS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerGS"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else if (c instanceof cc.Prefab) {
var a = cc.instantiate(c);
console.log("add prefab1111");
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
a.zIndex = 100;
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
var e = cc.find("Canvas");
e.getChildByName("newMyPrefab") && e.getChildByName("newMyPrefab").removeFromParent();
this.loadingDoneCallback && this.loadingDoneCallback();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerGS": "AdsManagerGS"
} ],
showLaodingHC: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1161BkTUJLv4ObYjSLxtG0", "showLaodingHC");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerHC"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else if (c instanceof cc.Prefab) {
var a = cc.instantiate(c);
console.log("add prefab1111");
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
a.zIndex = 100;
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
var e = cc.find("Canvas");
e.getChildByName("newMyPrefab") && e.getChildByName("newMyPrefab").removeFromParent();
this.loadingDoneCallback && this.loadingDoneCallback();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerHC": "AdsManagerHC"
} ],
showLaodingHall: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a7985u3L0tMuIDQ1k6JMpOE", "showLaodingHall");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerHall"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaodingHall====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaodingHall====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaodingHall====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else if (c instanceof cc.Prefab) {
var a = cc.instantiate(c);
console.log("add prefab1111");
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
a.zIndex = 100;
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
cc.sys.isMobile && (o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
var e = cc.find("Canvas");
e.getChildByName("newMyPrefab") && e.getChildByName("newMyPrefab").removeFromParent();
this.loadingDoneCallback && this.loadingDoneCallback();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerHall": "AdsManagerHall"
} ],
showLaodingMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b6aa83GjRtKVa+fsm8/d5LU", "showLaodingMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerMS"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
console.log("1111");
console.log("444");
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else {
console.log("555");
console.log(c);
if (c instanceof cc.Prefab) {
console.log("2222");
var a = cc.instantiate(c);
console.log(a);
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
console.log("3333");
a.zIndex = 1e3;
n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
}
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerMS": "AdsManagerMS"
} ],
showLaodingRP: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b770fDW4ZpHMaHztdPOzRtS", "showLaodingRP");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerRP"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e, t, o) {
var i = cc.find("Canvas");
if (i) {
var c = this, a = function(e, t) {
console.log("1111");
console.log("444");
if (cc.sys.isMobile && e) cc.log("Prefab error11:" + e); else {
console.log("555");
console.log(t);
if (t instanceof cc.Prefab) {
console.log("2222");
var a = cc.instantiate(t);
console.log(a);
i.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
console.log("3333");
cc.sys.isMobile && n.default.getInstance().initLisenter();
c.loadAd(o);
c._timeEnter = new Date();
} else cc.log("Prefab error22");
}
};
if (cc.sys.platform == cc.sys.ANDROID) {
console.log(e);
cc.loader.loadRes(e, a);
} else {
console.log(t);
cc.loader.loadRes(t, a);
}
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerRP": "AdsManagerRP"
} ],
showLaodingRS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1261BkTUJLv4ObYjSLxtG0", "showLaodingRS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerRS"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else if (c instanceof cc.Prefab) {
var a = cc.instantiate(c);
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerRS": "AdsManagerRS"
} ],
showLaodingSD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b1361BkTUJLv4ObYjSLxtG0", "showLaodingSD");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManagerSD"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else if (c instanceof cc.Prefab) {
var a = cc.instantiate(c);
t.addChild(a);
a.zIndex = 999999;
a.name = "newMyPrefab";
a.setPosition(0, 0);
n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
cc.find("Canvas").getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManagerSD": "AdsManagerSD"
} ],
showLaoding: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f6f0fDW4ZpHMaHztdPOzRtS", "showLaoding");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./AdsManager"), i = function() {
function e() {
this._loadingMinTime = 2;
this._loadingMaxTime = 5;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
this._adShowing = !1;
this._isRequestingLoadAd = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
if (cc.sys.isMobile) {
this.initAdsCall();
n.default.getInstance().initLisenter();
}
}
e.getInstance = function() {
null == e._instance && (e._instance = new e());
return e._instance;
};
e.prototype.initAdsCall = function() {
var e = this;
n.default.getInstance().onAdsLoaded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
e._isRequestingLoadAd && e._adLoadType == t && (t == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross());
};
n.default.getInstance().onAdsClicked = function(e) {};
n.default.getInstance().onAdsExpanded = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
if (e._adLoadType == t) {
e.isAdsShowed = !0;
e._adLoadDone = !0;
e._adShowing = !0;
}
};
n.default.getInstance().onAdsCollapsed = function(t) {
console.log(" showLaoding====>广告====>ID值" + t);
console.log(t);
if (e._adLoadType == t) {
if (e._bLoadingCanRemove) {
e._taskDone();
return;
}
e._adShowing = !1;
}
e._timeCheckSchedule(0);
};
n.default.getInstance().onAdsLoadFailed = function(t, o) {
e._adLoadType == o && (e._adLoadDone = !0);
};
};
e.prototype.showAds = function(e) {
var t = cc.find("Canvas");
if (t) {
var o = this, i = "loading/Ads";
i = cc.sys.platform == cc.sys.ANDROID ? "loading/Ads" : "loading/android";
cc.loader.loadRes(i, function(i, c) {
console.log("1111");
console.log("444");
if (cc.sys.isMobile && i) cc.log("Prefab error11:" + i); else {
console.log("555");
console.log(c);
if (c instanceof cc.Prefab) {
console.log("2222");
var a = cc.instantiate(c);
console.log(a);
t.addChild(a);
a.name = "newMyPrefab";
a.setPosition(0, 0);
console.log("3333");
cc.sys.isMobile && n.default.getInstance().initLisenter();
o.loadAd(e);
o._timeEnter = new Date();
} else cc.log("Prefab error22");
}
});
} else cc.log("find Canvas error");
};
e.prototype.loadAd = function(e) {
void 0 === e && (e = !1);
this._isRequestingLoadAd = !1;
this._adShowing = !1;
this._bLoadingCanRemove = !1;
this._adLoadDone = !1;
this._adLoadType = e ? n.ADS_TYPE.kTypeCrosspromoAds : n.ADS_TYPE.kTypeInterstitialAds;
var t = cc.find("Canvas"), o = this, i = cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
o.isAdsShowed = !1;
if (cc.sys.isMobile) {
n.default.getInstance().initLisenter();
o._adLoadType == n.ADS_TYPE.kTypeInterstitialAds ? n.default.getInstance().showInterstitial() : n.default.getInstance().showCross();
}
o.scheduTime = setInterval(function() {
o._timeCheckSchedule(0);
}, 5);
}));
t.runAction(i);
};
e.prototype._timeCheckSchedule = function(e) {
var t = (new Date().getTime() - this._timeEnter.getTime()) % 864e5 % 36e5 % 6e4, o = Math.round(t / 1e3);
if (o >= this._loadingMinTime && this._adLoadDone) this._adLoadInTime(); else if (o >= this._loadingMaxTime) if (this._adLoadType != n.ADS_TYPE.kTypeCrosspromoAds || this.isAdsShowed) this._adLoadTimeOut(); else {
this._isRequestingLoadAd = !1;
this._adLoadType = n.ADS_TYPE.kTypeInterstitialAds;
cc.sys.isMobile && n.default.getInstance().showInterstitial();
}
};
e.prototype._adLoadInTime = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._adLoadTimeOut = function() {
this._adShowing ? this._bLoadingCanRemove = !0 : this._taskDone();
};
e.prototype._taskDone = function() {
clearInterval(this.scheduTime);
this.loadingDoneCallback && this.loadingDoneCallback();
var e = cc.find("Canvas");
e.getChildByName("newMyPrefab") && e.getChildByName("newMyPrefab").removeFromParent();
console.log("hide ads");
};
return e;
}();
o.default = i;
cc._RF.pop();
}, {
"./AdsManager": "AdsManager"
} ],
showMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "459f1bdlWZOuJUQsYtySINu", "showMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../common/common/Script/compoent/MoveInMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.fly = null;
return t;
}
t.prototype.start = function() {
setTimeout(function() {
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "font1"), t = e.getComponent(i.default);
e.active = !0;
t.enabled = !0;
t.actionCallBack = function() {
n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next").active = !0;
e.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
};
}, 2e3);
for (var e = 0; e < 15; e++) {
var t = "cosmetics" + e, o = n.CocosHelper.findNode(cc.Canvas.instance.node, t);
o.active = !1;
var c = o.getChildByName(t + "_");
if (c) {
console.log(c.name);
c.zIndex = -1;
}
var a = o.addComponent(i.default);
a.direction = i.ShowDirection.bottom;
a.action = i.ActionType.JumpTo;
a.isLoad = !1;
a.delayTime = 1 + Math.random() * (e % 7) * .15;
if (e > 5) {
a.direction = i.ShowDirection.top;
a.delayTime = 1 + Math.random() * (e % 7) * .15;
}
e % 3 == 0 && (a.scoreAudio = this.fly);
o.active = !0;
}
};
t.prototype.touchNet = function(e) {
e.target.getComponent(cc.Button).interactable = !1;
cc.director.loadScene("chooseSceneMS");
};
__decorate([ s(cc.Label) ], t.prototype, "label", void 0);
__decorate([ s ], t.prototype, "text", void 0);
__decorate([ s(cc.AudioClip) ], t.prototype, "fly", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../common/common/Script/compoent/MoveInMS": "MoveInMS"
} ],
showToolSceneMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5f0dbfw63lPBqiLO2X0Xv95", "showToolSceneMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/codebase/utils/CocosHelperMS"), i = e("../../common/common/Script/compoent/MoveInMS"), c = e("../../common/common/Script/codebase/TransitionSceneMS"), a = e("../DataConfigMS"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
t.fly = null;
return t;
}
t.prototype.start = function() {
a.default.getInstance().playMusic2();
for (var e = [ "bowl_l_content", "bowl_r_content" ], t = function(t) {
for (var c = e[t], a = n.CocosHelper.findNode(cc.Canvas.instance.node, c), s = 0, r = a.children; s < r.length; s++) {
var l = r[s];
"bowl" != l.name && (l.active = !1);
}
var d = a.getComponent(i.default), u = o;
d.actionCallBack = function() {
for (var e = 0, t = 0, o = a.children; t < o.length; t++) {
var n = o[t];
if ("bowl" != n.name) {
n.active = !1;
var i = n.position, c = 260 - 520 * Math.random(), s = 260 - 520 * Math.random(), r = cc.v2(i.x + c, i.y + s), l = [ "bowl_l_content" == a.name ? cc.v2(-500, 500) : cc.v2(500, 500), r, i ];
n.position = cc.v2(-500, 500);
var d = cc.cardinalSplineTo(1, l, 0);
n.active = !0;
n.runAction(cc.sequence(cc.delayTime(.2 * e), cc.callFunc(function() {
cc.audioEngine.playEffect(u.fly, !1);
}), d, cc.callFunc(function() {})));
}
e++;
}
};
}, o = this, c = 0; c < e.length; c++) t(c);
var s = n.CocosHelper.findNode(cc.Canvas.instance.node, "font"), r = s.getComponent(i.default);
s.active = !0;
r.enabled = !0;
r.actionCallBack = function() {
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.v2(0, 10)), cc.moveBy(1, cc.v2(0, -10)))));
var e = n.CocosHelper.findNode(cc.Canvas.instance.node, "btn_next");
e.active = !0;
e.opacity = 0;
e.runAction(cc.fadeIn(1));
e.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.5, 1))));
};
};
t.prototype.touchItem = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.getComponent(cc.AudioSource) && o.getComponent(cc.AudioSource).play();
c.default.changeScene("make1AddSceneMS");
};
__decorate([ l(cc.Label) ], t.prototype, "label", void 0);
__decorate([ l ], t.prototype, "text", void 0);
__decorate([ l(cc.AudioClip) ], t.prototype, "fly", void 0);
return t = __decorate([ r ], t);
}(cc.Component);
o.default = d;
cc._RF.pop();
}, {
"../../common/common/Script/codebase/TransitionSceneMS": "TransitionSceneMS",
"../../common/common/Script/codebase/utils/CocosHelperMS": "CocosHelperMS",
"../../common/common/Script/compoent/MoveInMS": "MoveInMS",
"../DataConfigMS": "DataConfigMS"
} ],
touchPhotoMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9b589086nJKVonkBVCdn9Xb", "touchPhotoMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("./DataConfigMS"), i = cc._decorator, c = i.ccclass, a = i.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {};
t.prototype.touch = function(e) {
e.target;
n.default.getInstance().showPhotoPup();
};
__decorate([ a(cc.Label) ], t.prototype, "label", void 0);
__decorate([ a ], t.prototype, "text", void 0);
return t = __decorate([ c ], t);
}(cc.Component);
o.default = s;
cc._RF.pop();
}, {
"./DataConfigMS": "DataConfigMS"
} ],
uishowMS: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d05224pmUpJK4mcK+Reznc+", "uishowMS");
Object.defineProperty(o, "__esModule", {
value: !0
});
var n = e("../../common/common/Script/ads/showLaodingMS"), i = e("./NewDataCalMS"), c = cc._decorator, a = c.ccclass, s = c.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.text = "hello";
return t;
}
t.prototype.start = function() {};
t.prototype.touchPlayAgain = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.getComponent(cc.AudioSource) && o.getComponent(cc.AudioSource).play();
i.default.getInstance().setBoolValue("blue", !1);
i.default.getInstance().setBoolValue("pink", !1);
n.default.getInstance().showAds(!1);
n.default.getInstance().loadingDoneCallback = function() {
console.log("广告关闭");
n.default.getInstance().loadingDoneCallback = null;
cc.director.loadScene("selectColorSceneMS");
};
};
t.prototype.touchPlayNext = function(e, t) {
var o = e.target;
o.getComponent(cc.Button).interactable = !1;
o.getComponent(cc.AudioSource) && o.getComponent(cc.AudioSource).play();
i.default.getInstance().setBoolValue("blue", !1);
i.default.getInstance().setBoolValue("pink", !1);
n.default.getInstance().showAds(!1);
n.default.getInstance().loadingDoneCallback = function() {
console.log("广告关闭");
n.default.getInstance().loadingDoneCallback = null;
cc.director.loadScene("selectSceneMS");
};
};
__decorate([ s(cc.Label) ], t.prototype, "label", void 0);
__decorate([ s ], t.prototype, "text", void 0);
return t = __decorate([ a ], t);
}(cc.Component);
o.default = r;
cc._RF.pop();
}, {
"../../common/common/Script/ads/showLaodingMS": "showLaodingMS",
"./NewDataCalMS": "NewDataCalMS"
} ]
}, {}, [ "AdsManagerHall", "AudioManager", "BarAction", "ButtonSafe_hall", "ChooseScene", "DownSubGameMG", "EnterGame", "GameData", "HallController", "HttpUtils", "LoadSubGame", "Loading", "MoveIn_my", "SubgameManager", "TouchBtn", "TouchMoveCard", "VersionMG", "chooseNew", "gameItem", "gameSceneMG", "home", "iosTouch", "platorm", "popDialog", "popDialogMarket", "showLaodingHall", "AdsManagerCB", "ButtonSafeCB", "AddEggCB", "AddIngredientsCB", "BlendMixMultipleCB", "BlenderMixCB", "CheckScribblePercentCB", "MixComponentCB", "TransformRecordCB", "IconItemCB", "MoveInCB", "OnceClickButtonCB", "RewardManagerCB", "EventListenerCB", "CustomMaskCB", "EatMaskCB", "MaskDrawCB", "NodeHitHookCB", "DragEventListenerCB", "DragFallCB", "DragHideShadeCB", "DragUtilCB", "SpriteDragCB", "SpriteDragEventManagerCB", "TouchComponentCB", "TransitionSceneCB", "ClickScaleCB", "CocosHelperCB", "ColorRectAssemblerCB", "ColorRectCB", "NodeCompCB", "NodeTransformCB", "BgScaleCB", "ScaleRootAdapterCB", "ViewSizeAdapterCB", "showLaodingCB", "AddControllerCB", "AnimationEventCB", "ChooseControllerCB", "ClickControllerCB", "DataConfigCB", "DragonBoneActionsCB", "DragonCompoentCB", "GirlDrogonCompoentCB", "HandTouchEventCB", "HomeButtonCB", "KneadControllerCB", "KneadHandTouchCB", "MakeControllerCB", "MoreGameButtonCB", "PlayControllerCB", "PopupComponetCB", "PullControllerCB", "SceneControllerCB", "SlimeSprinkleCB", "SlimeTouchEventCB", "StickControllerCB", "TipManagerCB", "AdsManagerHC", "ButtonSafeHC", "AddEggHC", "AddIngredientsHC", "BlendMixMultipleHC", "BlenderMixHC", "CheckScribblePercentHC", "MixComponentHC", "TransformRecordHC", "IconItemHC", "MoveInHC", "OnceClickButtonHC", "RewardManagerHC", "EventListenerHC", "CustomMaskHC", "EatMaskHC", "MaskDrawHC", "NodeHitHookHC", "DragEventListenerHC", "DragFallHC", "DragHideShadeHC", "DragUtilHC", "SpriteDragEventManagerHC", "SpriteDragHC", "TouchComponentHC", "TransitionSceneHC", "ClickScaleHC", "CocosHelperHC", "ColorRectAssemblerHC", "ColorRectHC", "NodeCompHC", "NodeTransformHC", "BgScaleHC", "ScaleRootAdapterHC", "ViewSizeAdapterHC", "showLaodingHC", "AddControllerHC", "AnimationEventHC", "BubbleClickHC", "ChooseControllerHC", "ClickControllerHC", "DecorateControllerHC", "DragonBoneActionsHC", "DragonCompoentHC", "HandTouchEventHC", "HomeButtonHC", "KnifeTouchEventHC", "MakeControllerHC", "MoreGameButtonHC", "PlayControllerHC", "PopupComponetHC", "SceneControllerHC", "SlimeTouchEventHC", "TipManagerHC", "makeHC", "AdsManagerCS", "ButtonSafeCS", "AddEggCS", "AddIngredientsCS", "BlendMixMultipleCS", "BlenderMixCS", "CheckScribblePercentCS", "MixComponentCS", "TransformRecordCS", "IconItemCS", "MoveInCS", "OnceClickButtonCS", "RewardManagerCS", "EventListenerCS", "CustomMaskCS", "EatMaskCS", "MaskDrawCS", "NodeHitHookCS", "DragEventListenerCS", "DragFallCS", "DragHideShadeCS", "DragUtilCS", "SpriteDragCS", "SpriteDragEventManagerCS", "TouchComponentCS", "TransitionSceneCS", "ClickScaleCS", "CocosHelperCS", "ColorRectAssemblerCS", "ColorRectCS", "NodeCompCS", "NodeTransformCS", "BgScaleCS", "ScaleRootAdapterCS", "ViewSizeAdapterCS", "showLaodingCS", "ShaderHelperCS", "ShaderMouseCS", "ShaderNameLabelCS", "ShaderTimeCS", "AddControllerCS", "AnimationEventCS", "ClickControllerCS", "CoilControllerCS", "DataConfigCS", "DragonBoneActionsCS", "DragonCompoentCS", "HandTouchEventCS", "HomeButtonCS", "MainControllerCS", "MoreGameButtonCS", "PlayControllerCS", "PopupComponetCS", "PourControllerCS", "PullControllerCS", "RubControllerCS", "SlimeTouchEventCS", "SpoonTouchEventCS", "TipManagerCS", "AddEgg", "AddIngredients", "BlenderMix", "CheckScribblePercent", "MixComponent", "TransformRecord", "AdsManager", "IconItem", "RewardManager", "showLaoding", "EventListener", "CakeMask", "CustomMask", "EatMask", "IcingMask", "MaskDraw", "NodeHitHook", "DragEventListener", "DragFall", "DragHideShade", "DragUtil", "SpriteDrag", "SpriteDragEventManager", "TouchComponent", "TransitionScene", "ClickScale", "ShaderHelper", "ShaderTime", "CocosHelper", "ColorRect", "ColorRectAssembler", "NodeComp", "NodeTransform", "BgScale", "ScaleRootAdapter", "ViewSizeAdapter", "ButtonSafe", "MoveIn", "RotateCompoent", "ClickScale_my", "CocosHelper_my", "ColorRectAssembler_my", "ColorRect_my", "NodeComp_my", "TransitionScene_my", "BgScale_my", "ScaleRootAdapter_my", "ViewSizeAdapter_my", "AddEggCE", "AddIngredientsCE", "BlenderMixCE", "CheckScribblePercentCE", "MixComponentCE", "TransformRecordCE", "AdsManagerCE", "IconItemCE", "RewardManagerCE", "showLaodingCE", "EventListenerCE", "CakeMaskCE", "CustomMaskCE", "EatMaskCE", "IcingMaskCE", "MaskDrawCE", "NodeHitHookCE", "DragEventListenerCE", "DragFallCE", "DragHideShadeCE", "DragUtilCE", "SpriteDragCE", "SpriteDragEventManagerCE", "TouchComponentCE", "TransitionSceneCE", "ClickScaleCE", "ShaderHelperCE", "ShaderTimeCE", "CocosHelperCE", "ColorRectAssemblerCE", "ColorRectCE", "NodeCompCE", "NodeTransformCE", "BgScaleCE", "ScaleRootAdapterCE", "ViewSizeAdapterCE", "ButtonSafeCE", "MoveInCE", "RotateCompoentCE", "AnimationEventCE", "DataConfigCE", "DollTouchEventCE", "DyeSlimeControillerCE", "HandClickCE", "HandTouchEventCE", "HomeButtonCE", "HomeControllerCE", "MoreGameButtonCE", "ObjectActionCE", "OnceClickButtonCE", "PlayControllerCE", "PopupComponetCE", "RefrigeratorControllerCE", "TipManagerCE", "WrapUpControllerCE", "loadingCE", "NestableScrollView_InnerCE", "NestableScrollView_OuterCE", "AddEggFS", "AddIngredientsFS", "BlenderMixFS", "CheckScribblePercentFS", "MixComponentFS", "TransformRecordFS", "AdsManagerFS", "IconItemFS", "RewardManagerFS", "showLaodingFS", "EventListenerFS", "CakeMaskFS", "CustomMaskFS", "EatMaskFS", "IcingMaskFS", "MaskDrawFS", "NodeHitHookFS", "DragEventListenerFS", "DragFallFS", "DragHideShadeFS", "DragUtilFS", "SpriteDragEventManagerFS", "SpriteDragFS", "TouchComponentFS", "TransitionSceneFS", "ClickScaleFS", "ShaderHelperFS", "ShaderTimeFS", "CocosHelperFS", "ColorRectAssemblerFS", "ColorRectFS", "NodeCompFS", "NodeTransformFS", "BgScaleFS", "ScaleRootAdapterFS", "ViewSizeAdapterFS", "ButtonSafeFS", "MoveInFS", "RotateCompoentFS", "loadingFS", "AddControllerFS", "AddMatrial2FS", "AddMatrialActionFS", "AddMatrialFS", "AnimationEventFS", "ClickControllerFS", "CoilControllerFS", "DataConfigFS", "DragonBoneActionsFS", "DragonCompoentFS", "HandTouchEventFS", "HomeButtonFS", "MainControllerFS", "MoreGameButtonFS", "MyBlenderMixFS", "MyCocosHelperFS", "MyMixComponentFS", "MyMoveInFS", "PlayControllerFS", "PlaySlimeFS", "PopupComponetFS", "PourControllerFS", "PullControllerFS", "RubControllerFS", "SlimeTouchEventFS", "SpoonTouchEventFS", "TipManagerFS", "buttonFS", "homeFS", "niceFS", "oldHomeFS", "playerControllerFS", "AddEggGL", "AddIngredientsGL", "BlenderMixGL", "CheckScribblePercentGL", "MixComponentGL", "TransformRecordGL", "AdsManagerGL", "IconItemGL", "RewardManagerGL", "showLaodingGL", "EventListenerGL", "CakeMaskGL", "CustomMaskGL", "EatMaskGL", "IcingMaskGL", "MaskDrawGL", "NodeHitHookGL", "DragEventListenerGL", "DragFallGL", "DragHideShadeGL", "DragUtilGL", "SpriteDragEventManagerGL", "SpriteDragGL", "TouchComponentGL", "TransitionSceneGL", "ClickScaleGL", "ShaderHelperGL", "ShaderTimeGL", "CocosHelperGL", "ColorRectAssemblerGL", "ColorRectGL", "NodeCompGL", "NodeTransformGL", "BgScaleGL", "ScaleRootAdapterGL", "ViewSizeAdapterGL", "ButtonSafeGL", "MoveInGL", "RotateCompoentGL", "AnimationEventGL", "BubbleClickGL", "CellClickGL", "ClickControllerGL", "ColorTouchEventGL", "DataConfigGL", "DecorateSlimeGL", "DisplayControllerGL", "DragController1GL", "DragonBoneActionsGL", "DragonCompoentGL", "FuseControllerGL", "HandMoveEventGL", "HandTouchEventGL", "HomeButtonGL", "HomeControllerGL", "MakeSlimeGL", "MoreGameButtonGL", "OnceClickButtonGL", "PackSlimeGL", "PlayControllerGL", "PlayScenceChooseGL", "PopupComponetGL", "RubControllerGL", "SlapControllerGL", "SlimeTouchEventGL", "TipManagerGL", "loadingGL", "DragonBoneActionsGS", "DragonCompoentGS", "MoveIn_oGS", "TipManagerGS", "makeGS", "AdsManagerGS", "ButtonSafeGS", "AddEggGS", "AddIngredientsGS", "BlendMixMultipleGS", "BlenderMixGS", "CheckScribblePercentGS", "MixComponentGS", "TransformRecordGS", "IconItemGS", "MoveInGS", "OnceClickButtonGS", "RewardManagerGS", "EventListenerGS", "CustomMaskGS", "EatMaskGS", "MaskDrawGS", "NodeHitHookGS", "DragEventListenerGS", "DragFallGS", "DragHideShadeGS", "DragUtilGS", "SpriteDragEventManagerGS", "SpriteDragGS", "TouchComponentGS", "TransitionSceneGS", "ClickScaleGS", "CocosHelperGS", "ColorRectAssemblerGS", "ColorRectGS", "NodeCompGS", "NodeTransformGS", "BgScaleGS", "ScaleRootAdapterGS", "ViewSizeAdapterGS", "showLaodingGS", "DataConfigGS", "InitDataGS", "SetMixPicGS", "SpriteDragSetGS", "boraxGS", "buttonGS", "chooseGS", "cupGS", "gameScene4GS", "gameScene5GS", "kettleGS", "moveBackGS", "playBgMusicGS", "pressBottleGS", "scoopGS", "AnimationEventMS", "BubbleClickMS", "ButtonSafeMS", "ClickControllerMS", "DataConfigMS", "DragController1MS", "DragonBoneActionsMS", "DragonCompoentMS", "HandTouchEventMS", "HelloWorldMS", "HomeButtonMS", "OnceClickButtonMS", "PlayControllerMS", "PlaySlimesControllerMS", "PullControllerMS", "RubControllerMS", "SavePhotoMS", "SlapControllerMS", "SlimeTouchEventMS", "TipManagerMS", "NewDataCalMS", "make1AddSceneMS", "make2AddSceneMS", "play1BlueSceneMS", "play1PinkSceneMS", "selectColorSceneMS", "selectSceneMS", "showToolSceneMS", "uishowMS", "chooseMS", "fallSpriteCompoentMS", "homeBtnMS", "homeMS", "loadingMS", "loading_adsMS", "make1MS", "make2MS", "play1MS", "play2MS", "play3MS", "playSlimeMS", "showMS", "ShaderHelperMS", "ShaderMouseMS", "ShaderNameLabelMS", "ShaderTimeMS", "touchPhotoMS", "AddEggMS", "AddIngredientsMS", "BlenderMixMS", "CheckScribblePercentMS", "MixComponentMS", "MoveComponentMS", "TransformRecordMS", "AdsManagerMS", "IconItemMS", "RewardManagerMS", "showLaodingMS", "EventListenerMS", "CakeMaskMS", "CustomMaskMS", "EatMaskMS", "IcingMaskMS", "MaskDrawMS", "NodeHitHookMS", "DragEventListenerMS", "DragFallMS", "DragHideShadeMS", "DragUtilMS", "SpriteDragEventManagerMS", "SpriteDragMS", "TouchComponentMS", "TransitionSceneMS", "ClickScaleMS", "CocosHelperMS", "ColorRectAssemblerMS", "ColorRectMS", "NodeCompMS", "NodeTransformMS", "BgScaleMS", "ScaleRootAdapterMS", "ViewSizeAdapterMS", "MoveInMS", "RotateCompoentMS", "AddEggRP", "AddIngredientsRP", "BlenderMixRP", "CheckScribblePercentRP", "MixComponentRP", "TransformRecordRP", "AdsManagerRP", "IconItemRP", "RewardManagerRP", "showLaodingRP", "EventListenerRP", "CakeMaskRP", "CustomMaskRP", "EatMaskRP", "IcingMaskRP", "MaskDrawRP", "NodeHitHookRP", "DragEventListenerRP", "DragFallRP", "DragHideShadeRP", "DragUtilRP", "SpriteDragEventManagerRP", "SpriteDragRP", "TouchComponentRP", "TransitionSceneRP", "ClickScaleRP", "ShaderHelperRP", "ShaderTimeRP", "CocosHelperRP", "ColorRectAssemblerRP", "ColorRectRP", "NodeCompRP", "NodeTransformRP", "BgScaleRP", "ScaleRootAdapterRP", "ViewSizeAdapterRP", "ButtonSafeRP", "MoveInRP", "RotateCompoentRP", "AnimationEventRP", "CoilSlimeControllerRP", "DataConfigRP", "DecorateSlimeRP", "DragonBoneActionsRP", "DragonCompoentRP", "DragonTouchEventRP", "FuseControllerRP", "HandTouchEventRP", "HomeButtonRP", "HomeControllerRP", "MakeSlimeRP", "MoreGameButtonRP", "MyMoveInRP", "OnceClickButtonRP", "PlaySlimeControllerRP", "PopupComponetRP", "SprinkleTouchEventRP", "TipManagerRP", "loadingRP", "AdsManagerRS", "ButtonSafeRS", "AddEggRS", "AddIngredientsRS", "BlendMixMultipleRS", "BlenderMixRS", "CheckScribblePercentRS", "MixComponentRS", "TransformRecordRS", "IconItemRS", "MoveInRS", "OnceClickButtonRS", "RewardManagerRS", "EventListenerRS", "CustomMaskRS", "EatMaskRS", "MaskDrawRS", "NodeHitHookRS", "DragEventListenerRS", "DragFallRS", "DragHideShadeRS", "DragUtilRS", "SpriteDragEventManagerRS", "SpriteDragRS", "TouchComponentRS", "TransitionSceneRS", "ClickScaleRS", "CocosHelperRS", "ColorRectAssemblerRS", "ColorRectRS", "NodeCompRS", "NodeTransformRS", "BgScaleRS", "ScaleRootAdapterRS", "ViewSizeAdapterRS", "showLaodingRS", "AddControllerRS", "AnimationEventRS", "ClickControllerRS", "DataConfigRS", "DragonBoneActionsRS", "DragonCompoentRS", "DyeControllerRS", "FuseControllerRS", "HandMoveEventRS", "HandTouchEventRS", "HomeButtonRS", "MakeControllerRS", "MoreGameButtonRS", "PopupComponetRS", "PullControllerRS", "SlimeTouchEventRS", "SplitControllerRS", "TipManagerRS", "AdsManagerSD", "ButtonSafeSD", "AddEggSD", "AddIngredientsSD", "BlendMixMultipleSD", "BlenderMixSD", "CheckScribblePercentSD", "MixComponentSD", "TransformRecordSD", "IconItemSD", "MoveInSD", "OnceClickButtonSD", "RewardManagerSD", "EventListenerSD", "CustomMaskSD", "EatMaskSD", "MaskDrawSD", "NodeHitHookSD", "DragEventListenerSD", "DragFallSD", "DragHideShadeSD", "DragUtilSD", "SpriteDragEventManagerSD", "SpriteDragSD", "TouchComponentSD", "TransitionSceneSD", "ClickScaleSD", "CocosHelperSD", "ColorRectAssemblerSD", "ColorRectSD", "NodeCompSD", "NodeTransformSD", "BgScaleSD", "ScaleRootAdapterSD", "ViewSizeAdapterSD", "showLaodingSD", "AddControllerSD", "AnimationEventSD", "ChooseControllerSD", "ClickControllerSD", "DataConfigSD", "DragonBoneActionsSD", "DragonCompoentSD", "HandTouchEventSD", "HomeButtonSD", "KneadControllerSD", "KneadHandTouchSD", "MakeControllerSD", "MoreGameButtonSD", "PopupComponetSD", "PullControllerSD", "TipManagerSD" ]);